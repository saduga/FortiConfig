define("ng/system/dashboard/f-system-dashboard",["module","angular","fweb","ng/services/injector","notify","grid-list"],function(module,angular,fweb,inject,notify){"use strict";function Dashboard($element,$scope,injector){injector.injectMarked(this,{$scope:$scope,that:this}),this._loading=!0,this.dashboard=null,this.widgets=null,this.widgetsMap={},this.create?this._createDefaultDashboard():this._setupInitialDashboard()}var SLOW_NETWORK_REQUEST_TIMEOUT=500,ADD_EDIT_WIDGET_SLIDE_WIDTH=800,URI_404="/p/error/404";return Dashboard.prototype.WIDGET_SIZE=300,Dashboard.prototype.WIDGET_CATEGORIES={FORTIVIEW:"fortiview",SYSTEM:"system",RESOURCES:"resources",SECURITY_FABRIC:"fabric",MONITOR:"monitor"},Dashboard.prototype.WIDGET_CATEGORY_ICONS=function(){var icons={};return icons[Dashboard.prototype.WIDGET_CATEGORIES.FORTIVIEW]="fa-area-chart",icons[Dashboard.prototype.WIDGET_CATEGORIES.SYSTEM]="fa-info-circle",icons[Dashboard.prototype.WIDGET_CATEGORIES.RESOURCES]="fa-area-chart",icons[Dashboard.prototype.WIDGET_CATEGORIES.SECURITY_FABRIC]="ftnt-fortiguard",icons[Dashboard.prototype.WIDGET_CATEGORIES.MONITOR]="fa-pie-chart",icons}(),Dashboard.prototype.WIDGET_TYPES={SYSTEM_INFO:"sysinfo",LICENSE_INFO:"licinfo",VM_INFO:"vminfo",FORTICLOUD:"forticloud",FORTIVIEW:"fortiview",VULNERABILITY_SUMMARY:"vulnerability-summary",HOST_SCAN_SUMMARY:"host-scan-summary",ATP_STATS:"analytics",ADMINS:"admins",CPU_USAGE:"cpu-usage",MEMORY_USAGE:"memory-usage",LOG_RATE:"log-rate",SESSIONS:"sessions",SESSION_RATE:"session-rate",TRAFFIC_HISTORY:"tr-history",SECURITY_FABRIC:"security-fabric",DISK_USAGE:"disk-usage",SENSOR_INFO:"sensor-info",SECURITY_AUDIT:"security-audit",HA_STATUS:"ha-status"},Dashboard.prototype.DEFAULT_WIDGETS=inject.mark(function(that){return[that.WIDGET_TYPES.SYSTEM_INFO,that.WIDGET_TYPES.LICENSE_INFO,that.WIDGET_TYPES.VM_INFO,that.WIDGET_TYPES.FORTICLOUD,that.WIDGET_TYPES.SECURITY_FABRIC,that.WIDGET_TYPES.ADMINS,that.WIDGET_TYPES.CPU_USAGE,that.WIDGET_TYPES.MEMORY_USAGE,that.WIDGET_TYPES.SESSIONS]}),Dashboard.prototype.SCOPE={BOTH:"both",VDOM:"vdom",GLOBAL:"global"},Dashboard.prototype._scopeAllowed=inject.mark(function(state){return function(scope){var currentScope=state.getCurrentVDOMScope();return!state.vdom_mode||(scope===this.SCOPE.BOTH||(scope===this.SCOPE.GLOBAL?currentScope===state.VDOM_SCOPE.GLOBAL:currentScope===state.VDOM_SCOPE.VDOM))}}),Dashboard.prototype.WIDGET_CONFIGURATION=inject.mark(function(that,$q,state,csfTopology,lang){var ACCESS_GROUP=state.ACCESS_GROUP,mapping={};return mapping[that.WIDGET_TYPES.SYSTEM_INFO]={component:"f-system-information-widget",category:this.WIDGET_CATEGORIES.SYSTEM,limit:1,defaultRelativeWidth:1,defaultRelativeHeight:1,scope:that.SCOPE.GLOBAL,permissions:[ACCESS_GROUP.SYSTEM]},mapping[that.WIDGET_TYPES.LICENSE_INFO]={component:"f-license-information-widget",category:this.WIDGET_CATEGORIES.SYSTEM,limit:1,defaultRelativeWidth:1,defaultRelativeHeight:1,scope:that.SCOPE.GLOBAL,permissions:[ACCESS_GROUP.SYSTEM]},mapping[that.WIDGET_TYPES.VM_INFO]={component:"f-vm-information-widget",category:this.WIDGET_CATEGORIES.SYSTEM,limit:1,defaultRelativeWidth:1,defaultRelativeHeight:1,scope:that.SCOPE.GLOBAL,permissions:[ACCESS_GROUP.SYSTEM],visible:function(){return state.is_vm},notVisiblePlaceholder:function(){return lang("Not a VM").toString()}},mapping[that.WIDGET_TYPES.FORTICLOUD]={component:"f-forticloud-widget",category:this.WIDGET_CATEGORIES.SECURITY_FABRIC,limit:1,defaultRelativeWidth:1,defaultRelativeHeight:1,scope:that.SCOPE.GLOBAL,permissions:[ACCESS_GROUP.SYSTEM]},mapping[that.WIDGET_TYPES.VULNERABILITY_SUMMARY]={component:"f-vulnerability-summary-widget",category:this.WIDGET_CATEGORIES.FORTIVIEW,limit:1,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:that.SCOPE.VDOM,permissions:[ACCESS_GROUP.SYSTEM],visible:function(){return state.featureEnabled("gui-endpoint-control")},notVisiblePlaceholder:function(){return lang("Endpoint Control disabled").toString()}},mapping[that.WIDGET_TYPES.HOST_SCAN_SUMMARY]={component:"f-host-scan-summary-widget",category:this.WIDGET_CATEGORIES.FORTIVIEW,limit:1,defaultRelativeWidth:1,defaultRelativeHeight:1,scope:that.SCOPE.VDOM,permissions:[ACCESS_GROUP.SYSTEM],visible:function(){return state.featureEnabled("gui-endpoint-control")},notVisiblePlaceholder:function(){return lang("Endpoint Control disabled").toString()}},mapping[that.WIDGET_TYPES.FORTIVIEW]={component:"f-fortiview-widget",customizeComponent:"f-edit-fortiview-widget",category:this.WIDGET_CATEGORIES.FORTIVIEW,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:that.SCOPE.VDOM,permissions:[ACCESS_GROUP.SYSTEM]},mapping[that.WIDGET_TYPES.ATP_STATS]={component:"f-atp-stats-widget",category:this.WIDGET_CATEGORIES.MONITOR,limit:1,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:that.SCOPE.GLOBAL,permissions:[ACCESS_GROUP.SYSTEM],visible:function(){return state.featureEnabledInAnyVDOM("gui-antivirus")},notVisiblePlaceholder:function(){return"here"}},mapping[that.WIDGET_TYPES.CPU_USAGE]={component:"f-cpu-usage-widget",category:this.WIDGET_CATEGORIES.RESOURCES,limit:1,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:that.SCOPE.BOTH,permissions:[ACCESS_GROUP.SYSTEM]},mapping[that.WIDGET_TYPES.MEMORY_USAGE]={component:"f-mem-usage-widget",category:this.WIDGET_CATEGORIES.RESOURCES,limit:1,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:that.SCOPE.BOTH,permissions:[ACCESS_GROUP.SYSTEM]},state.has_log_disk&&(mapping[that.WIDGET_TYPES.DISK_USAGE]={component:"f-disk-usage-widget",category:this.WIDGET_CATEGORIES.RESOURCES,limit:1,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:that.SCOPE.GLOBAL,permissions:[ACCESS_GROUP.SYSTEM]}),mapping[that.WIDGET_TYPES.LOG_RATE]={component:"f-log-rate-widget",category:this.WIDGET_CATEGORIES.RESOURCES,limit:1,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:that.SCOPE.GLOBAL,permissions:[ACCESS_GROUP.SYSTEM]},mapping[that.WIDGET_TYPES.SESSIONS]={component:"f-sessions-widget",category:this.WIDGET_CATEGORIES.RESOURCES,limit:1,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:that.SCOPE.BOTH,permissions:[ACCESS_GROUP.SYSTEM]},mapping[that.WIDGET_TYPES.SESSION_RATE]={component:"f-session-rate-widget",category:this.WIDGET_CATEGORIES.RESOURCES,limit:1,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:that.SCOPE.BOTH,permissions:[ACCESS_GROUP.SYSTEM]},mapping[that.WIDGET_TYPES.ADMINS]={component:"f-system-admins-widget",category:this.WIDGET_CATEGORIES.SYSTEM,limit:1,defaultRelativeWidth:1,defaultRelativeHeight:1,scope:that.SCOPE.GLOBAL,permissions:[ACCESS_GROUP.SYSTEM]},state.vdom_mode||(mapping[that.WIDGET_TYPES.SECURITY_FABRIC]={component:"f-security-fabric-widget",category:this.WIDGET_CATEGORIES.SECURITY_FABRIC,limit:1,defaultRelativeWidth:1,defaultRelativeHeight:1,scope:that.SCOPE.GLOBAL,permissions:[ACCESS_GROUP.SYSTEM]}),state.vdom_mode||(mapping[that.WIDGET_TYPES.SECURITY_AUDIT]={component:"f-audit-history-widget",category:this.WIDGET_CATEGORIES.SECURITY_FABRIC,limit:1,defaultRelativeWidth:1,defaultRelativeHeight:1,scope:that.SCOPE.GLOBAL,permissions:[ACCESS_GROUP.SYSTEM],loadVisibleCheckDependencies:function(){return csfTopology.buildIfNecessary()},visible:function(){return csfTopology.isRootFortigate},notVisiblePlaceholder:function(){return lang("security_audit::notCsfRoot").toString()}}),mapping[that.WIDGET_TYPES.TRAFFIC_HISTORY]={component:"f-traffic-history-widget",customizeComponent:"f-edit-traffic-history-widget",category:this.WIDGET_CATEGORIES.MONITOR,defaultRelativeWidth:2,defaultRelativeHeight:1,scope:that.SCOPE.BOTH,permissions:[ACCESS_GROUP.SYSTEM],loadVisibleCheckDependencies:function(){return state.getCurrentVDOMScope()===state.VDOM_SCOPE.VDOM?$q.all([Omniselect.getSourceData("global::firewallInterfaces"),Omniselect.getSourceData("availableVdoms")]):$q.resolve()},visible:function(widget){var intf,mapping,visible=!0;if(widget&&state.getCurrentVDOMScope()===state.VDOM_SCOPE.VDOM){if(mapping=Omniselect.getSourceDataSync("global::firewallInterfaces").mapping,intf=mapping[widget.interface],!intf)throw new Error('Insufficient permissions for interface "'+widget.interface+'"');visible=intf.vdom===state.current_vdom}return visible},notVisiblePlaceholder:function(widget){var mapping=Omniselect.getSourceDataSync("global::firewallInterfaces").mapping,intf=mapping[widget.interface];return lang("VDOM {0}",[Omniselect.processedFormatEntrySync({q_origin_key:intf.vdom,datasource:"availableVdoms"})]).toString()}},fweb.BUILD.PLATFORM.HAVE_IPMC_SENSOR&&(mapping[that.WIDGET_TYPES.SENSOR_INFO]={component:"f-sensor-information-widget",category:this.WIDGET_CATEGORIES.SYSTEM,limit:1,defaultRelativeWidth:1,defaultRelativeHeight:1,scope:that.SCOPE.GLOBAL,permissions:[ACCESS_GROUP.SYSTEM]}),fweb.BUILD.PLATFORM.HAVE_HA&&(mapping[that.WIDGET_TYPES.HA_STATUS]={component:"f-system-ha-widget",category:this.WIDGET_CATEGORIES.SYSTEM,limit:1,defaultRelativeWidth:1,defaultRelativeHeight:1,scope:that.SCOPE.GLOBAL,permissions:[ACCESS_GROUP.SYSTEM]}),mapping}),Dashboard.prototype._setDashboard=function(dashboard){var i,widget;for(this.dashboard=dashboard,this.widgets=this.dashboard.widget,this.widgetsMap={},i=this.widgets.length-1;i>=0;i--)widget=this.widgets[i],this._getWidgetVisibility(widget.type,widget)===this.WIDGET_VISIBILITY.INVALID?(fweb.log.warn('Ignoring invalid/hidden widget of type "'+widget.type+'"'),this.widgets.splice(i,1)):this.widgetsMap[widget.id]=widget},Dashboard.prototype.onWidgetRemoved=function(widgetModel){var widgetID=widgetModel.getModelData().id,widgetToRemove=this.widgetsMap[widgetID];this.widgets.splice(this.widgets.indexOf(widgetToRemove),1),delete this.widgetsMap[widgetID],this._updateDashboard()},Dashboard.prototype.onWidgetsUpdated=function(widgetModels){widgetModels.forEach(function(widgetModel){var widgetID=widgetModel.getModelData().id,widget=this.widgetsMap[widgetID];widget["x-pos"]=widgetModel.getXPosition(),widget["y-pos"]=widgetModel.getYPosition(),widget.width=widgetModel.getWidth(),widget.height=widgetModel.getHeight()}.bind(this)),this._updateDashboard()},Dashboard.prototype.editWidget=inject.mark(function($rootScope,slide,lang){return function(widgetModel){var modelData=widgetModel.getModelData(),config=this.WIDGET_CONFIGURATION[modelData.type],typeLabel=lang("dashboard_widget_type::"+modelData.type),template='<f-edit-dashboard-widget widget-model="::widgetModel" component="::\''+config.customizeComponent+"'\"></f-edit-dashboard-widget>",scope=$rootScope.$new();scope.widgetModel=widgetModel,slide.open("dashboardEditWidget",{template:template,parentScope:scope,data:{},options:{title:lang("Edit Dashboard Widget - {0}",[typeLabel]).toString(),fullHeight:!0,width:ADD_EDIT_WIDGET_SLIDE_WIDTH}}).then(function(data){var updated=data.updatedWidget,widget=this.widgetsMap[updated.id];Object.assign(widget,updated),this._updateDashboard().then(function(){this.dashboardController.reinstantiateWidget(widgetModel.getID(),widget)}.bind(this))}.bind(this)).finally(function(){scope.$destroy()})}}),Dashboard.prototype.WIDGET_VISIBILITY={INVALID:"invalid",DISABLED:"disabled",VISIBLE:"visible"},Dashboard.prototype._getWidgetVisibility=inject.mark(function(state){return function(widgetType,widget){var hasAccess,widgetConfiguration=this.WIDGET_CONFIGURATION[widgetType],visibility=this.WIDGET_VISIBILITY.INVALID,isPermitted=function(permission){return state.adminHasReadPermission(permission)};if(hasAccess=widgetConfiguration&&this._scopeAllowed(widgetConfiguration.scope)&&(!widgetConfiguration.permissions||widgetConfiguration.permissions.every(isPermitted)))try{visibility="function"!=typeof widgetConfiguration.visible||widgetConfiguration.visible(widget)?this.WIDGET_VISIBILITY.VISIBLE:state.getCurrentVDOMScope()===state.VDOM_SCOPE.VDOM?this.WIDGET_VISIBILITY.DISABLED:this.WIDGET_VISIBILITY.INVALID}catch(e){fweb.log.warn(e),visibility=this.WIDGET_VISIBILITY.INVALID}return visibility}}),Dashboard.prototype._getNextWidgetID=function(){for(var nextID=1;;){if(!this.widgetsMap[nextID])break;nextID++}return nextID},Dashboard.prototype.addWidget=inject.mark(function($http,$route,slide,lang){return function(prefilledWidget){var filteredWidgetTypes={},add=function(newWidget){var position,width=this.dashboardController.convertRelativeWidgetWidthToActual(this.WIDGET_CONFIGURATION[newWidget.type].defaultRelativeWidth),height=this.dashboardController.convertRelativeWidgetHeightToActual(this.WIDGET_CONFIGURATION[newWidget.type].defaultRelativeHeight);newWidget.id=this._getNextWidgetID(),newWidget.width=width,newWidget.height=height,position=this.dashboardController.getFirstAvailablePosition(newWidget.width,newWidget.height),newWidget["x-pos"]=position.x,newWidget["y-pos"]=position.y,this.widgets.push(newWidget),this.widgetsMap[newWidget.id]=newWidget,this._updateDashboard().then(function(){var widgetModel=this._createWidgetModel(newWidget);this.dashboardController.addWidget(widgetModel)}.bind(this))}.bind(this);Object.keys(this.WIDGET_TYPES).forEach(function(key){var type=this.WIDGET_TYPES[key];this._getWidgetVisibility(type)===this.WIDGET_VISIBILITY.VISIBLE&&(filteredWidgetTypes[key]=type)}.bind(this));var promise=slide.open("dashboardAddWidget",{template:"<f-widget-selection></f-widget-selection>",data:{WIDGET_TYPES:filteredWidgetTypes,WIDGET_CATEGORIES:this.WIDGET_CATEGORIES,WIDGET_CATEGORY_ICONS:this.WIDGET_CATEGORY_ICONS,WIDGET_CONFIGURATION:this.WIDGET_CONFIGURATION,currentWidgets:this.widgets,addCallback:add,prefilledWidget:prefilledWidget},options:{title:lang("Add Dashboard Widget").toString(),fullHeight:!0,width:ADD_EDIT_WIDGET_SLIDE_WIDTH}});return this.showHiddenControls=!1,promise}}),Dashboard.prototype.editDashboard=inject.mark(function($location,$rootScope,$route,slide,lang,state){return function(mkey,name){var title=lang(mkey?"Edit Dashboard":"Add Dashboard").toString(),scope=$rootScope.$new(),data={};scope.mkey=mkey,slide.open("dashboardEdit",{template:'<f-dashboard-edit mkey="mkey"></f-dashboard-edit>',data:data,parentScope:scope,options:{title:title,fullHeight:!0}}).then(function(){var FULL_RELOAD_KEYS=["layout-type"],fullReload=FULL_RELOAD_KEYS.some(function(key){return this.dashboard[key]!==data.updatedDashboard[key]}.bind(this));mkey?fullReload?(state.refresh(),$route.reload()):(name&&name!==data.updatedDashboard.name&&state.refresh(),delete data.updatedDashboard.widget,angular.extend(this.dashboard,data.updatedDashboard)):state.refresh()}.bind(this)).finally(function(){scope.$destroy()}),this.showHiddenControls=!1}}),Dashboard.prototype.deleteDashboard=inject.mark(function($http,$location,lang,state,slide){return function(){var message=lang("delete_dashboard_warning").toString();slide.confirm(message).then(function(){$http.delete(this._DASHBOARD_URI).then(function(){state.refresh().then(function(){$location.url("/")})},this._onFailureToSave)}.bind(this))}}),Dashboard.prototype._createDefaultDashboard=inject.mark(function($http,$routeParams,$location,$route,state,lang){return function(){return $http.post(this._BASE_URI,{name:$routeParams.name||lang("Main").toString(),scope:state.getCurrentVDOMScope(),"layout-type":"responsive",widget:this._getDefaultWidgets()}).then(function(response){var mkey=response.data.mkey;mkey===Number($routeParams.id)?$route.reload():$location.url("/system/dashboard/"+response.data.mkey),state.refresh()}.bind(this),this._notifyFailure)}}),Dashboard.prototype._updateDashboard=inject.mark(function($http,$q,$timeout){return function(){var timeout=$timeout(function(){this._loading=!0}.bind(this),SLOW_NETWORK_REQUEST_TIMEOUT);return $http.put(this._DASHBOARD_URI,this.dashboard).then(function(){$timeout.cancel(timeout),this._loading=!1}.bind(this),function(){return this._onFailureToSave(),$q.reject()}.bind(this))}}),Dashboard.prototype._getDefaultWidgets=function(){var widgets=this.DEFAULT_WIDGETS.map(function(type){var widget={};return widget.type=type,widget});return widgets=widgets.filter(function(widget){return this._getWidgetVisibility(widget.type)===this.WIDGET_VISIBILITY.VISIBLE}.bind(this)).map(function(widget,index){return angular.extend(widget,{width:this.WIDGET_CONFIGURATION[widget.type].defaultRelativeWidth,height:1,"x-pos":index+1,"y-pos":1}),widget}.bind(this))},Dashboard.prototype.resetDashboards=inject.mark(function($http,$q,$location,state,lang){return function(){var scope=state.VDOM_SCOPE.GLOBAL,msg=lang("confirm_reset_dashboards").toString();state.vdom_mode&&(scope=state.getCurrentVDOMScope(),msg=lang("confirm_reset_dashboards_"+scope).toString()),$q.when(fweb.util.slide.confirm(msg)).then(function(){$http.get(this._BASE_URI).then(function(result){var results=result.data.results.filter(function(dashboard){return dashboard.scope===scope}),promises=results.map(function(dashboard){return $http.delete(this._BASE_URI+"/"+dashboard.id)}.bind(this));$q.all(promises).then(function(){this._createDefaultDashboard()}.bind(this),this._onFailureToSave)}.bind(this))}.bind(this))}}),Dashboard.prototype._BASE_URI=inject.mark(function(state){return"/api/v2/cmdb/system/admin/"+encodeURIComponent(state.admin.name)+"/gui-dashboard"}),Dashboard.prototype._DASHBOARD_URI=inject.mark(function($routeParams){return this._BASE_URI+"/"+$routeParams.id}),Dashboard.prototype._notifyFailure=inject.mark(function(lang){return function(){var msg=lang("Failed to save changes").toString();notify.post(msg,notify.LEVEL.ERROR)}}),Dashboard.prototype._onFailureToSave=inject.mark(function($route,that){return function(){this._notifyFailure(),$route.reload()}.bind(that)}),Dashboard.prototype._createWidgetModel=inject.mark(function(DashboardWidgetModel){return function(widget){var type=widget.type,configuration=this.WIDGET_CONFIGURATION[type],component=configuration.component;return this._getWidgetVisibility(type,widget)===this.WIDGET_VISIBILITY.DISABLED&&(component="f-disabled-dashboard-widget","function"==typeof configuration.notVisiblePlaceholder&&(widget.disabledPlaceholder=configuration.notVisiblePlaceholder(widget))),new DashboardWidgetModel({componentTag:component,xPosition:widget["x-pos"],yPosition:widget["y-pos"],width:widget.width,height:widget.height,modelData:widget})}}),Dashboard.prototype._setupInitialDashboard=inject.mark(function($q,$location,$http,state){return function(){var promises=[$http.get(this._DASHBOARD_URI)];Object.keys(this.WIDGET_CONFIGURATION).forEach(function(type){var config=this.WIDGET_CONFIGURATION[type];config.scope!==this.SCOPE.BOTH&&config.scope!==state.getCurrentVDOMScope()||"function"!=typeof config.loadVisibleCheckDependencies||(promises[type]=config.loadVisibleCheckDependencies())}.bind(this)),$q.all(promises).then(function(responses){var dashboard=responses[0].data.results[0];this._setDashboard(dashboard),this.dashboard.scope!==state.getCurrentVDOMScope()&&$location.url(URI_404),this.initialWidgets=this.widgets.map(function(widget){return this._createWidgetModel(widget)}.bind(this)),this._loading=!1;var search=$location.search();if(search.newWidget){var clearSearch=function(){$location.search("newWidget",null)};this.addWidget(JSON.parse(search.newWidget)).then(clearSearch,clearSearch)}}.bind(this),function(){$location.url(URI_404)})}}),function(providers,loader){return providers.$compile.component("fSystemDashboard",{templateUrl:function(loader){return loader.base_path("f-system-dashboard.html",module)},controller:Dashboard,bindings:{create:"<"}}),loader.initModules(["templates","f-edit-dashboard-widget","f-atp-stats-widget","f-audit-history-widget","f-cpu-per-core-usage","f-cpu-usage-widget","f-current-admins","f-disk-usage-widget","f-forticloud-widget","f-fortiview-widget","f-vulnerability-summary-widget","f-host-scan-summary-widget","f-license-information-widget","f-log-rate-widget","f-mem-usage-widget","f-security-fabric-widget","f-session-rate-widget","f-sessions-widget","f-system-admins-widget","f-system-information-widget","f-edit-fortiview-widget","f-edit-traffic-history-widget","f-traffic-history-widget","f-sensor-information-widget","f-system-ha-widget","f-disabled-dashboard-widget","f-widget-selection","f-dashboard-edit","f-ha-history","f-vm-information-widget","services/system-resource-usage","services/vulnerability-summary-data","services/widget_shared","../../services/ftnt_compile","../../services/icon_code"],module)}}),define("ng/system/dashboard/f-atp-stats-widget",["module","angular","ng/services/injector"],function(module,angular,inject){"use strict";function ATPStatsWidget(injector,$scope,$element,$timeout){injector.injectMarked(this,{$scope:$scope}),this.loading=!0,this._timeoutPromise=null,this._running=!0,this._setupShowGraphWatch(),this._run(),$scope.$on("fChartSizeChangeStart",function(){this.chartResizing=!0}.bind(this)),$scope.$on("fChartSizeChangeEnd",function(){this.chartResizing=!1}.bind(this)),$scope.$on("$destroy",function(){$timeout.cancel(this._timeoutPromise),this._running=!1}.bind(this))}var CHART_COLORS=Chart.prototype.COLORS,AV_RESPONSE_KEYS=["scanned","infected","behavior","suspicious","clean"],SANDBOX_RESPONSE_KEYS=["submitted","detected","risk_high",["risk_med_low",["risk_med","risk_low"]],"clean"];return ATPStatsWidget.prototype.AV_LABELS=inject.mark(function(lang){return{infected:lang("Malicious").toString(),behavior:lang("Zero-Day Malware Variants").toString(),suspicious:lang("suspicious").toString(),clean:lang("clean").toString()}}),ATPStatsWidget.prototype.AV_COLORS={infected:CHART_COLORS.RED,behavior:CHART_COLORS.ORANGE,suspicious:CHART_COLORS.BLUE,clean:CHART_COLORS.GREEN},ATPStatsWidget.prototype.SANDBOX_LABELS=inject.mark(function(lang){return{detected:lang("Malicious").toString(),risk_high:lang("Suspicious - High Risk").toString(),risk_med_low:lang("Suspicious - Med/Low Risk").toString(),clean:lang("clean").toString()}}),ATPStatsWidget.prototype.SANDBOX_COLORS={detected:CHART_COLORS.RED,risk_high:CHART_COLORS.ORANGE,risk_med_low:CHART_COLORS.BLUE,clean:CHART_COLORS.GREEN},ATPStatsWidget.prototype._setupShowGraphWatch=inject.mark(function($scope){return function(){$scope.$watchGroup(["$ctrl.widgetModel.getRelativeWidth()","$ctrl.widgetModel.getRelativeHeight()"],function(results){var width=results[0],height=results[1];this.fullDimension=height>=1.4||width>=2.5&&height>=1,this.showGraphs=width>=1.5}.bind(this))}}),ATPStatsWidget.prototype._aggregateResponseStats=function(response,keys){var stats={};return Array.isArray(response)||(response=[response]),response.forEach(function(vdomResponse){var vdomResults=vdomResponse.results;keys.forEach(function(key){var targetKey,isSubArray=Array.isArray(key);targetKey=isSubArray?key[0]:key,null==stats[targetKey]&&(stats[targetKey]=0),isSubArray?key[1].forEach(function(subKey){stats[targetKey]+=vdomResults[subKey]}):stats[targetKey]+=vdomResults[key]})}),stats},ATPStatsWidget.prototype._createChart=inject.mark(function($filter,lang){var numberFilter=$filter("number");return function(stats,labelMap,colorMap){var SKIPPED_KEYS={scanned:!0,submitted:!0},data=Object.keys(stats).map(function(key){if(!SKIPPED_KEYS[key])return{label:labelMap[key],color:colorMap[key],data:stats[key]}}).filter(function(value){return!!value});return{data:data,options:{series:{pie:{show:!0,label:{show:!1},radius:.95,innerRadius:.4,highlight:{opacity:0}}},legend:{show:!1}},tooltips:!0,tooltip_formatter:function(label,x,y){return label+": "+lang("{0} files",[numberFilter(y)]).toString()}}}}),ATPStatsWidget.prototype._render=inject.mark(function($timeout){return function(){this.sandboxStatus&&this.avStats&&this.sandboxStats&&$timeout(function(){this.avChartConfig=this._createChart(this.avStats,this.AV_LABELS,this.AV_COLORS),this.sandboxChartConfig=this._createChart(this.sandboxStats,this.SANDBOX_LABELS,this.SANDBOX_COLORS),this.loading=!1}.bind(this))}}),ATPStatsWidget.prototype._run=inject.mark(function($scope,notificationRequests){return function(){notificationRequests.watch($scope,"sandboxStatus",function(status){this.sandboxStatus=status,this._render()}.bind(this),!0),this._updateStats()}}),ATPStatsWidget.prototype._updateStats=inject.mark(function($q,$http,$timeout,notificationRequests,state,widgetShared){return function(){var promises,params={};return state.vdom_mode&&state.admin.global_admin&&(params.global=1),promises=[$http.get("/api/v2/monitor/utm/antivirus/stats",{params:params}),$http.get("/api/v2/monitor/system/sandbox/stats",{params:params})],$q.all(promises).then(function(responses){var avResponse=responses[0],sandboxResponse=responses[1];this.avStats=this._aggregateResponseStats(avResponse.data,AV_RESPONSE_KEYS),this.sandboxStats=this._aggregateResponseStats(sandboxResponse.data,SANDBOX_RESPONSE_KEYS),this._render()}.bind(this)).finally(function(){this._running&&(this._timeoutPromise=$timeout(this._updateStats.bind(this),widgetShared.REFRESH_INTERVAL.LONG))}.bind(this))}}),ATPStatsWidget.prototype.toggleMenu=function(menu,event){menu.toggle({top:event.clientY,left:event.clientX})},ATPStatsWidget.prototype.showSystemFabric=inject.mark(function($location){return function(){$location.url("/system/external_security")}}),function(providers){providers.$compile.component("fAtpStatsWidget",{templateUrl:function(loader){return loader.base_path("f-atp-stats-widget.html",module)},controller:ATPStatsWidget,bindings:{widgetModel:"<"}})}}),define("ng/system/dashboard/f-audit-history-widget",["module","angular","fweb","ng/services/injector"],function(module,angular,fweb,inject){"use strict";function AuditHistoryWidget($scope,injector,state){injector.injectMarked(this,{$scope:$scope}),$scope.$watch("$ctrl.widgetModel.getRelativeWidth()",function(width){this.relativeWidth=width}.bind(this)),this.hasMenu=state.admin.super_admin,this.update()}var SECOND_PER_MINUTE=60,SECOND_PER_HOUR=60*SECOND_PER_MINUTE,SECOND_PER_DAY=24*SECOND_PER_HOUR;return AuditHistoryWidget.prototype.ONE_SECOND=1e3,AuditHistoryWidget.prototype.MIN_ARROW_WIDTH=1.2,AuditHistoryWidget.prototype._parseInterval=inject.mark(function(lang){return function(interval,key){interval>=SECOND_PER_DAY?this[key]=lang("{NUMBER} day(s) ago",[Math.ceil(interval/SECOND_PER_DAY)]):interval>=SECOND_PER_HOUR?this[key]=lang("{NUMBER} hour(s) ago",[Math.ceil(interval/SECOND_PER_HOUR)]):this[key]=lang("{NUMBER} minute(s) ago",[Math.trunc(interval/SECOND_PER_MINUTE)])}}),AuditHistoryWidget.prototype.timeFormatted=inject.mark(function($filter){var dateFilter=$filter("date");return function(timestamp){return dateFilter(timestamp*this.ONE_SECOND,"yyyy/MM/dd HH:mm:ss")}}),AuditHistoryWidget.prototype.update=inject.mark(function($http,lang){return function(){this.loading=!0;var poll=function(){$http.get("/api/v2/monitor/system/audit").then(function(response){var interval,results=response.data.results,nowInSeconds=Math.trunc((new Date).getTime()/1e3);results.current.timestamp?(interval=nowInSeconds-results.current.timestamp,this._parseInterval(interval,"currentUpdate")):this.currentUpdate=lang("Latest"),angular.extend(this,results),this.loading=!1}.bind(this),function(){fweb.log.error("Failed to fetch system audit history.")})}.bind(this);poll()}}),AuditHistoryWidget.prototype.toggleMenu=function(menu,event){this.hasMenu&&menu.toggle({top:event.pageY,left:event.pageX})},AuditHistoryWidget.prototype.redirectToSecurityAudit=inject.mark(function($location){return function(){$location.path("/report/audit")}}),function(providers){providers.$compile.component("fAuditHistoryWidget",{templateUrl:function(loader){return loader.base_path("f-audit-history-widget.html",module)},controller:AuditHistoryWidget,bindings:{widgetModel:"<"}})}}),define("ng/system/dashboard/f-cpu-per-core-usage",["ng/services/injector","module"],function(inject,module){"use strict";function CpuPerCoreUsage($scope,injector,slide,systemResourceUsage){injector.injectMarked(this,{$scope:$scope}),this._slide=slide.get("cpu_per_core_usage"),this.timeOptions=systemResourceUsage.getTimeOptions(),this.currentTimeOption=this._slide.data.currentTimeOption,systemResourceUsage.registerWatch($scope.$id),$scope.$watch(function(){return systemResourceUsage.resources.cpu}.bind(this),function(cpuUsage){cpuUsage&&cpuUsage.length&&(this.cores=cpuUsage.splice(1),this._plot())}.bind(this)),$scope.$on("$destroy",function(){systemResourceUsage.unRegisterWatch($scope.$id)})}return CpuPerCoreUsage.prototype.COLOR=Chart.prototype.COLORS.BLUE,CpuPerCoreUsage.prototype._plot=inject.mark(function($filter){var dateFilter=$filter("date");return function(){this.lineChartConfigs=this.cores.map(function(core){var coreHistory=core.historical[this.currentTimeOption.option];return{data:[{data:coreHistory.values,color:this.COLOR,currentUsage:core.current}],options:{xaxis:{mode:"time",timezone:"browser",min:coreHistory.start-100,max:coreHistory.end+100},yaxis:{min:0,max:100,tickFormatter:function(value){return value+"%"}},series:{lines:{fill:!0},stack:!0},legend:{show:!1}},tooltips:!0,tooltip_formatter:function(label,x,y){var time=dateFilter(x,"mediumTime");return time+": "+y+"%"}}}.bind(this))}}),CpuPerCoreUsage.prototype.setTimeOption=function(timeOption){this.currentTimeOption=timeOption,this._plot()},function(providers){providers.$compile.component("fCpuPerCoreUsage",{controller:CpuPerCoreUsage,templateUrl:function(loader){return loader.base_path("f-cpu-per-core-usage.html",module)}})}}),define("ng/system/dashboard/f-cpu-usage-widget",["ng/services/injector","module"],function(inject,module){"use strict";function CpuUsageWidget($scope,injector,state){injector.injectMarked(this,{$scope:$scope}),this.isGlobal=!state.vdom_mode||""===state.current_vdom,this.resource="cpu",this._init()}var WIDGET_KEY="cpu-usage";return CpuUsageWidget.prototype.COLOR=Chart.prototype.COLORS.BLUE,CpuUsageWidget.prototype={_init:inject.mark(function($scope,systemResourceUsage){return function(){this.timeOptions=systemResourceUsage.getTimeOptions(),this.currentTimeOption=systemResourceUsage.getTimeOptionForWidget(WIDGET_KEY),systemResourceUsage.registerWatch($scope.$id),$scope.$watch(function(){return systemResourceUsage.resources[this.resource]}.bind(this),function(cpuUsage){cpuUsage&&cpuUsage.length&&(this.cpuUsage=cpuUsage,this.singleCoreUnit=cpuUsage.length<=2,this.currentUsage=cpuUsage[0].current,this._plot())}.bind(this)),$scope.$watch("$ctrl.widgetModel.getRelativeWidth()",function(curr,prev){curr!==prev&&this._plot()}.bind(this)),$scope.$on("$destroy",function(){systemResourceUsage.unRegisterWatch($scope.$id)})}}),_plot:inject.mark(function($filter,lang,systemResourceUsage){var dateFilter=$filter("date");return function(){var data=[];this.singleCoreUnit||(data=this.cpuUsage.filter(function(datum,idx){return idx>0}).map(function(datum,idx){return{label:lang("Core {0}",[idx+1]).toString(),color:"rgb(200, 200, 200)",data:datum.historical[this.currentTimeOption.option].values,cpuUsage:"core"}}.bind(this)));var avgCpuDataEntry=this.cpuUsage[0].historical[this.currentTimeOption.option];data.push({label:lang("Average Usage").toString(),data:avgCpuDataEntry.values,color:this.COLOR,cpuUsage:"avg"}),this.lineChartConfig={data:data,options:{xaxis:systemResourceUsage.plotFormatters.xAxisConfig(this.widgetModel,avgCpuDataEntry.start,avgCpuDataEntry.end,"1-min"!==this.currentTimeOption.option),yaxis:{min:0,max:100,tickFormatter:function(value){return value+"%"}},legend:{show:!1},series:{stack:!(this.isGlobal&&!this.singleCoreUnit)},lines:{show:!0,fill:!(this.isGlobal&&!this.singleCoreUnit)}},tooltips:!0,tooltip_formatter:function(label,x,y){var time=dateFilter(x,"mediumTime"),graphLabel=time+": "+y+"%";return this.singleCoreUnit?graphLabel:label+" - "+graphLabel}.bind(this)}}}),setTimeOption:inject.mark(function(systemResourceUsage){return function(timeOption){this.currentTimeOption=timeOption,systemResourceUsage.saveTimeOptionForWidget(WIDGET_KEY,timeOption),this._plot()}}),showPerCoreUsage:inject.mark(function(lang,slide){return function(){var slideParams={template:"<f-cpu-per-core-usage></f-cpu-per-core-usage>",options:{title:lang("Per Core CPU Usage").toString(),closeOnEscape:!0,fullHeight:!0},data:{currentTimeOption:this.currentTimeOption}};slide.open("cpu_per_core_usage",slideParams);
}}),toggleMenu:function(menu,event){menu.toggle({top:event.clientY,left:event.clientX})}},function(providers){providers.$compile.component("fCpuUsageWidget",{templateUrl:function(loader){return loader.base_path("f-cpu-usage-widget.html",module)},controller:CpuUsageWidget,bindings:{widgetModel:"<"}})}}),define("ng/system/dashboard/f-current-admins",["module","fweb","ng/services/injector","notify","jquery"],function(module,fweb,inject,notify,$){"use strict";function CurrentAdmins(injector){injector.injectMarked(this),this.setQlistOptions(),this.getCurrentAdmins()}return CurrentAdmins.prototype={getCurrentAdmins:inject.mark(function($http){return function(){this.qlistSource=$http.get("/api/v2/monitor/system/current-admins").then(function(response){return response.data.results})}}),setQlistOptions:inject.mark(function(lang,state){return function(){function loadQtips(){$(".qtip-tooltip").ftip()}function formatFn(td,column,row){return"<div><span>"+row[column.selector]+"</span></div>"}function formatAdminFn(td,column,row){var tmpl="<div>";return tmpl+='<f-icon class="'+(row.is_current?'fa-user is_current qtip-tooltip" title="'+lang("Your current session")+'"':'"')+"></f-icon>",tmpl+="<span>"+row.admin+"</span>",tmpl+="</div>"}function formatTimeFn(td,column,row){var timestampLogin=state.fortiGateUTCToBrowserUTC(row.time),timestampNow=(new Date).getTime(),timestampDiff=(timestampNow-timestampLogin)/1e3,timeSince=fweb.util.datetime.humanize_seconds(timestampDiff>=0?timestampDiff:0),formattedDateTime=fweb.util.datetime.getLocalDate(timestampLogin),tmpl="<div>";return tmpl+='<span class="qtip-tooltip" title="Connected on: '+formattedDateTime+'">'+timeSince+"</span>",tmpl+="</div>"}function formatMethodFn(td,column,row){return"<div><span>"+lang("AdminConnection::metnod."+row[column.selector])+"</span></div>"}this.qlistOptions={prefix:"current-admins",default_columns:["admin","profile","method","srcaddr","time"],columns:[{selector:"admin",lang_key:"Username"},{selector:"profile",lang_key:"Profile"},{selector:"method",lang_key:"method"},{selector:"srcaddr",lang_key:"src_addr"},{selector:"time",lang_key:"connect"}],column_filters:{enabled:!0},format_fn:{admin:formatAdminFn,profile:formatFn,method:formatMethodFn,srcaddr:formatFn,time:formatTimeFn},callbacks:{load:loadQtips,post_paging:loadQtips}}}}),canDisconnect:inject.mark(function($rootScope){return function(selected){var entries=selected||[];return!($rootScope.ADMIN_RO||!entries.length)&&(this.selectedAdmins=entries,entries.some(function(entry){return entry.disconnect_enabled&&!entry.is_current}))}}),disconnectSelectedAdmins:inject.mark(function($http,dialog,lang){return function(){function disconnectAdmins(){var postParams={admins:canDisconnectList};$http.post("/api/v2/monitor/system/disconnect-admins",postParams).then(function(){notify.post(lang("User session(s) disconnected successfully.").toString(),"success"),this.getCurrentAdmins()}.bind(this),function(){notify.post(lang("Error disconnecting user session(s).").toString(),"error")})}var disconnectAdminsFn=disconnectAdmins.bind(this),canDisconnectList=this.selectedAdmins.filter(function(admin){return admin.disconnect_enabled&&!admin.is_current});canDisconnectList.length!==this.selectedAdmins.length?$.confirm(lang("One or more sessions cannot be disconnected. Proceed?").toString()).then(disconnectAdminsFn):disconnectAdminsFn()}})},function(providers){providers.$compile.component("fCurrentAdmins",{templateUrl:function(loader){return loader.base_path("f-current-admins.html",module)},controller:CurrentAdmins})}}),define("ng/system/dashboard/f-disabled-dashboard-widget",["module"],function(module){"use strict";function DisabledWidget(){this.data=this.widgetModel.getModelData(),this.type=this.data.type}return function(providers){providers.$compile.component("fDisabledDashboardWidget",{templateUrl:function(loader){return loader.base_path("f-disabled-dashboard-widget.html",module)},controller:DisabledWidget,bindings:{widgetModel:"<"}})}}),define("ng/system/dashboard/f-disk-usage-widget",["ng/services/injector","module"],function(inject,module){"use strict";function DiskUsageWidget($scope,injector){injector.injectMarked(this,{$scope:$scope}),this.resource="disk",this._init()}var WIDGET_KEY="disk-usage";return DiskUsageWidget.prototype={COLOR:Chart.prototype.COLORS.INDIGO,_init:inject.mark(function($scope,systemResourceUsage){return function(){this.timeOptions=systemResourceUsage.getTimeOptions(),this.currentTimeOption=systemResourceUsage.getTimeOptionForWidget(WIDGET_KEY),systemResourceUsage.registerWatch($scope.$id),$scope.$watch(function(){return systemResourceUsage.resources[this.resource]}.bind(this),function(diskUsage){diskUsage&&diskUsage.length&&(this.diskUsage=diskUsage,this.currentDiskUsage=diskUsage[0].current,this._plot())}.bind(this)),$scope.$watch("$ctrl.widgetModel.getRelativeWidth()",function(curr,prev){curr!==prev&&this._plot()}.bind(this)),$scope.$on("$destroy",function(){systemResourceUsage.unRegisterWatch($scope.$id)})}}),_plot:inject.mark(function($filter,systemResourceUsage){var dateFilter=$filter("date");return function(){var diskUsageHistory=this.diskUsage[0].historical[this.currentTimeOption.option],data=[{data:diskUsageHistory.values,color:this.COLOR}];this.lineChartConfig={data:data,options:{xaxis:systemResourceUsage.plotFormatters.xAxisConfig(this.widgetModel,diskUsageHistory.start,diskUsageHistory.end,"1-min"!==this.currentTimeOption.option),yaxis:{tickFormatter:function(value){return value+"%"},min:0,tickDecimals:0},series:{lines:{fill:!0},stack:!0},legend:{show:!1}},tooltips:!0,tooltip_formatter:function(label,x,y){var time=dateFilter(x,"mediumTime");return time+": "+y+"%"}}}}),setTimeOption:inject.mark(function(systemResourceUsage){return function(timeOption){this.currentTimeOption=timeOption,systemResourceUsage.saveTimeOptionForWidget(WIDGET_KEY,timeOption),this._plot()}})},function(providers){providers.$compile.component("fDiskUsageWidget",{templateUrl:function(loader){return loader.base_path("f-disk-usage-widget.html",module)},controller:DiskUsageWidget,bindings:{widgetModel:"<"}})}}),define("ng/system/dashboard/f-edit-dashboard-widget",["module","angular","ng/services/injector"],function(module,angular,inject){"use strict";function EditDashboardWidget($scope,injector,slide){injector.injectMarked(this,{$scope:$scope}),this._slide=slide.get("dashboardEditWidget"),this.data=Object.assign({},this.widgetModel.getModelData()),this.template="<"+this.component+' widget="::$ctrl.data"></'+this.component+">",POSITIONAL_ATTRIBUTES.forEach(function(key){delete this.data[key]}.bind(this))}var POSITIONAL_ATTRIBUTES=["x-pos","y-pos","width","height"];return EditDashboardWidget.prototype.submit=inject.mark(function($scope){return function(){if(!this.form.$valid)return void $scope.$broadcast("validation-msg_show");var data=this.data;"function"==typeof this.beforeSubmitFn&&(data=this.beforeSubmitFn(angular.copy(this.data))),this._slide.data.updatedWidget=data,this._slide.slide.done()}}),EditDashboardWidget.prototype.beforeSubmit=function(beforeSubmitFn){this.beforeSubmitFn=beforeSubmitFn},function(providers){providers.$compile.component("fEditDashboardWidget",{templateUrl:function(loader){return loader.base_path("f-edit-dashboard-widget.html",module)},controller:EditDashboardWidget,bindings:{widgetModel:"<",component:"<"}})}}),define("ng/system/dashboard/f-edit-fortiview-widget",["module","angular","ng/services/injector"],function(module,angular,inject){"use strict";function EditFortiview(injector,$scope,fortiviewData,fortiviewConfig,state){injector.injectMarked(this,{$scope:$scope}),this.reportByOptions=Object.keys(fortiviewData.REPORT_BY).filter(function(reportBy){return fortiviewData.REPORT_BY[reportBy]!==fortiviewData.REPORT_BY.SESSIONS}).map(function(reportBy){var reportByValue=fortiviewData.REPORT_BY[reportBy],config=fortiviewConfig.getFortiviewConfig(reportByValue);return config&&{value:reportByValue,lang:config&&config.lang}}).filter(angular.identity),this.widget.filters=this.widget.filters||[],this.filterEnabled=!!this.widget.filters.length,this.widget.timeframe=this.widget.timeframe||state.FORTIVIEW_TIME_PERIODS.REALTIME,this.widget["report-by"]=this.widget["report-by"]||fortiviewData.REPORT_BY.SOURCE,this.widget["sort-by"]=this.widget["sort-by"]||"bytes",this.$onInit=function(){var parentController=this.widgetSelection||this.editDashboard;parentController.beforeSubmit(function(data){return this.filterEnabled||(data.filters=[]),data.filters.forEach(function(filter){var filterConfig=this.filterConfigMapping[filter.key];filterConfig&&filterConfig.valueFunction&&(filter.value=filterConfig.valueFunction(filter.value))}.bind(this)),data}.bind(this))}.bind(this),this.visualizationIconMap={table:"fa-table",bubble:"ftnt-bubbles",country:"ftnt-globe",chord:"ftnt-traffic"},this.setupWatches()}return EditFortiview.prototype.updateSortByOptions=inject.mark(function(fortiviewData,state){return function(config,timeframe){var realtimeTimeframe=timeframe===state.FORTIVIEW_TIME_PERIODS.REALTIME;this.sortOptions=config.columns.filter(function(column){var columnVisible=realtimeTimeframe&&!column.hideIfRealtime||!realtimeTimeframe&&!column.hideIfHistorical,columnSortable=fortiviewData.SORTABLE_COLUMNS.indexOf(column.key)!==-1||config.sortByOptions&&config.sortByOptions.indexOf(column.key)!==-1;return columnVisible&&columnSortable});var currentSort=this.sortOptions.find(function(column){return column.key===this.widget["sort-by"]}.bind(this));this.widget["sort-by"]=currentSort&&currentSort.key||this.sortOptions[0].key}}),EditFortiview.prototype.setupWatches=inject.mark(function($scope,fortiviewData,csfTopology,fortiviewConfig,state,fortiviewVisualization){return function(){var allTimeframeOptions=this.timeframeOptions=state.getFortiViewTimeframeOptions();$scope.$watch("$ctrl.widget.timeframe",function(timeframe){var fvConfig=fortiviewConfig.getFortiviewConfig(this.widget["report-by"]);fvConfig&&timeframe&&this.updateSortByOptions(fvConfig,timeframe)}.bind(this)),$scope.$watch("$ctrl.filterEnabled",function(enabled){enabled&&!this.widget.filters.length&&(this.widget.filters=[{}])}.bind(this)),$scope.$watch('$ctrl.widget["report-by"]',function(reportBy){var fvConfig=fortiviewConfig.getFortiviewConfig(reportBy),visualizationConfig=fortiviewVisualization.getVisualizationConfig(reportBy);this.visualizationOptions=visualizationConfig&&(visualizationConfig.widgetSupported||visualizationConfig.supported)||[fortiviewVisualization.TYPES.TABLE],this.visualizationOptions.indexOf(this.widget.visualization)<0&&(this.widget.visualization=this.visualizationOptions[0]),this.latestTimeframe=fvConfig.useLatest;var realtime=state.FORTIVIEW_TIME_PERIODS.REALTIME;if(this.timeframeOptions=allTimeframeOptions.filter(function(timeframe){return timeframe===realtime&&!fvConfig.realtimeDisabled||timeframe!==realtime&&!fvConfig.historicalDisabled}),this.timeframeOptions.indexOf(this.widget.timeframe)<0&&(this.widget.timeframe=this.timeframeOptions[0]),this.updateSortByOptions(fvConfig,this.widget.timeframe),this.filterConfigs=(fvConfig.filters||[]).map(function(filter){return fortiviewData.FILTER_CONFIG[filter]}),csfTopology.csfEnabled){var csfFilter=fortiviewData.FILTER_CONFIG[fortiviewData.FILTER.FORTIGATE];this.filterConfigs.push(csfFilter)}this.omniselectConfigs={},this.filterConfigMapping={},this.filterConfigs.forEach(function(filterConfig){this.filterConfigMapping[filterConfig.key]=filterConfig,filterConfig.source&&(this.omniselectConfigs[filterConfig.key]={sources:filterConfig.source,singleSelect:!0,insideSlide:!0})}.bind(this)),this.widget.filters.forEach(function(filter){var filterConfig=this.filterConfigMapping[filter.key];if(filterConfig&&filterConfig.source)filter.value={datasource:filterConfig.source,q_origin_key:filter.value.q_origin_key||filter.value};else if(!filterConfig){var missingFilterConfig=this.filterConfigMapping[filter.key]={key:filter.key};this.filterConfigs.push(missingFilterConfig)}}.bind(this))}.bind(this))}}),function(providers){providers.$compile.component("fEditFortiviewWidget",{templateUrl:function(loader){return loader.base_path("f-edit-fortiview-widget.html",module)},controller:EditFortiview,require:{editDashboard:"?^fEditDashboardWidget",widgetSelection:"?^fWidgetSelection"},bindings:{widget:"="}})}}),define("ng/system/dashboard/f-edit-traffic-history-widget",["module","ng/services/injector"],function(module,inject){"use strict";function EditTrafficHistory(injector){injector.injectMarked(this)}return Object.defineProperty(EditTrafficHistory.prototype,"interfaceObject",{get:function(){return!this._interfaceObject&&this.widget.interface&&(this._interfaceObject={q_origin_key:this.widget.interface,datasource:"firewallInterfaces"}),this._interfaceObject||null},set:function(interfaceObject){this._interfaceObject=interfaceObject,this._interfaceObject?this.widget.interface=this._interfaceObject.q_origin_key:this.widget.interface=null}}),EditTrafficHistory.prototype.INTERFACE_SETTINGS=inject.mark(function(state){var source=state.getCurrentVDOMScope()===state.VDOM_SCOPE.GLOBAL?"global::firewallInterfaces":"firewallInterfaces";return{sources:source,preProcessSelected:!0,singleSelect:!0,insideSlide:!0,filterFunction:function(intf){return!(intf.is_hardware_switch_member||intf.is_software_switch_member||intf.is_sslvpn||intf.is_virtual_wan_link||"any"===intf.name||intf.is_ipsec_dialup||intf.is_ipsec_manualkey||intf.is_zone)}}}),function(providers){providers.$compile.component("fEditTrafficHistoryWidget",{templateUrl:function(loader){return loader.base_path("f-edit-traffic-history-widget.html",module)},controller:EditTrafficHistory,bindings:{widget:"="}})}}),define("ng/system/dashboard/f-forticloud-widget",["module","ng/services/injector","fweb"],function(module,inject,fweb){"use strict";function FortiCloudWidget($scope,injector){injector.injectMarked(this,{$scope:$scope}),this._init()}var FORTICLOUD_PORTAL_URI="/p/system/status/fams/portal";return FortiCloudWidget.prototype._init=inject.mark(function($filter,license,help,state){return function(){this.loading=!0,this.STATUS_BASE_LANG_KEY="License::status.",this.STATUSES=fweb.BUILD.SYMBOLS,this.numberFilter=$filter("number"),help.$promise.then(function(){this.baseVideoUrl=help.hrefs.video}.bind(this)),this._run(),this.hasSystemWritePermission=state.adminHasWritePermission(state.ACCESS_GROUP.SYSTEM)}}),FortiCloudWidget.prototype._run=inject.mark(function($scope,notificationRequests){return function(){var PAID_STATUSES=[this.STATUSES.LICENSE_STATUS_LICENSED,this.STATUSES.LICENSE_STATUS_EXPIRES_SOON],WATCH=["license","sandboxStatus"];notificationRequests.watchMultiple($scope,WATCH,function(results){var license=results.license,sandbox=results.sandboxStatus;this.data=license.forticloud,this.sandboxStatus=sandbox,this.isLoggedIn=this.data.status===this.STATUSES.LICENSE_STATUS_CLOUD_LOGGED_IN,this.isPaidAccount=PAID_STATUSES.indexOf(this.data.license_status)>=0,this.isPaidSandboxAccount=this.data.sandbox&&PAID_STATUSES.indexOf(this.data.sandbox.status)>=0,this.loading=!1}.bind(this),!0)}}),FortiCloudWidget.prototype.watchVideo=inject.mark(function($window){return function(){$window.open(this.baseVideoUrl+"260/how-to-upgrade-and-renew-forticloud-subscription-5-6","_blank")}}),FortiCloudWidget.prototype.getStatusIcon=inject.mark(function(license){return function(){if(this.data)return license.getStatusIcon(this.data.status)}}),FortiCloudWidget.prototype.getSeverityClass=inject.mark(function(license){return function(){var classes;return this.data&&(classes=license.getSeverityLevel(this.data.status)),classes&&(classes+=" severity-message clickable"),classes}}),FortiCloudWidget.prototype.getLicenseStatusIcon=inject.mark(function(license){return function(){if(this.data)return license.getStatusIcon(this.data.license_status)}}),FortiCloudWidget.prototype.getLicenseSeverityClass=inject.mark(function(license){return function(){var classes;return this.data&&(classes=license.getSeverityLevel(this.data.license_status)),classes&&(classes+=" severity-message clickable"),classes}}),FortiCloudWidget.prototype.usingFortiSandboxCloud=function(){var using=!1;return this.sandboxStatus&&(using="cloud"===this.sandboxStatus.type),using},FortiCloudWidget.prototype.getSandboxStatusString=function(){var string;return this.data&&(string=this.usingFortiSandboxCloud()?this.isPaidSandboxAccount?"Paid":"Free":"disabled"),string},FortiCloudWidget.prototype.getSandboxStatusIcon=inject.mark(function(license){return function(ignoreSandboxType){if(this.data)return ignoreSandboxType||this.usingFortiSandboxCloud()?license.getStatusIcon(this.data.sandbox.status):"fa-disabled"}}),FortiCloudWidget.prototype.getSandboxSeverityClass=inject.mark(function(license){return function(){var classes;return this.data&&this.usingFortiSandboxCloud()&&(classes=license.getSeverityLevel(this.data.sandbox.status)),classes&&(classes+=" severity-message clickable"),classes}}),FortiCloudWidget.prototype.expiryDateString=inject.mark(function($filter){var date=$filter("date");return function(timestamp){return date(1e3*timestamp,"yyyy/MM/dd")}}),FortiCloudWidget.prototype.toggleMenu=function(menu,event){menu.toggle({top:event.clientY,left:event.clientX})},FortiCloudWidget.prototype.registrationAction=inject.mark(function(registration){return function(action){registration.open({},action)}}),FortiCloudWidget.prototype.configureLogSettings=inject.mark(function($location){return function(){$location.url("/log/settings")}}),FortiCloudWidget.prototype.showLogSettings=function(){var platform=fweb.BUILD.PLATFORM;return this.isLoggedIn&&(platform.GUI_SHOW_FORTICLOUD_ACTIVATE_LOG_OPTION||!platform.GUI_FORTICLOUD_ACTIVATE_LOG_OPTION_DISABLED)},FortiCloudWidget.prototype.launchFDSPortal=inject.mark(function($window){return function(){$window.open(FORTICLOUD_PORTAL_URI,"_blank")}}),function(providers){providers.$compile.component("fForticloudWidget",{templateUrl:function(loader){return loader.base_path("f-forticloud-widget.html",module)},controller:FortiCloudWidget,bindings:{widgetModel:"<"}})}}),define("ng/system/dashboard/f-fortiview-widget",["module","angular","fweb.util/dom","fweb.util/formatters","byod_common","ng/services/injector","fweb.util/datetime"],function(module,angular,dom,formatters,byod_common,inject,datetime){"use strict";function FortiviewWidget($scope,injector,fortiviewVisualization,fortiviewSelectSource){injector.injectMarked(this,{$scope:$scope}),this.modelData=this.widgetModel.getModelData(),this.loading=!0,this.visualization=fortiviewVisualization,fortiviewSelectSource.updateFortiviewDestinationOmniselectSource(),fortiviewSelectSource.updateFortiviewDeviceOmniselectSource(),this.modelData=this.widgetModel.getModelData(),this._setStateFromModelData(this.modelData),this._setupWatches(),this._setupFormatters(),this.setRowClickFn=this.setRowClick.bind(this)}var WIDGET_SPAN_TO_COLUMNS=1.3,OMNISELECT_TOOLTIP_CLASS="omniselect-tooltip",formatOmniselectEntry=function(entry,datasource){var content,mkey=entry.q_origin_key;try{content=Omniselect.processedFormatEntrySync(entry,datasource)}catch(err){return mkey}return datasource=datasource||entry.datasource,'<span class="'+OMNISELECT_TOOLTIP_CLASS+'" mkey="'+mkey+'" datasource="'+datasource+'">'+content+"</span>"};return FortiviewWidget.prototype._setStateFromModelData=inject.mark(function(fortiviewData){return function(modelData){this.sortBy=modelData["sort-by"],this.reportBy=modelData["report-by"],this.timeframe=modelData.timeframe,this.visualizationType=modelData.visualization,modelData.filters.forEach(function(filter){var filterConfig=fortiviewData.FILTER_CONFIG_FOR_KEY[filter.key];filter.lang=filterConfig&&filterConfig.lang})}}),FortiviewWidget.prototype._setupWatches=inject.mark(function(fortiviewUtil,$scope,fortiviewConfig,fortiviewData,fortiviewVisualization,lang){return function(){$scope.$watch("$ctrl.reportBy",function(reportBy){var fvConfig=this.fortiviewConfig=fortiviewConfig.getFortiviewConfig(reportBy);reportBy===fortiviewData.REPORT_BY.SOURCE&&(this.d3TooltipCreateBindFn=fortiviewVisualization.createDeviceTooltipBindFn),this.d3TooltipFormatter=fortiviewVisualization.createTooltipFormatter((fvConfig.tooltipColumns||fvConfig.columns).map(function(column){return{selector:column.key,formatter:this.formatters[column.key],lang:column.lang}}.bind(this))),this.d3LegendValueFormatter=fortiviewVisualization.createLegendValueFormatter(this.sortBy);var columns=angular.copy(fvConfig.columns);fortiviewUtil.csfEnabled()&&columns.push(angular.copy(fortiviewConfig.FORTIVIEW_COLUMNS.fortigate));var columnMapping=this.columnMapping={};columns.forEach(function(column){columnMapping[column.key]=column}),this.sortByOptions={},(fvConfig.sortByOptions||fortiviewData.SORTABLE_COLUMNS).filter(function(key){return columnMapping[key]}).forEach(function(sortByOption){this.sortByOptions[sortByOption]=!0}.bind(this)),this.sortByOptions[this.sortBy]||(this.sortBy=Object.keys(this.sortByOptions)[0]),this.data={columns:columns},this.sortedColumns=this.getPrioritizedColumns(columns.slice(),columnMapping),this.updateColumnsVisibility(columnMapping,this.widgetModel.getRelativeWidth()),this.refresh()}.bind(this)),$scope.$watch("$ctrl.sortBy",function(sortBy,old){sortBy!==old&&this.refresh(),this.title=lang("Top {fortiview} by {sortby}",[lang(this.fortiviewConfig.lang),lang("Fortiview::SortBy::"+sortBy||"Fortiview::SortBy::bytes")])}.bind(this)),$scope.$watch(function(){return this.widgetModel.getRelativeWidth()}.bind(this),function(widgetColumnSpan){this.updateColumnsVisibility(this.columnMapping,widgetColumnSpan)}.bind(this)),$scope.$watch(function(){return this.dashboardWidget&&this.dashboardWidget.isZoomed}.bind(this),function(isZoomed){var widgetColumnSpan=this.widgetModel.getRelativeWidth();isZoomed&&(widgetColumnSpan=null),this.updateColumnsVisibility(this.columnMapping,widgetColumnSpan)}.bind(this))}}),FortiviewWidget.prototype._setupFormatters=inject.mark(function(fortiviewUtil,$scope){return function(){this.maxValues={bytes:0,sessions:0,packets:0,bandwidth:0,shaper_drops:0,count:0,score:0,duration:0,search_count:0,host_count:0,loginid_count:0,browsingtime:0};var WIDGET_FORMATTERS={apps:fortiviewUtil.format_fn.apps,admin_level:function(td,col,data){return formatters.log_severity_bar(data.level)},cloud_applications:fortiviewUtil.format_fn.cloudApps,saddr:fortiviewUtil.format_fn.address,address:fortiviewUtil.format_fn.address,srcaddr:fortiviewUtil.format_fn.address,dstaddr:fortiviewUtil.format_fn.address,device:fortiviewUtil.format_fn.device,srcmac:fortiviewUtil.format_fn.device,dstmac:fortiviewUtil.format_fn.device,mac:fortiviewUtil.format_fn.device,server:fortiviewUtil.format_fn.server,country:fortiviewUtil.format_fn.country,bytes:fortiviewUtil.format_fn.bytes_compare(function(){return this.maxValues.bytes}.bind(this)),sessions:fortiviewUtil.format_fn.count_compare(function(){return this.maxValues.sessions}.bind(this)),packets:fortiviewUtil.format_fn.two_compare(function(){return this.maxValues.packets}.bind(this),["tx_packets","rx_packets"]),bandwidth:fortiviewUtil.format_fn.two_compare(function(){return this.maxValues.bandwidth}.bind(this),["tx_bandwidth","rx_bandwidth"],null,formatters.metric_bits_per_second,!1,formatters.metric_bits_per_second),shaper_drops:fortiviewUtil.format_fn.bytes_compare(function(){return this.maxValues.shaper_drops}.bind(this),["tx_shaper_drops","rx_shaper_drops"],["shaperdroprcvdbyte","shaperdropsentbyte"]),count:fortiviewUtil.format_fn.one_compare(function(){return this.maxValues.count}.bind(this)),score:fortiviewUtil.format_fn.two_compare(function(){return this.maxValues.score}.bind(this),["score_block","score_allow"],null,null,!0),threatlevel:fortiviewUtil.format_fn.level,rcvdbyte:fortiviewUtil.commonBytesFormatter,sentbyte:fortiviewUtil.commonBytesFormatter,browsingtime:fortiviewUtil.format_fn.browsingtime(function(){return this.maxValues.browsingtime}.bind(this)),duration:fortiviewUtil.format_fn.duration(function(){return this.maxValues.duration}.bind(this)),search_count:fortiviewUtil.format_fn.one_compare(function(){return this.maxValues.search_count}.bind(this),"search_count","Frequency"),host_count:fortiviewUtil.format_fn.one_compare(function(){return this.maxValues.host_count}.bind(this),"host_count"),last_conn_time:fortiviewUtil.format_fn.utc_time_format,loginid_count:fortiviewUtil.format_fn.one_compare(function(){return this.maxValues.loginid_count}.bind(this),"loginid_count","Login IDs"),risk:fortiviewUtil.format_fn.risk,category:fortiviewUtil.format_fn.category,fortigate:function(td,col,data){if(data.fortigate)return formatOmniselectEntry({q_origin_key:data.fortigate,datasource:"csfFortiGates"})},severity:fortiviewUtil.format_fn.level,vulnid:fortiviewUtil.format_fn.vulnid,cveid:fortiviewUtil.format_fn.cveid,web_category:fortiviewUtil.format_fn.web_category,domain:fortiviewUtil.format_fn.domain,vuln_source:fortiviewUtil.format_fn.vuln_source,vuln_device:fortiviewUtil.format_fn.vuln_device,vpnuser:fortiviewUtil.format_fn.user_with_icon,wifi_source:fortiviewUtil.format_fn.wifi_source};WIDGET_FORMATTERS.srcintf=WIDGET_FORMATTERS.dstintf=function(td,col,data){var mkey=data[col.selector];if(mkey)return formatOmniselectEntry({q_origin_key:mkey,datasource:"firewallInterfaces"})},WIDGET_FORMATTERS.daddr=function(td,col,data){return data=angular.extend({},data,{report_by:"destination"}),fortiviewUtil.format_fn.address(td,col,data)},$scope.shownKeyFormatter=function(d){var key=this.sortBy,formatterFn={bytes:formatters.metric_bytes,shaper_drops:formatters.metric_bytes,bandwidth:formatters.metric_bits_per_second};return formatterFn[key]?formatterFn[key](d.value):d.value}.bind(this),this.formatters=WIDGET_FORMATTERS}}),FortiviewWidget.prototype.getPrioritizedColumns=function(columns,columnMapping){return columns.slice().reverse().forEach(function(column,i){column.priority=1+.01*i}),columnMapping[this.fortiviewConfig.columns[0].key].priority+=2,columnMapping[this.sortBy]&&(columnMapping[this.sortBy].priority+=1),columnMapping.fortigate&&(columnMapping.fortigate.priority=-1),columns.sort(function(columnA,columnB){return columnA.priority-columnB.priority}),columns},FortiviewWidget.prototype.updateColumnsVisibility=inject.mark(function(state){return function(columnMapping,widgetSpan){var columnsForWidgetColumnSpan=widgetSpan&&Math.max(Math.floor(widgetSpan*WIDGET_SPAN_TO_COLUMNS),1);Object.keys(columnMapping).forEach(function(columnKey){columnMapping[columnKey].visible=!1});var realtimeTimeframe=this.timeframe===state.FORTIVIEW_TIME_PERIODS.REALTIME;this.sortedColumns.filter(function(column){return realtimeTimeframe&&!column.hideIfRealtime||!realtimeTimeframe&&!column.hideIfHistorical}.bind(this)).slice(-columnsForWidgetColumnSpan).forEach(function(column){columnMapping[column.key].visible=!0})}}),FortiviewWidget.prototype.refresh=inject.mark(function($q,$sce,fortiviewUtil,fortiviewData,fortiviewVisualization,state,$scope){var prerequisites=$q.all([Omniselect.getSourceData("firewallInterfaces"),Omniselect.getSourceData("csfFortiGates"),fortiviewUtil.get_applications().$promise]);return function(){var that=this,data=this.data;this.loading=!0,this.dataForVisualization=null;var reportByValue=this.reportBy,timeframe={realtime:!0};return this.fortiviewConfig.useLatest?timeframe={latest:!0}:this.timeframe!==state.FORTIVIEW_TIME_PERIODS.REALTIME&&(timeframe=fortiviewUtil.fixTimeRange(datetime.timeframeRange(this.timeframe))),prerequisites.then(function(){var filters={};this.modelData.filters.forEach(function(filter){var filterValue=filters[filter.key];filter.key===fortiviewData.FILTER.SEGMENT?filters.srcintfrole=fortiviewUtil.getInterfaceRoleFilterValue(filter.value):Array.isArray(filterValue)?filterValue.push(filter.value):filterValue?filters[filter.key]=[filterValue,filter.value]:filters[filter.key]=filter.value}),fortiviewData.get(reportByValue,filters,null,timeframe,null,{sort_by:this.sortBy},$scope).then(function(response){data.rows=response.data.results.details,fortiviewUtil.calculateMaxima(that.maxValues,data.rows,{bytes:["sentbyte","rcvdbyte"],packets:["tx_packets","rx_packets"],bandwidth:["tx_bandwidth","rx_bandwidth"],shaper_drops:["tx_shaper_drops","rx_shaper_drops"]}),data.rows.forEach(function(row){row.formatted={},data.columns.forEach(function(columnObject){var column=columnObject.key;if(that.formatters[column]){var formatted=that.formatters[column](!0,{selector:columnObject.selector||column},row);"string"==typeof formatted&&(row.formatted[column]=$sce.trustAsHtml(formatted))}else row.formatted[column]=row[column]})}),fortiviewVisualization.getD3Source(response.data.results.details,this.sortBy,fortiviewVisualization.getVisualizationConfig(reportByValue)).then(function(d3Source){this.dataForVisualization=d3Source}.bind(this)),this.loading=!1}.bind(this))}.bind(this))}}),FortiviewWidget.prototype.setRowClick=function(entry){this.clickedRow=entry},FortiviewWidget.prototype.toggleMenu=function(menu,event){menu.toggle({top:event.clientY,left:event.clientX})},FortiviewWidget.prototype.drilldownTo=inject.mark(function($location,fortiviewUtil){return function(row){var fortigates=row&&row.fortigates&&fortiviewUtil.csfEnabled()?":"+row.fortigates.join(":"):"",drilldownUrlFn=this.fortiviewConfig&&this.fortiviewConfig.drilldownToFn;$location.path(drilldownUrlFn(row,fortigates,this.reportBy)).search({timePeriod:this.timeframe})}}),function(providers,loader){return providers.$compile.component("fFortiviewWidget",{bindings:{widgetModel:"<"},controller:FortiviewWidget,templateUrl:function(loader){return loader.base_path("f-fortiview-widget.html",module)},require:{dashboard:"^fSystemDashboard"}}),providers.$compile.directive("fAddTooltips",function($timeout){return{link:function(scope,$element){$timeout(function(){dom.renderFQtip(null,$element),byod_common.setup_device_tooltips(null,$element),$element.find("."+OMNISELECT_TOOLTIP_CLASS).each(function(){dom.setupObjectTooltip({element:this,mkey:this.getAttribute("mkey"),datasource:this.getAttribute("datasource")})})},0,!1)}}}),loader.initModules(["/ng/directives/d3"],module)}}),define("ng/system/dashboard/f-host-scan-summary-widget",["module","js/d3","jquery","ftnt_shared","ng/services/injector"],function(module,d3,$,ftnt_shared,inject){"use strict";function HostScanSummaryWidget($scope,vulnerabilitySummaryData,injector){injector.injectMarked(this,{$scope:$scope}),this.hostScanSummaryData={vulnerable:0,secured:0,unscanned:0},this.timePeriod="realtime",this.loading=!0,vulnerabilitySummaryData.getHostScanSummary().then(function(result){this.hostScanSummaryData=result,this.loading=!1}.bind(this))}function FortiviewHostScanSummaryVisualization($scope,$element,lang,injector){injector.injectMarked(this,{$scope:$scope});var parent=d3.select($element[0]),svg=this.svg=parent.append("svg").append("g");svg.append("text").classed("host-count",!0).attr("text-anchor","middle").attr("dominant-baseline","middle").style("font-size","4.8em"),svg.append("text").classed("total-hosts-label",!0).attr("text-anchor","middle").attr("dominant-baseline","middle").attr("dy",43).text(lang("Total Hosts").toString()),$scope.$watch(function(){return{width:$element.width(),height:$element.height()}},function(updatedDimensions){this.dimensions=updatedDimensions,this.updateVisualization(this.data)}.bind(this),!0),$scope.$watch("$ctrl.data",this.updateVisualization.bind(this)),this._tooltip=new ftnt_shared.Tooltip({class:"d3-tooltip"})}function midAngle(d){return d.startAngle+(d.endAngle-d.startAngle)/2}var HOST_STATUS_CLASS=["severity-critical","severity-none","severity-medium"],HOST_STATUS_LANG=["Vulnerable","Secured","Unscanned"],HOST_STATUS_TYPES=["vulnerable","secured","unscanned"];HostScanSummaryWidget.prototype.toggleMenu=function(menu,event){menu.toggle({top:event.clientY,left:event.clientX})};var LABEL_WIDTH_MIN=100;return FortiviewHostScanSummaryVisualization.prototype.updateVisualization=function(data){data=data?HOST_STATUS_TYPES.map(function(type){return data[type];
}):[],this.svg.attr("transform","translate("+this.dimensions.width/2+","+this.dimensions.height/2+")"),this.circleRadius=Math.min(this.dimensions.width,this.dimensions.height)/2;var innerRadius=.9*this.circleRadius;return this._arcShape=d3.svg.arc().innerRadius(.95*innerRadius).outerRadius(innerRadius),this._pieLayout=d3.layout.pie().padAngle(.02),this._outerArc=d3.svg.arc().innerRadius(this.circleRadius-15).outerRadius(this.circleRadius),this.svg.selectAll("text.host-count").style("font-size",Math.max(1,Math.min(4.8,this.dimensions.height/30))+"em").text(data.reduce(function(a,b){return a+b},0)),this.svg.selectAll("text.total-hosts-label").style("display",this.circleRadius>72?"":"none"),this._updatePie(data),this.dimensions.width/2-this.circleRadius-LABEL_WIDTH_MIN<0||innerRadius<LABEL_WIDTH_MIN?void this.svg.selectAll("text.status, polyline").remove():(this._updateLeaderLines(data),void this._updateLabels(data))},FortiviewHostScanSummaryVisualization.prototype._updatePie=inject.mark(function(lang){return function(data){var tooltip=this._tooltip,selection=this.svg.selectAll("path").data(this._pieLayout(data));0===data.reduce(function(sum,current){return sum+current},0)&&(selection=this.svg.selectAll("path").data([{startAngle:0,endAngle:2*Math.PI,class:"empty"}])),selection.enter().append("path"),selection.attr("d",this._arcShape).attr("class",function(d,i){return d.class||HOST_STATUS_CLASS[i]}).each(function(d,i){var $this=$(this),mouseLeave="mouseleave.tooltip",mouseEnter="mouseenter.tooltip";$this.off(mouseLeave).on(mouseLeave,tooltip.hide.bind(tooltip)),$this.off(mouseEnter).on(mouseEnter,function(){var $div=$("<div></div>");$div.text(lang(HOST_STATUS_LANG[i])+": "+(data[i]||0)),tooltip.show($div[0])})}),selection.exit().remove()}}),FortiviewHostScanSummaryVisualization.prototype._updateLeaderLines=function(data){var lines=this.svg.selectAll("polyline").data(this._pieLayout(data));lines.enter().append("polyline").style("stroke","#505050").style("stroke-width","1px").style("fill","none"),lines.attr("points",function(d){if(0===d.value)return[];var pos=this._outerArc.centroid(d);return pos[0]=this.circleRadius*(midAngle(d)<Math.PI?1:-1),[this._arcShape.centroid(d),this._outerArc.centroid(d),pos]}.bind(this)),lines.exit().remove()},FortiviewHostScanSummaryVisualization.prototype._updateLabels=inject.mark(function(lang){return function(data){var labels=this.svg.selectAll("text.status").data(this._pieLayout(data));labels.enter().append("text").attr("dy",".35em").classed("status",!0),labels.text(function(d,i){return 0===d.value?"":lang(HOST_STATUS_LANG[i])+": "+d.value}),labels.attr("transform",function(d){var pos=this._outerArc.centroid(d);return pos[0]=this.circleRadius*(midAngle(d)<Math.PI?1:-1),"translate("+pos+")"}.bind(this)).style("text-anchor",function(d){return midAngle(d)<Math.PI?"start":"end"})}}),function(providers){providers.$compile.component("fortiviewHostScanSummaryVisualization",{controller:FortiviewHostScanSummaryVisualization,bindings:{data:"="}}),providers.$compile.component("fHostScanSummaryWidget",{templateUrl:function(loader){return loader.base_path("f-host-scan-summary-widget.html",module)},controller:HostScanSummaryWidget,bindings:{widgetModel:"<"}})}}),define("ng/system/dashboard/f-license-information-widget",["module","ng/services/injector","fweb"],function(module,inject,fweb){"use strict";function LicenseInformationWidget($scope,injector){injector.injectMarked(this,{$scope:$scope})}var STATUS_BASE_LANG_KEY="License::status.",FORTICLIENT_FALLBACK_INSTALLER_LINK="http://www.forticlient.com/#download",FORTICLIENT_INSTALLER_URI="/api/v2/monitor/endpoint-control/installer",PAGE_URLS={forticlient:{href:"/ng/user/forticlient_device",vdom:!0},fortitoken:{href:"/p/user/ftoken/",vdom:!0},vdom:{href:"/p/system/vdom/"}},STATUS_BASE_KEY="LICENSE_STATUS_",STATUSES=fweb.BUILD.SYMBOLS,LICENSE_WITH_USAGE=["forticlient","vdom","fortitoken"],processLicenses=function(licenses){var license;Object.keys(licenses).forEach(function(key){license=licenses[key],license&&LICENSE_WITH_USAGE.indexOf(key)>=0&&0!==license.max&&(license.percentage=license.used/license.max*100,license.subTitle=license.used+" / "+license.max)})};return LicenseInformationWidget.prototype.$onInit=inject.mark(function($timeout,$scope,state){return function(){this.baseLangKey={status:STATUS_BASE_LANG_KEY},this.state=state,this.fortiClientInstallers=[],this.loading=!0,this._run(),this.hasSystemWritePermission=state.adminHasWritePermission(state.ACCESS_GROUP.SYSTEM)}}),LicenseInformationWidget.prototype._collectFortiClientInstallers=inject.mark(function($http){return function(){return $http.get(FORTICLIENT_INSTALLER_URI,{params:{min_version:"5.4.1"}}).then(function(response){var map={win:{icon:"fa-device-windows",langKey:"windows",uri:FORTICLIENT_FALLBACK_INSTALLER_LINK,version:"0.0.0"},osx:{icon:"fa-device-apple",langKey:"mac_os",uri:FORTICLIENT_FALLBACK_INSTALLER_LINK,version:"0.0.0"}};response.data.results.forEach(function(entry){var current=map[entry.os],entryVersion=entry.version;current&&entryVersion>current.version&&Object.assign(map[entry.os],{uri:FORTICLIENT_INSTALLER_URI+"/download?mkey="+entry.image_id,local:!0,version:entryVersion})}),this.fortiClientInstallers=Object.keys(map).map(function(key){return map[key]})}.bind(this))}}),LicenseInformationWidget.prototype._run=inject.mark(function($scope,$q,state,notificationRequests,help){return function(){var promisesResolved=!1,licenseLoaded=!1,promises=[help.$promise],isStillLoading=function(){return!promisesResolved||!licenseLoaded};state.featureEnabledInAnyVDOM("gui-endpoint-control")&&state.adminHasReadPermission(state.ACCESS_GROUP.ENDPOINT_CONTROL)&&promises.push(this._collectFortiClientInstallers()),$q.all(promises).then(function(){promisesResolved=!0,this.loading=isStillLoading()}.bind(this)),notificationRequests.watch($scope,"license",function(licenses){this.licenses=licenses,this.baseVideoUrl=help.hrefs.video,this._setupGUILangKeys(),this._setupVideoLinks(help.topics),this._setupExtraTooltips(),processLicenses(licenses),licenseLoaded=!0,this.loading=isStillLoading()}.bind(this),!0)}}),LicenseInformationWidget.prototype._setupExtraTooltips=inject.mark(function(){return function(){this.extraTooltips={}}}),LicenseInformationWidget.prototype._setupVideoLinks=function(links){this.VIDEO_URLS={forticlient:links.endpoint_device.videos.en[0].id,vdom:links.vdom_list.videos.en[0].id}},LicenseInformationWidget.prototype._setupGUILangKeys=function(){this.langKeys={};var license=this.licenses.forticlient;license.status===STATUSES[STATUS_BASE_KEY+"EXPIRED"]?this.langKeys.forticlient={text:"Renew",video:"How to Renew"}:license.status===STATUSES[STATUS_BASE_KEY+"LICENSED"]&&license.can_upgrade?this.langKeys.forticlient={text:"upgrade",video:"How to Upgrade"}:license.can_upgrade?this.langKeys.forticlient={text:"Enter License",video:"How to Purchase"}:this.langKeys.forticlient=null,license=this.licenses.vdom,license&&license.can_upgrade?this.langKeys.vdom={text:"upgrade",video:"How to Purchase"}:this.langKeys.vdom=null},LicenseInformationWidget.prototype.watchVideo=inject.mark(function($window){return function(urlKey){this.VIDEO_URLS[urlKey]?$window.open(this.baseVideoUrl+this.VIDEO_URLS[urlKey],"_blank"):fweb.log.error("Invalid video url key: "+urlKey)}}),LicenseInformationWidget.prototype.downloadFortiClient=inject.mark(function($window){return function(entry){entry.local?$window.location.assign(entry.uri):$window.open(entry.uri,"_blank")}}),LicenseInformationWidget.prototype.showSystemFortiGuard=inject.mark(function($location){return function(){$location.path("/system/fortiguard")}}),LicenseInformationWidget.prototype.registrationSlide=inject.mark(function(registration){return function(regKey){registration.open({},regKey)}}),LicenseInformationWidget.prototype.toggleMenu=inject.mark(function(){return function(event,menuKey){this.popUpMenu[menuKey].toggle({top:event.clientY,left:event.clientX})}}),LicenseInformationWidget.prototype.redirectTo=inject.mark(function($location,structure,state){return function(destination,vdom){var uri=structure.ngURI(PAGE_URLS[destination].href);PAGE_URLS[destination].vdom&&state.vdom_mode?$location.path(uri).search("vdom",vdom||state.management_vdom):$location.path(uri)}}),LicenseInformationWidget.prototype.isCriticalStatus=function(){if(this.licenses){var forticareLicense=this.licenses.forticare;if(forticareLicense)return forticareLicense.status===STATUSES[STATUS_BASE_KEY+"NOT_REGISTERED"]}return!1},function(providers,loader){return providers.$compile.component("fLicenseInformationWidget",{templateUrl:function(loader){return loader.base_path("f-license-information-widget.html",module)},controller:LicenseInformationWidget,bindings:{widgetModel:"<"}}),loader.initModules(["f-license-update-server","f-license-license-item","f-license-service-item"],module)}}),define("ng/system/dashboard/f-license-license-item",["module","fweb","ng/services/injector"],function(module,fweb,inject){"use strict";function LicenseLicenseItem($scope,injector,help,state){injector.injectMarked(this,{$scope:$scope}),this.STATUS_BASE_LANG_KEY="License::status.",this.ONE_SECOND=1e3,this.SYMBOLS=fweb.BUILD.SYMBOLS,help.$promise.then(function(){this.baseVideoUrl=help.hrefs.video}.bind(this)),this.hasSystemWritePermission=state.adminHasWritePermission(state.ACCESS_GROUP.SYSTEM)}var FORTICARE_URI="https://support.fortinet.com";return LicenseLicenseItem.prototype._getStatusForLicense=function(){var EXPIRED=this.SYMBOLS.LICENSE_STATUS_EXPIRED,EXPIRES_SOON=this.SYMBOLS.LICENSE_STATUS_EXPIRES_SOON,status=this.license&&this.license.status;return status&&this.isForticare&&this.license.support&&Object.keys(this.license.support).every(function(key){var supportStatus=this.license.support[key].status;return supportStatus===EXPIRED?(status=EXPIRED,!1):(supportStatus===EXPIRES_SOON&&(status=EXPIRES_SOON),!0)}.bind(this)),status},LicenseLicenseItem.prototype.getStatusIcon=inject.mark(function(license){return function(status){return status=status||this._getStatusForLicense(),status?license.getStatusIcon(status):""}}),LicenseLicenseItem.prototype.getSeverityLevel=inject.mark(function(license){return function(status){return status=status||this._getStatusForLicense(),status?license.getSeverityLevel(status):""}}),LicenseLicenseItem.prototype.getExpiresLabel=inject.mark(function(license){return function(status){return status=status||this._getStatusForLicense(),status?license.getExpiresLabelForStatus(status):""}}),LicenseLicenseItem.prototype.formatExpiresLabel=inject.mark(function(license){return function(status,expiry,timezone){return status=status||this._getStatusForLicense(),status?license.formatExpiresLabelForStatus(status,expiry,timezone):""}}),LicenseLicenseItem.prototype.formatExpiryDate=inject.mark(function(license){return function(expiry,timezone){return license.formatExpiryDate(expiry,timezone)}}),LicenseLicenseItem.prototype.getSupportLangKey=inject.mark(function(license){return function(key){return license.getFortiCareSupportLangKey(key)}}),LicenseLicenseItem.prototype.translatedFortiCareIndustry=inject.mark(function(licenseRegions){return function(){return this.license&&this.license.industry?licenseRegions.translateIndustry(this.license.industry):""}}),LicenseLicenseItem.prototype.showMenu=function(event){this.menu.toggle({top:event.pageY,left:event.pageX})},LicenseLicenseItem.prototype.launchFortiCarePortal=inject.mark(function($window,$httpParamSerializer,state){return function(){var uri=FORTICARE_URI+"?"+$httpParamSerializer({sn:state.serial,aid:this.license.account});$window.open(uri)}}),LicenseLicenseItem.prototype.registerFortiCare=inject.mark(function(registration){return function(){registration.open({},"forticare")}}),LicenseLicenseItem.prototype.addFortiCareContract=inject.mark(function(registration){return function(){registration.open({},"forticare_license")}}),LicenseLicenseItem.prototype.showSystemFortiGuard=inject.mark(function($location){return function(){$location.path("/system/fortiguard")}}),LicenseLicenseItem.prototype.subscribeRenewVideo=inject.mark(function($window){return function(){$window.open(this.baseVideoUrl+"178/how-to-purchase-or-renew-fortiguard-services","_blank")}}),function(providers){providers.$compile.component("fLicenseLicenseItem",{templateUrl:function(loader){return loader.base_path("f-license-license-item.html",module)},controller:LicenseLicenseItem,bindings:{license:"<",title:"<itemTitle",titleParams:"<itemTitleParams",isForticare:"<",showVersion:"<",showExpiry:"<"}})}}),define("ng/system/dashboard/f-license-service-item",["module","ng/services/injector"],function(module,inject){"use strict";function LicenseServiceItem($scope,injector){injector.injectMarked(this,{$scope:$scope}),this.STATUS_BASE_LANG_KEY="License::status.",this.ONE_SECOND=1e3}return LicenseServiceItem.prototype.getLicenseStatusIcon=inject.mark(function(license){return function(){if(this.license)return license.getStatusIcon(this.license.status)}}),LicenseServiceItem.prototype.getSeverityLevel=inject.mark(function(license){return function(){return this.license&&this.license.status?license.getSeverityLevel(this.license.status):""}}),LicenseServiceItem.prototype.getExpiresLabel=inject.mark(function(license){return function(){return this.license&&this.license.status?license.getExpiresLabelForStatus(this.license.status):""}}),LicenseServiceItem.prototype.formatExpiryDate=inject.mark(function(license){return function(expiry){return license.formatExpiryDate(expiry)}}),function(providers){providers.$compile.component("fLicenseServiceItem",{templateUrl:function(loader){return loader.base_path("f-license-service-item.html",module)},controller:LicenseServiceItem,bindings:{license:"<",title:"<itemTitle",hasTooltip:"<",extraTooltips:"<",useProgressBar:"<"}})}}),define("ng/system/dashboard/f-license-update-server",["module","ng/services/injector"],function(module,inject){"use strict";function LicenseUpdateServer(injector,state,$scope){injector.injectMarked(this,{$scope:$scope}),this.fgdIPLoading=!0}return LicenseUpdateServer.prototype.$onInit=inject.mark(function($scope,notificationRequests){return function(){function stripPort(ip){return ip.replace(/(:\d*)$/,"")}notificationRequests.watch($scope,"license",function(license){this.fortiguard=license.fortiguard;var fgdIP=this.fortiguard&&this.fortiguard.server_address;fgdIP&&fgdIP!==this.fgdIP&&(this.fgdIPLoading=!0,this.fgdIP=stripPort(fgdIP),this._getFGDLocation(this.fgdIP).finally(function(){this.fgdIPLoading=!1}.bind(this)))}.bind(this),!0)}}),LicenseUpdateServer.prototype._getFGDLocation=inject.mark(function(widgetShared){return function(fgdIP){return widgetShared.getIPLocation(fgdIP).then(function(location){this.fgdCountryISOCode=location.countryISOCode,this.fgdLocation=location.location}.bind(this))}}),function(providers){return providers.$compile.component("fLicenseUpdateServer",{bindings:{widgetModel:"<"},controller:LicenseUpdateServer,templateUrl:function(loader){return loader.base_path("f-license-update-server.html",module)}})}}),define("ng/system/dashboard/f-log-rate-widget",["ng/services/injector","module"],function(inject,module){"use strict";function LogRateWidget($scope,injector){injector.injectMarked(this,{$scope:$scope}),this.loading=!0}var WIDGET_KEY="log-rate",URI_LOG_SETTINGS="/log/settings";return LogRateWidget.prototype.title="Log Rate",LogRateWidget.prototype.AVAILABLE_LOG_SOURCES=[{selector:"disk_lograte",label:"disk",color:Chart.prototype.COLORS.DEEP_PURPLE},{selector:"faz_lograte",label:"faz",color:Chart.prototype.COLORS.AMBER},{selector:"forticloud_lograte",label:"FortiCloud",color:Chart.prototype.COLORS.RED}],LogRateWidget.prototype.$onInit=inject.mark(function($q,$http,state,systemResourceUsage){return function(){this.state=state,this.timeOptions=systemResourceUsage.getTimeOptions(),this.currentTimeOption=systemResourceUsage.getTimeOptionForWidget(WIDGET_KEY),this._setupWatches(),this.loading=!1}}),LogRateWidget.prototype._setupWatches=inject.mark(function($scope,systemResourceUsage){return function(){this.systemResourceUsage=systemResourceUsage,this.systemResourceUsage.registerWatch($scope.$id),$scope.$watchGroup(this.AVAILABLE_LOG_SOURCES.map(function(source){return"$ctrl.systemResourceUsage.resources."+source.selector}),function(logRates){logRates.every(function(logRate){return logRate&&logRate.length})&&(this.logRates=logRates,this._plot())}.bind(this)),$scope.$watch("$ctrl.widgetModel.getRelativeWidth()",function(curr,prev){curr!==prev&&this._plot()}.bind(this)),$scope.$on("$destroy",function(){systemResourceUsage.unRegisterWatch($scope.$id)})}}),LogRateWidget.prototype._plot=inject.mark(function($filter,lang,systemResourceUsage){var dateFilter=$filter("date");return function(){var logRateHistory;this.LOG_SOURCES=this.AVAILABLE_LOG_SOURCES.filter(function(source,idx){return!!this.logRates[idx][0].historical[this.currentTimeOption.option].values.some(function(valueArr){return valueArr[1]>0})}.bind(this));var data=this.LOG_SOURCES.map(function(source,idx){return logRateHistory=logRateHistory||this.logRates[idx][0].historical[this.currentTimeOption.option],{label:lang(source.label).toString(),color:source.color,data:this.logRates[idx][0].historical[this.currentTimeOption.option].values}}.bind(this));this.noLogSource=0===this.LOG_SOURCES.length,this.singleLogSource=1===this.LOG_SOURCES.length,this.lineChartConfig=!this.noLogSource&&{data:data,options:{xaxis:systemResourceUsage.plotFormatters.xAxisConfig(this.widgetModel,logRateHistory.start,logRateHistory.end,"1-min"!==this.currentTimeOption.option),yaxis:{tickFormatter:function(value){return lang("{0}/s",[value]).toString()},min:0,tickDecimals:0},series:{lines:{show:!0,fill:!!this.singleLogSource},stack:!1},legend:{show:!1}},tooltips:!0,tooltip_formatter:function(label,x,y){var time=dateFilter(x,"mediumTime");return label+" - "+time+": "+lang("{0}/s",[y]).toString()}}}}),LogRateWidget.prototype.setTimeOption=inject.mark(function(systemResourceUsage){return function(timeOption){this.currentTimeOption=timeOption,systemResourceUsage.saveTimeOptionForWidget(WIDGET_KEY,timeOption),this._plot()}}),LogRateWidget.prototype.toggleMenu=function(menu,event){menu.toggle({top:event.clientY,left:event.clientX})},LogRateWidget.prototype.configureLogSettings=inject.mark(function($location){return function(vdom){$location.path(URI_LOG_SETTINGS).search({vdom:vdom})}}),function(providers){providers.$compile.component("fLogRateWidget",{templateUrl:function(loader){return loader.base_path("f-log-rate-widget.html",module)},controller:LogRateWidget,bindings:{widgetModel:"<"}})}}),define("ng/system/dashboard/f-mem-usage-widget",["ng/services/injector","module"],function(inject,module){"use strict";function MemUsageWidget($scope,injector){injector.injectMarked(this,{$scope:$scope}),this.resource="mem",this._init()}var WIDGET_KEY="memory-usage";return MemUsageWidget.prototype={COLOR:Chart.prototype.COLORS.ORANGE,_init:inject.mark(function($scope,systemResourceUsage){return function(){this.timeOptions=systemResourceUsage.getTimeOptions(),this.currentTimeOption=systemResourceUsage.getTimeOptionForWidget(WIDGET_KEY),systemResourceUsage.registerWatch($scope.$id),$scope.$watch(function(){return systemResourceUsage.resources[this.resource]}.bind(this),function(memUsage){memUsage&&memUsage.length&&(this.memUsage=memUsage,this.currentUsage=memUsage[0].current,this._plot())}.bind(this)),$scope.$watch("$ctrl.widgetModel.getRelativeWidth()",function(curr,prev){curr!==prev&&this._plot()}.bind(this)),$scope.$on("$destroy",function(){systemResourceUsage.unRegisterWatch($scope.$id)})}}),_plot:inject.mark(function($filter,systemResourceUsage){var dateFilter=$filter("date");return function(){var memUsageDataEntry=this.memUsage[0].historical[this.currentTimeOption.option],data=[{data:memUsageDataEntry.values,color:this.COLOR}];this.stackedAreaChartConfig={data:data,options:{xaxis:systemResourceUsage.plotFormatters.xAxisConfig(this.widgetModel,memUsageDataEntry.start,memUsageDataEntry.end,"1-min"!==this.currentTimeOption.option),yaxis:{min:0,max:100,tickFormatter:function(value){return value+"%"}},series:{lines:{fill:!0},stack:!0},legend:{show:!1}},tooltips:!0,tooltip_formatter:function(label,x,y){var time=dateFilter(x,"mediumTime");return time+": "+y+"%"}}}}),setTimeOption:inject.mark(function(systemResourceUsage){return function(timeOption){this.currentTimeOption=timeOption,systemResourceUsage.saveTimeOptionForWidget(WIDGET_KEY,timeOption),this._plot()}})},function(providers){providers.$compile.component("fMemUsageWidget",{templateUrl:function(loader){return loader.base_path("f-mem-usage-widget.html",module)},controller:MemUsageWidget,bindings:{widgetModel:"<"}})}}),define("ng/system/dashboard/f-security-fabric-widget",["module","ng/services/injector"],function(module,inject){"use strict";function SecurityFabricWidget($resource,injector,lang){injector.injectMarked(this),this.loading=!0,this.extensionsLoading=!0,this.title=lang(STR_SECURITY_FABRIC).toString(),this.csfEnabled=!0,this._init().then(function(){this.loading=!1}.bind(this))}var STR_SECURITY_FABRIC_GROUP_NAME="Security Fabric: {NAME}",STR_SECURITY_FABRIC="Security Fabric",URI_FABRIC_SETTINGS="/system/external_security";return SecurityFabricWidget.prototype._init=inject.mark(function($q,csfTopology,lang,state){return function(){return csfTopology.buildIfNecessary().then(function(){var groupName=csfTopology.groupName;groupName&&(this.title=lang(STR_SECURITY_FABRIC_GROUP_NAME,[groupName]).toString());var upstreamSerial=csfTopology.upstreamSerial;this.fortigates=csfTopology.fortigates.map(function(fortigate){return{serial:fortigate.serial,parentSerial:fortigate.isCurrent?upstreamSerial:fortigate.parentSerial,isCurrent:fortigate.isCurrent,label:fortigate.getLabel(),icon:fortigate.getIconClass()}}),upstreamSerial&&this.fortigates.push({serial:upstreamSerial,ipAddress:state.csf_upstream_ip}),this.csfEnabled=csfTopology.csfEnabled}.bind(this))}}),SecurityFabricWidget.prototype.openMenu=function(event,menu){menu.toggle({top:event.clientY,left:event.clientX})},SecurityFabricWidget.prototype.onNodeClick=function(event,node,menu){this.selectedNode=node,this.openMenu(event,menu)},SecurityFabricWidget.prototype.configureFabricSettings=inject.mark(function($location){return function(){$location.path(URI_FABRIC_SETTINGS)}}),SecurityFabricWidget.prototype.showTopology=inject.mark(function($location){return function(uri){this.selectedNode&&uri&&$location.path(uri).search({highlight:this.selectedNode.serial})}}),function(providers){providers.$compile.component("fSecurityFabricWidget",{templateUrl:function(loader){return loader.base_path("f-security-fabric-widget.html",module)},controller:SecurityFabricWidget,bindings:{widgetModel:"<"}})}}),define("ng/system/dashboard/f-session-rate-widget",["ng/services/injector","module"],function(inject,module){"use strict";function SessionRateWidget($scope,injector){injector.injectMarked(this,{$scope:$scope}),this.resource="setuprate",this._init()}var WIDGET_KEY="session-rate";return SessionRateWidget.prototype={COLOR:Chart.prototype.COLORS.BLUE_GREY,_init:inject.mark(function($scope,systemResourceUsage){return function(){this.timeOptions=systemResourceUsage.getTimeOptions(),this.currentTimeOption=systemResourceUsage.getTimeOptionForWidget(WIDGET_KEY),systemResourceUsage.registerWatch($scope.$id),$scope.$watch(function(){return systemResourceUsage.resources[this.resource]}.bind(this),function(sessionRate){sessionRate&&sessionRate.length&&(this.sessionRate=sessionRate,this.currentSessionRate=sessionRate[0].current,this._plot())}.bind(this)),$scope.$watch("$ctrl.widgetModel.getRelativeWidth()",function(curr,prev){curr!==prev&&this._plot()}.bind(this)),$scope.$on("$destroy",function(){systemResourceUsage.unRegisterWatch($scope.$id)})}}),_plot:inject.mark(function($filter,lang,systemResourceUsage){var dateFilter=$filter("date");return function(){var sessionRateHistory=this.sessionRate[0].historical[this.currentTimeOption.option],data=[{data:sessionRateHistory.values,color:this.COLOR}];this.lineChartConfig={data:data,options:{xaxis:systemResourceUsage.plotFormatters.xAxisConfig(this.widgetModel,sessionRateHistory.start,sessionRateHistory.end,"1-min"!==this.currentTimeOption.option),yaxis:{tickFormatter:function(value){return lang("{0}/s",[value]).toString()},min:0,tickDecimals:0},series:{lines:{fill:!0},stack:!0},legend:{show:!1}},tooltips:!0,tooltip_formatter:function(label,x,y){var time=dateFilter(x,"mediumTime");return time+": "+lang("{0}/s",[y]).toString()}}}}),setTimeOption:inject.mark(function(systemResourceUsage){return function(timeOption){this.currentTimeOption=timeOption,systemResourceUsage.saveTimeOptionForWidget(WIDGET_KEY,timeOption),this._plot()}})},function(providers){providers.$compile.component("fSessionRateWidget",{templateUrl:function(loader){return loader.base_path("f-session-rate-widget.html",module)},controller:SessionRateWidget,bindings:{widgetModel:"<"}})}}),define("ng/system/dashboard/f-sessions-widget",["ng/services/injector","module","fweb.util/formatters"],function(inject,module,formatters){"use strict";function SessionsWidget($scope,injector){injector.injectMarked(this,{$scope:$scope}),this.resource="session",this._init()}var WIDGET_KEY="sessions";return SessionsWidget.prototype={COLOR:Chart.prototype.COLORS.RED,BASE_COLOR:Chart.prototype.COLORS.GREY,NPU_COLOR:Chart.prototype.COLORS.BLUE,NTURBO_COLOR:Chart.prototype.COLORS.LIME,_init:inject.mark(function($scope,systemResourceUsage){return function(){this.timeOptions=systemResourceUsage.getTimeOptions(),this.currentTimeOption=systemResourceUsage.getTimeOptionForWidget(WIDGET_KEY),systemResourceUsage.registerWatch($scope.$id),$scope.$watch(function(){return systemResourceUsage.resources[this.resource]}.bind(this),function(sessions){sessions&&sessions.length&&(this.sessions=sessions,this.currentSessions=sessions[0].current,systemResourceUsage.resources.npu_session&&(this.npuSessions=systemResourceUsage.resources.npu_session,systemResourceUsage.resources.nturbo_session&&(this.nturboSessions=systemResourceUsage.resources.nturbo_session,this.currentNturboUsage=formatters.percentage(this.nturboSessions[0].current,this.currentSessions),this.npuSessions[0].current-=this.nturboSessions[0].current),this.currentNpuUsage=formatters.percentage(this.npuSessions[0].current,this.currentSessions)),this._plot())}.bind(this)),$scope.$watch("$ctrl.widgetModel.getRelativeWidth()",function(curr,prev){curr!==prev&&this._plot()}.bind(this)),$scope.$on("$destroy",function(){systemResourceUsage.unRegisterWatch($scope.$id)})}}),_plot:inject.mark(function($filter,lang,systemResourceUsage){var dateFilter=$filter("date");return function(){var timePeriod=this.currentTimeOption.option,sessionHistory=this.sessions[0].historical[timePeriod],npuSessionHistory=this.npuSessions?this.npuSessions[0].historical[timePeriod]:null,nturboSessionHistory=this.nturboSessions?this.nturboSessions[0].historical[timePeriod]:null,sessionValues=sessionHistory.values,npuSessionValues=npuSessionHistory?npuSessionHistory.values:null,data=[];if(npuSessionHistory){if(sessionValues=sessionValues.map(function(value,index){return[value[0],value[1]-npuSessionValues[index][1]]}),nturboSessionHistory){var nturboSessionValues=nturboSessionHistory.values;npuSessionValues=npuSessionValues.map(function(value,index){return[value[0],value[1]-nturboSessionValues[index][1]]}),data.push({data:nturboSessionValues,color:this.NTURBO_COLOR,label:lang("nTurbo").toString()})}data.push({data:npuSessionValues,color:this.NPU_COLOR,label:lang("SPU").toString()})}data.push({data:sessionValues,color:npuSessionHistory?this.BASE_COLOR:this.color,label:lang("Software").toString()}),this.lineChartConfig={data:data,options:{xaxis:systemResourceUsage.plotFormatters.xAxisConfig(this.widgetModel,sessionHistory.start,sessionHistory.end,"1-min"!==this.currentTimeOption.option),yaxis:{min:0,tickDecimals:0},series:{lines:{fill:!0},stack:!0},legend:{show:!1}},tooltips:!0,tooltip_formatter:function(label,x,y){var time=dateFilter(x,"mediumTime");return time+": "+y+" "+lang("Sessions")+" ("+label+")"}}}}),setTimeOption:inject.mark(function(systemResourceUsage){return function(timeOption){this.currentTimeOption=timeOption,systemResourceUsage.saveTimeOptionForWidget(WIDGET_KEY,timeOption),this._plot()}})},function(providers){providers.$compile.component("fSessionsWidget",{templateUrl:function(loader){return loader.base_path("f-sessions-widget.html",module)},controller:SessionsWidget,bindings:{widgetModel:"<"}})}}),define("ng/system/dashboard/f-system-admins-widget",["module","ng/services/injector"],function(module,inject){"use strict";function SystemAdminsWidget($scope,injector){injector.injectMarked(this,{$scope:$scope}),this._init(),this._setupSizeWatch()}var DISPLAY_LIMIT=7;return SystemAdminsWidget.prototype._init=inject.mark(function($http){return function(){this.loading=!0,$http.get("/api/v2/monitor/system/current-admins").then(function(response){var results=response.data.results;this.admins=results.reduce(function(previous,current){return null!=previous[current.admin]?previous[current.admin].sessions+=1:previous[current.admin]={name:current.admin,profile:current.profile,sessions:1,methods:{}},previous[current.admin].methods[current.method]?previous[current.admin].methods[current.method]+=1:previous[current.admin].methods[current.method]=1,previous},{});var adminKeys=Object.keys(this.admins);this.sessionCount=results.length,this.adminCount=adminKeys.length,this.displayKeys=adminKeys.slice(0,DISPLAY_LIMIT),this.remainingKeys=adminKeys.slice(DISPLAY_LIMIT),this.loading=!1}.bind(this))}}),SystemAdminsWidget.prototype.toggleMenu=inject.mark(function(){return function(menu,event){menu.toggle({top:event.clientY,left:event.clientX})}}),SystemAdminsWidget.prototype._setupSizeWatch=inject.mark(function($scope){return function(){$scope.$watch("$ctrl.widgetModel.getRelativeHeight()",function(height){this.fullDimension=height>=1}.bind(this))}}),SystemAdminsWidget.prototype.showAdminsList=inject.mark(function(slide,lang){return function(){slide.open("currentAdminsList",{template:"<f-current-admins></f-current-admins>",options:{title:lang("Active Administrator Sessions").toString(),fullHeight:!0}})}}),function(providers){providers.$compile.component("fSystemAdminsWidget",{templateUrl:function(loader){return loader.base_path("f-system-admins-widget.html",module)},controller:SystemAdminsWidget,bindings:{widgetModel:"<"}})}}),define("ng/system/dashboard/f-system-information-widget",["module","angular","ng/services/injector","fweb"],function(module,angular,inject,fweb){"use strict";function SystemInformationWidget($scope,injector,state,notificationRequests,lang){injector.injectMarked(this,{$scope:$scope}),this.state=state,this.loading=!0,this.wanIPLoading=!0,this.timeSettingsSupport=!1,this.timeZoneString=state.getFortiGateTimeZoneOffsetString(),this.wanLocation=null,this.wanCountryISOCode=null,this.newerFirmware=null,this.BUILD=fweb.BUILD,this.isWanIPBlackListed=!1,this._checkForNewerFirmware(),this._getTimeSettings().then(function(){this.timeSettingsSupport=!0}.bind(this)).finally(function(){this.loading=!1,this._startInterval()}.bind(this)),notificationRequests.watch($scope,"license",function(license){var wanIP=license.fortiguard&&license.fortiguard.fortigate_wan_ip;wanIP&&wanIP!==this.wanIP?(this.wanIP=wanIP,this._getWANLocation(wanIP).finally(function(){this.wanIPLoading=!1}.bind(this)),notificationRequests.wanIPBlacklist(wanIP).then(function(response){this.isWanIPBlackListed=response.blacklisted,this.blacklistEntries=response.info}.bind(this))):wanIP||(this.wanIP=lang("status_unknown"),this.wanIPLoading=!1)}.bind(this),!0)}var CMDB_URI="/api/v2/cmdb/",TRANSLATIONS={I:"International",J:"Japan",K:"Korea",T:"Taiwan",U:"Ukraine"};return SystemInformationWidget.prototype.getHardwareVersion=inject.mark(function(lang,state){return function(){var regionCode=state.region_code&&state.region_code.trim(),hardwareVersion="";
return hardwareVersion+=state.model_name+" "+state.model_number,regionCode&&(hardwareVersion+=" "+lang(TRANSLATIONS[regionCode]||"Region-{0}",[regionCode]).toString()),hardwareVersion}}),SystemInformationWidget.prototype._getTimeSettings=inject.mark(function($q,$http){return function(){var globalPromise=$q.all([$http.get(CMDB_URI+"system/global"),$http.get(CMDB_URI+"system/global",{params:{action:"schema"}})]).then(function(responses){var i,timeZoneSetting,timeZoneKey=responses[0].data.results.timezone,options=responses[1].data.results.children.timezone.options;for(i=0;i<options.length;i++)if(options[i].name===timeZoneKey){timeZoneSetting=options[i].help;break}this.timeZoneSetting=timeZoneSetting}.bind(this)),ntpPromise=$http.get(CMDB_URI+"system/ntp").then(function(response){var results=response.data.results;this.ntpEnabled="enable"===results.ntpsync,this.ntpUsingFortiGuard="fortiguard"===results.type}.bind(this));return $q.all([globalPromise,ntpPromise])}}),SystemInformationWidget.prototype._getWANLocation=inject.mark(function(widgetShared){return function(wanIP){return widgetShared.getIPLocation(wanIP).then(function(location){this.wanCountryISOCode=location.countryISOCode,this.wanLocation=location.location}.bind(this))}}),SystemInformationWidget.prototype.getTimeSourceString=function(){var result;return result=this.ntpEnabled?this.ntpUsingFortiGuard?"FortiGuard NTP":"Custom NTP server":"Manually set"},SystemInformationWidget.prototype.getLastRebootTimeString=inject.mark(function($filter,state){return function(){var dateFilter=$filter("date");return dateFilter(state.utc_last_reboot,"yyyy/MM/dd HH:mm:ss",state.getFortiGateTimeZoneOffsetString())}}),SystemInformationWidget.prototype._startInterval=inject.mark(function($scope,$interval,state){return function(){var intervalPromise,update=function(){var fortigateNow=state.getFortiGateTimeUTC();this.currentTime=fortigateNow,this.uptime=fortigateNow-state.utc_last_reboot}.bind(this);update(),intervalPromise=$interval(update,1e3),$scope.$on("$destroy",function(){$interval.cancel(intervalPromise)})}}),SystemInformationWidget.prototype._checkForNewerFirmware=inject.mark(function(state){return function(){var version;state.newer_firmware_available&&(version=state.newer_firmware_version,this.newerFirmware="v"+[version.major,version.minor,version.patch].join("."))}}),SystemInformationWidget.prototype.toggleMenu=inject.mark(function(){return function(menu,event){menu.toggle({top:event.clientY,left:event.clientX})}}),SystemInformationWidget.prototype.showSystemSettings=inject.mark(function($location){return function(){$location.path("/system/settings")}}),SystemInformationWidget.prototype.showSystemFirmware=inject.mark(function($location){return function(){$location.path("/system/firmware")}}),SystemInformationWidget.prototype.wanIPClick=inject.mark(function($rootScope,slide,lang){return function($event){if(this.isWanIPBlackListed){$event.stopPropagation(),this.wanIPSlideout=!0;var scope=$rootScope.$new();scope.wanIP=this.wanIP,scope.blacklistEntries=this.blacklistEntries,slide.open("wanIPBlacklist",{template:'<f-wan-ip-blacklist-info wan-ip="wanIP" blacklist-entries="blacklistEntries"></f-wan-ip-blacklist-info>',parentScope:scope,options:{title:lang("WAN IP Blacklisted").toString(),fullHeight:!0}}).finally(function(){this.wanIPSlideout=!1,scope.$destroy()}.bind(this))}}}),function(providers){providers.$compile.component("fSystemInformationWidget",{templateUrl:function(loader){return loader.base_path("f-system-information-widget.html",module)},controller:SystemInformationWidget,bindings:{widgetModel:"<"}})}}),define("ng/system/dashboard/f-traffic-history-widget",["module","angular","fweb","ng/services/injector"],function(module,angular,fweb,inject){"use strict";function TrafficHistoryWidget($scope,injector,persistentStorage,$routeParams){injector.injectMarked(this,{$scope:$scope}),this.modelData=this.widgetModel.getModelData(),this.interface=this.modelData.interface,this.timePeriod=persistentStorage.get(getTimeOptionStorageKey($routeParams.id,this.interface))||"hour",this.timeoutPromise=null,this.updateCancelled=!1,$scope.$watch("$ctrl.widgetModel.getRelativeWidth()",function(width){this.relativeWidth=width}.bind(this)),$scope.$on("fChartSizeChangeStart",function(){this.chartResizing=!0}.bind(this)),$scope.$on("fChartSizeChangeEnd",function(){this.chartResizing=!1}.bind(this)),this.setupPeriodWatch(),document.body.addEventListener("mousemove",function(event){this.mouseX=event.pageX,this.mouseY=event.pageY}.bind(this))}var URI="/api/v2/monitor/system/traffic-history",MIN_GRAPH_SELECTION_SECONDS=60,WIDGET_KEY="tr-history",TIME_OPTION_STORAGE_PREFIX="dashboard_time_option_",getTimeOptionStorageKey=function(dashboardId,intf){return TIME_OPTION_STORAGE_PREFIX+"dashboard-"+dashboardId+"_"+WIDGET_KEY+"_"+intf};return TrafficHistoryWidget.prototype.TIME_PERIODS=["hour","day","week"],TrafficHistoryWidget.prototype.INBOUND_COLOR=Chart.prototype.COLORS.GREEN,TrafficHistoryWidget.prototype.OUTBOUND_COLOR=Chart.prototype.COLORS.TEAL,TrafficHistoryWidget.prototype.TIME_PERIOD_CONFIG=function(){var HOUR=3600,DAY=24*HOUR,WEEK=7*DAY,SAMPLE_NUM="LOW"===fweb.BUILD.PLATFORM.MODEL_LEVEL?300:600,BUFFER=4,calculateInterval=function(duration){return 1e3*(Math.ceil(duration/SAMPLE_NUM)+BUFFER)};return{hour:{duration:HOUR,updateInterval:calculateInterval(HOUR)},day:{duration:DAY,updateInterval:calculateInterval(DAY)},week:{duration:WEEK,updateInterval:calculateInterval(WEEK)}}}(),TrafficHistoryWidget.prototype.updateData=inject.mark(function($http,$timeout,$filter,lang){var dateFilter=$filter("date");return function(){this.updateCancelled=!1,$timeout.cancel(this.timeoutPromise);var timeConfig=this.TIME_PERIOD_CONFIG[this.timePeriod],end=(new Date).getTime(),start=end-1e3*timeConfig.duration;$http.get(URI,{params:{interface:this.modelData.interface,time_period:this.timePeriod}}).then(function(response){var inbound,outbound,results=response.data.results;this.updateCancelled||this._selectingTimePeriod||(inbound={label:lang("Inbound").toString(),data:results.rx.map(function(entry){return[entry.utc_ms,entry.bps]}),color:this.INBOUND_COLOR},outbound={label:lang("Outbound").toString(),data:results.tx.map(function(entry){return[entry.utc_ms,entry.bps]}),color:this.OUTBOUND_COLOR},this.combinedChartConfig={options:{legend:{show:!1},series:{stack:!0},lines:{show:!0,fill:!0,steps:!1},xaxis:{mode:"time",timezone:"browser",min:start,max:end},yaxis:{tickFormatter:function(value){return fweb.util.formatters.metric_bits_per_second(value,1)},min:0,tickDecimals:0}},tooltips:!0,tooltip_formatter:function(label,x,y){var time=dateFilter(x,"mediumTime");return time+": "+fweb.util.formatters.metric_bits_per_second(y)},events:{plotselected:function(event,ranges){var msg;this.selectedTimePeriodStart=ranges.xaxis.from,this.selectedTimePeriodEnd=ranges.xaxis.to,this.selectedTimePeriodEnd-this.selectedTimePeriodStart>=1e3*MIN_GRAPH_SELECTION_SECONDS?this.timeSelectionMenu.toggle({top:this.mouseY,left:this.mouseX}).finally(function(){this._selectingTimePeriod=!1}.bind(this)):(this._selectingTimePeriod=!1,msg=lang("traffic_history_min_time_selection_warning",[MIN_GRAPH_SELECTION_SECONDS]).toString(),fweb.util.slide.alert(msg))}.bind(this),plotselecting:function(){this._selectingTimePeriod||(this._selectingTimePeriod=!0)}.bind(this)}},this.isSelectionDisabled||(this.combinedChartConfig.options=angular.extend(this.combinedChartConfig.options,{selection:{mode:"x"}})),this.inboundChartConfig=angular.extend({},this.combinedChartConfig),this.outboundChartConfig=angular.extend({},this.combinedChartConfig),this.combinedChartConfig.data=[inbound,outbound],this.inboundChartConfig.data=[inbound],this.outboundChartConfig.data=[outbound],this.lastRx=results.last_rx,this.lastTx=results.last_tx)}.bind(this)).finally(function(){this.timeoutPromise=$timeout(this.updateData.bind(this),timeConfig.updateInterval)}.bind(this))}}),TrafficHistoryWidget.prototype.fortiViewDrilldown=inject.mark(function($q,$location,state){return function(type){var toUTCSeconds=function(time){return(time/1e3).toFixed(0)},vdom=state.current_vdom,global=""===vdom,transition=function(){$location.path("/fortiview/interface/all/"+type+"/"+this.interface).search({vdom:vdom,timePeriod:["custom",toUTCSeconds(this.selectedTimePeriodStart),toUTCSeconds(this.selectedTimePeriodEnd)].join(":")})}.bind(this);global?$q.when(Omniselect.getSourceData("global::firewallInterfaces")).then(function(results){vdom=results.mapping[this.interface].vdom,transition()}.bind(this)):transition()}}),TrafficHistoryWidget.prototype.setupPeriodWatch=inject.mark(function($scope,$timeout,state,$routeParams,persistentStorage){return function(){$scope.$watch("$ctrl.timePeriod",function(newVal){this.isSelectionDisabled=!state.suppportsFortiViewTimePeriod(newVal),persistentStorage.put(getTimeOptionStorageKey($routeParams.id,this.interface),newVal),this.updateData()}.bind(this)),$scope.$on("$destroy",function(){this.updateCancelled=!0,$timeout.cancel(this.timeoutPromise)}.bind(this))}}),function(providers){providers.$compile.component("fTrafficHistoryWidget",{templateUrl:function(loader){return loader.base_path("f-traffic-history-widget.html",module)},controller:TrafficHistoryWidget,bindings:{widgetModel:"<"},require:{dashboard:"^fSystemDashboard"}})}}),define("ng/system/dashboard/f-sensor-information-widget",["module","angular","fweb","ng/services/injector"],function(module,angular,fweb,inject){"use strict";function SensorInformationWidget($scope,injector){injector.injectMarked(this,{$scope:$scope}),this._init()}var SENSOR_TYPES={VOLTAGE:"voltage",TEMPERATURE:"temperature",FAN:"fan",POWER:"power"},UPPER_KEY="upper_",LOWER_KEY="lower_",THRESHOLD={NORMAL:"non_critical",WARNING:"critical",ERROR:"non_recoverable"},STATUS={NORMAL:"normal",WARNING:"warning",ERROR:"error"},SEVERITY={NORMAL:"",WARNING:"severity-high",ERROR:"severity-critical"},ICON={NORMAL:"fa-enabled",WARNING:"fa-severity-high",ERROR:"fa-severity-critical"},TYPE_BASE_LANG_KEY="Sensor::type.",CAUSE_AC_LOST="ac_lost";return SensorInformationWidget.prototype._init=inject.mark(function($scope,$timeout){return function(){this.STATUS=STATUS,this.ICON=ICON,this.timeoutPromise=null,this.loading=!0,this._load(),$scope.$on("$destroy",function(){$timeout.cancel(this.timeoutPromise)}.bind(this))}}),SensorInformationWidget.prototype._load=inject.mark(function(notificationRequests,$timeout,widgetShared){return function(){notificationRequests.sensorInfo().then(function(sensors){angular.extend(this,this._parseSensors(sensors)),this.loading=!1}.bind(this)).finally(function(){this.timeoutPromise=$timeout(this._load.bind(this),widgetShared.REFRESH_INTERVAL.LONG)}.bind(this))}}),SensorInformationWidget.prototype._genSensorStatusExtra=function(sensor,allSensors){switch(sensor.status){case STATUS.WARNING:sensor.severityLevel=SEVERITY.WARNING,sensor.icon=ICON.WARNING,allSensors.severityLevel===SEVERITY.NORMAL&&(allSensors.severityLevel=sensor.severityLevel,allSensors.icon=sensor.icon),allSensors.count[STATUS.WARNING]++;break;case STATUS.ERROR:sensor.severityLevel=SEVERITY.ERROR,sensor.icon=ICON.ERROR,allSensors.severityLevel=sensor.severityLevel,allSensors.icon=sensor.icon,allSensors.count[STATUS.ERROR]++;break;default:sensor.severityLevel=SEVERITY.NORMAL,sensor.icon=ICON.NORMAL,allSensors.count[STATUS.NORMAL]++}},SensorInformationWidget.prototype._genSensorStatus=function(sensor,allSensors){sensor.status=STATUS.NORMAL,sensor.cause="",sensor.thresholds&&Object.keys(sensor.thresholds).length&&[UPPER_KEY,LOWER_KEY].forEach(function(key){key===UPPER_KEY?sensor.thresholds.hasOwnProperty(key+THRESHOLD.ERROR)&&sensor.value>sensor.thresholds[key+THRESHOLD.ERROR]?(sensor.status=STATUS.ERROR,sensor.cause=key+THRESHOLD.ERROR,allSensors.status=sensor.status):sensor.thresholds.hasOwnProperty(key+THRESHOLD.WARNING)&&sensor.value>sensor.thresholds[key+THRESHOLD.WARNING]&&(sensor.status=STATUS.WARNING,sensor.cause=key+THRESHOLD.WARNING,allSensors.status===STATUS.NORMAL&&(allSensors.status=sensor.status)):sensor.thresholds.hasOwnProperty(key+THRESHOLD.ERROR)&&sensor.value<sensor.thresholds[key+THRESHOLD.ERROR]?(sensor.status=STATUS.ERROR,sensor.cause=key+THRESHOLD.ERROR,allSensors.status=sensor.status):sensor.thresholds.hasOwnProperty(key+THRESHOLD.WARNING)&&sensor.value<sensor.thresholds[key+THRESHOLD.WARNING]&&(sensor.status=STATUS.WARNING,sensor.cause=key+THRESHOLD.WARNING,allSensors.status===STATUS.NORMAL&&(allSensors.status=sensor.status))}),sensor.type===SENSOR_TYPES.POWER&&sensor.alarm&&(sensor.status=STATUS.ERROR,sensor.cause=CAUSE_AC_LOST,allSensors.status=sensor.status),this._genSensorStatusExtra(sensor,allSensors)},SensorInformationWidget.prototype._parseSensors=function(sensors){var data={};return["temperature","power","fan"].forEach(function(key){data[key]={values:[],status:STATUS.NORMAL,severityLevel:SEVERITY.NORMAL,icon:ICON.NORMAL,count:{}},data[key].count[STATUS.NORMAL]=0,data[key].count[STATUS.WARNING]=0,data[key].count[STATUS.ERROR]=0}),sensors.reduce(function(previous,current){if(current.type!==SENSOR_TYPES.VOLTAGE){var mappedKey=current.type;this._genSensorStatus(current,previous[mappedKey]),previous[mappedKey].values.push(current)}return previous}.bind(this),data)},SensorInformationWidget.prototype.toggleMenu=function(event,menuKey){this.popUpMenu[menuKey].toggle({top:event.clientY,left:event.clientX})},SensorInformationWidget.prototype.showList=inject.mark(function(slide,lang){return function(sensorType){var modalData={entries:this[sensorType].values,sensorType:sensorType};slide.open("SENSOR_INFORMATION_WIDGET_LIST",{template:"<f-sensor-information-widget-list></f-sensor-information-widget-list>",data:modalData,options:{title:lang("Sensor List").toString()+" - "+lang(TYPE_BASE_LANG_KEY+sensorType).toString(),fullHeight:!0}})}}),function(providers,loader){return providers.$compile.component("fSensorInformationWidget",{templateUrl:function(loader){return loader.base_path("f-sensor-information-widget.html",module)},controller:SensorInformationWidget,bindings:{widgetModel:"<"}}),loader.initModules(["f-sensor-information-widget-tooltip","f-sensor-information-widget-list","f-sensor-information-widget-list-menu"],module)}}),define("ng/system/dashboard/f-sensor-information-widget-tooltip",["module"],function(module){"use strict";function SensorInformationWidgetTooltip(){this.STATUS_BASE_LANG_KEY="Sensor::status.",this.STATUS={NORMAL:"normal",WARNING:"warning",ERROR:"error"},this.ICON={NORMAL:"fa-enabled",WARNING:"fa-severity-high",ERROR:"fa-severity-critical"}}return function(providers){providers.$compile.component("fSensorInformationWidgetTooltip",{templateUrl:function(loader){return loader.base_path("f-sensor-information-widget-tooltip.html",module)},controller:SensorInformationWidgetTooltip,bindings:{sensors:"<"}})}}),define("ng/system/dashboard/f-sensor-information-widget-list",["module","angular","ng/services/injector","jquery"],function(module,angular,inject,$){"use strict";function SensorInformationWidgetList(injector,$scope){injector.injectMarked(this,{$scope:$scope}),this._init()}var CAUSE_LANG_KEY="Sensor::cause.",STATUS_BASE_LANG_KEY="Sensor::status.",STATUS={NORMAL:"normal",WARNING:"warning",ERROR:"error"},SENSOR_TYPES={VOLTAGE:"voltage",TEMPERATURE:"temperature",FAN:"fan",POWER:"power"},celciusToFahrenheit=function(celcius){return Math.round(1.8*celcius+32)};SensorInformationWidgetList.prototype._init=inject.mark(function(slide,$scope){return function(){var current=slide.get("SENSOR_INFORMATION_WIDGET_LIST");this._setupOptions(),current.data.sensorType===SENSOR_TYPES.TEMPERATURE?(this.needMenu=!0,this.temperatureUnits=["C","F"],this.temperatureUnit="C",this.cachedEntries={},$scope.$watch("$ctrl.temperatureUnit",function(unit){unit&&(this.cachedEntries[unit]?this.entries=this.cachedEntries[unit]:this.entries=this.cachedEntries[unit]="C"===unit?current.data.entries:JSON.parse(JSON.stringify(current.data.entries)).map(function(entry){return entry.value=celciusToFahrenheit(entry.value),entry}))}.bind(this))):this.entries=current.data.entries}}),SensorInformationWidgetList.prototype._setupOptions=inject.mark(function(lang){return function(){var that=this,sensorListOptions={columns:[{selector:"name",lang_key:"Name"},{selector:"status",lang_key:"Status"},{selector:"value",lang_key:"value",fld_type:"number"}],format_fn:{status:function(td,selector,entry){var html='<f-icon class="'+entry.icon+'"></f-icon>';return html+="<span>",html+=lang(entry.status!==STATUS.NORMAL?CAUSE_LANG_KEY+entry.cause:STATUS_BASE_LANG_KEY+entry.status),html+="</span>"},value:function(td,selector,entry){var unit="";return entry.type===SENSOR_TYPES.TEMPERATURE?unit="°"+that.temperatureUnit:entry.type===SENSOR_TYPES.POWER?unit="W":entry.type===SENSOR_TYPES.FAN&&(unit="RPM"),entry.value+" "+unit}},callbacks:{load:function(){$(".qtip-tooltip").ftip()}}};this.options=sensorListOptions}});var fSensorInformationWidgetList={controller:SensorInformationWidgetList,templateUrl:function(loader){return loader.cache_path("f-sensor-information-widget-list.html",module)}};return function(providers){providers.$compile.component("fSensorInformationWidgetList",fSensorInformationWidgetList)}}),define("ng/system/dashboard/f-sensor-information-widget-list-menu",["module"],function(module){"use strict";return function(providers){providers.$compile.component("fSensorInformationWidgetListMenu",{templateUrl:function(loader){return loader.base_path("f-sensor-information-widget-list-menu.html",module)},controller:function(){},require:{listCtrl:"^fSensorInformationWidgetList"}})}}),define("ng/system/dashboard/f-system-ha-widget",["module","ng/services/injector","fweb"],function(module,inject,fweb){"use strict";function SystemHaWidget($scope,injector){injector.injectMarked(this,{$scope:$scope}),this._init()}var HA_URI="/api/v2/monitor/system/",HA_STATISTICS_URI=HA_URI+"ha-statistics",HA_CHECKSUMS_URI=HA_URI+"ha-checksums",HA_PEER_URI=HA_URI+"ha-peer",HA_MODES=fweb.BUILD.SYMBOLS;return SystemHaWidget.prototype._init=inject.mark(function($scope,$timeout,$interval,state){return function(){this.loading=!0,this.timeoutPromise=null,this.haEnabled=state.hasOwnProperty("ha_mode")&&[HA_MODES.HA_AA,HA_MODES.HA_AP].indexOf(state.ha_mode)>=0,this._load();var tickPromise=$interval(function(){if(this.ha&&this.ha.history){var utc=Math.round((new Date).getTime()/1e3);this.ha.uptime=utc-this.ha.history.start_time,this.ha.history.last_change>0&&(this.ha.lastChange=utc-this.ha.history.last_change)}}.bind(this),1e3);$scope.$on("$destroy",function(){$timeout.cancel(this.timeoutPromise),$interval.cancel(tickPromise)}.bind(this))}}),SystemHaWidget.prototype._load=inject.mark(function($q,$http,$timeout,$interval,widgetShared,CMDB,SystemHaModel){return function(){function monitorResult(responseJSON){return JSON.parse(responseJSON).results}if(!this.haEnabled)return void(this.loading=!1);var haCmdb=new CMDB("system","ha",{model:SystemHaModel,datasource:!0}),resources={statistics:$http.get(HA_STATISTICS_URI,{transformResponse:monitorResult}),checksums:$http.get(HA_CHECKSUMS_URI,{transformResponse:monitorResult}),peers:$http.get(HA_PEER_URI,{transformResponse:monitorResult}),history:$http.get(HA_URI+"ha-history",{transformResponse:monitorResult}),cmdb:haCmdb.get().$promise};$q.all(resources).then(function(responses){this.ha=this._transform(responses),this.loading=!1}.bind(this)).finally(function(){this.timeoutPromise=$timeout(this._load.bind(this),widgetShared.REFRESH_INTERVAL.NORMAL)}.bind(this))}}),SystemHaWidget.prototype._transform=inject.mark(function(state){return function(data){function isMaster(node){return node.is_manage_master}function bySnVc(result,peer){return result[snVcKey(peer)]=peer,result}function snVcKey(peer){return JSON.stringify({sn:peer.serial_no,vc:peer.vcluster_id})}var master,masterChecksum,hostname,checksumUnsynced,transformedNode,ha={},haSerialNameMapping=this._transformStats(data.statistics.data),peerIndex=data.peers.data.reduce(bySnVc,{});ha.mode=state.ha_mode===HA_MODES.HA_AA?"ha_aa":"ha_ap",ha.group=data.cmdb["group-name"],ha.cluster={master:{},slaves:[]},master=data.checksums.data.find(isMaster),masterChecksum=master&&master.checksum&&master.checksum.all,data.checksums.data.forEach(function(node){hostname=haSerialNameMapping[node.serial_no]?haSerialNameMapping[node.serial_no].name:"",checksumUnsynced=masterChecksum!==node.checksum.all,transformedNode={serial:node.serial_no,hostname:hostname,checksum:node.checksum.all,checksumUnsynced:checksumUnsynced,icon:checksumUnsynced?"fa-severity-critical":"fa-enabled",severityLevel:checksumUnsynced?"severity-critical":"",secondaryVCluster:peerIndex[snVcKey(Object.assign({vcluster_id:1},node))],vclusters:data.cmdb.$vclusters},node.is_manage_master?ha.cluster.master=transformedNode:ha.cluster.slaves.push(transformedNode)}),ha.history=data.history.data;var utc=Math.round((new Date).getTime()/1e3);return ha.uptime=utc-ha.history.start_time,ha.lastChange=utc-ha.history.last_change,ha}}),SystemHaWidget.prototype._transformStats=function(haStats){return haStats.reduce(function(transformed,node){return transformed[node.serial_no]={name:node.hostname},transformed},{})},SystemHaWidget.prototype.toggleMenu=function(menu,event){menu.toggle({top:event.clientY,left:event.clientX})},SystemHaWidget.prototype.toHaSetting=inject.mark(function($location){return function(){$location.path("/system/ha/monitor")}}),SystemHaWidget.prototype.showHaHistory=inject.mark(function(slide,lang){return function(){slide.open("ha-history-list",{template:"<f-ha-history></f-ha-history>",data:this.ha.history,options:{title:lang("HA Historical Events").toString(),closeOnEscape:!0,fullHeight:!0}})}}),function(providers,loader){return providers.$compile.component("fSystemHaWidget",{templateUrl:function(loader){return loader.base_path("f-system-ha-widget.html",module)},controller:SystemHaWidget,bindings:{widgetModel:"<"}}),loader.initModules(["f-system-ha-widget-tooltip","/ng/system/ha/system-ha-model"],module)}}),define("ng/system/dashboard/f-system-ha-widget-tooltip",["module"],function(module){"use strict";return function(providers){providers.$compile.component("fSystemHaWidgetTooltip",{templateUrl:function(loader){return loader.base_path("f-system-ha-widget-tooltip.html",module)},controller:function(){},bindings:{widgetModel:"<",node:"<clusterNode"}})}}),define("ng/system/dashboard/f-vulnerability-summary-widget",["module","js/d3","jquery","ng/services/injector"],function(module,d3,$,inject){"use strict";function VulnerabilitySummaryWidget($scope,state,vulnerabilitySummaryData){var timeframeOptions=state.getFortiViewTimeframeOptions(),timePeriod=this.timePeriod=timeframeOptions[timeframeOptions.length-1];this.loading=!0,vulnerabilitySummaryData.getHostScanSummary(timePeriod).then(function(results){results.vulnerabilityCategories=Object.keys(results.vulncat),this.vulnerabilitySummaryData=results,this.loading=!1}.bind(this))}function VulnerabilitySummaryVisualization($scope,$element,injector){injector.injectMarked(this,{$scope:$scope}),$element.addClass("d3-chart");var parent=d3.select($element[0]),svg=this.svg=parent.append("svg");this.g=svg.append("g"),$scope.$watch(function(){return{width:$element.width(),relativeHeight:this.summaryWidget.widgetModel.getRelativeHeight()}}.bind(this),function(result){this.dimensions={width:result.width,height:Math.max(result.relativeHeight*this.systemDashboard.WIDGET_SIZE,100)},this.update(this.data)}.bind(this),!0),$scope.$watch("$ctrl.data",this.update.bind(this))}var VULNERABILITY_LEVELS=["critical","high","medium","low"],CIRCLE_STROKE_WIDTH=.085,LABEL_WIDTH_MIN=100,SEVERITY_CLASSES=["severity-critical","severity-high","severity-medium","severity-low"];return VulnerabilitySummaryWidget.prototype.toggleMenu=function(menu,event){menu.toggle({top:event.clientY,left:event.clientX})},VulnerabilitySummaryVisualization.prototype.update=inject.mark(function(lang){return function(summaryData){if(summaryData&&summaryData.severity){var levelCounts=VULNERABILITY_LEVELS.map(function(type){return summaryData.severity[type]||0}),minDimension=Math.min(this.dimensions.width/VULNERABILITY_LEVELS.length,this.dimensions.height-60);this.svg.style("height",minDimension+"px"),this.g.attr("transform","translate("+this.dimensions.width/2+","+minDimension/2+")");var groups=this.g.selectAll("g").data(levelCounts),newGroups=groups.enter().append("g"),circleRadius=minDimension/2-5,haveSpaceForLabels=2*circleRadius>LABEL_WIDTH_MIN;newGroups.append("circle").attr("class",function(d,i){return"outline "+SEVERITY_CLASSES[i]}),newGroups.append("circle").attr("class",function(d,i){return"inner "+SEVERITY_CLASSES[i]}),newGroups.append("text").classed("level-count",!0).style("font-size",.75*circleRadius).style("fill","white").attr("text-anchor","middle").attr("dominant-baseline","middle"),newGroups.append("text").classed("level-label",!0).attr("dy",circleRadius).style("fill","white").attr("text-anchor","middle").attr("dominant-baseline","middle"),groups.attr("transform",function(d,i){var radiusWithMargin=circleRadius+5,relativePosition=i-VULNERABILITY_LEVELS.length/2,x=2*radiusWithMargin*relativePosition+radiusWithMargin;return"translate("+[x,0]+")"}),groups.select("circle.inner").attr("r",circleRadius-circleRadius*CIRCLE_STROKE_WIDTH*.5-1).style("stroke","white").style("stroke-width",circleRadius*CIRCLE_STROKE_WIDTH),groups.select("circle.outline").attr("r",circleRadius),groups.select("text.level-label").attr("dy",circleRadius/2).text(function(d,i){return haveSpaceForLabels?lang(VULNERABILITY_LEVELS[i]).toString():""}),groups.select("text.level-count").style("font-size",.75*circleRadius).text(function(d,i){return levelCounts[i]})}}}),function(providers){providers.$compile.component("fortiviewVulnerabilitySummaryVisualization",{controller:VulnerabilitySummaryVisualization,bindings:{data:"="},require:{summaryWidget:"^fVulnerabilitySummaryWidget",systemDashboard:"^fSystemDashboard"}}),providers.$compile.component("fVulnerabilitySummaryWidget",{templateUrl:function(loader){return loader.base_path("f-vulnerability-summary-widget.html",module)},controller:VulnerabilitySummaryWidget,bindings:{widgetModel:"<"}})}}),define("ng/system/dashboard/f-vm-information-widget",["module","ng/services/injector","fweb"],function(module,inject,fweb){"use strict";function VmInformationWidget($scope,injector){injector.injectMarked(this,{$scope:$scope})}var PAGE_URLS={vmlicense:{href:"/ng/system/vm/license"},systemFortiGuard:{href:"/ng/system/fortiguard"}};return VmInformationWidget.prototype.getSeverityStatusClass=function(){var criticalStatus=[fweb.BUILD.SYMBOLS.LICENSE_STATUS_VM_EXPIRED,fweb.BUILD.SYMBOLS.LICENSE_STATUS_VM_INVALID];return criticalStatus.includes(this.license.status)?"critical":this.vm.evaluation_mode?"high":""},VmInformationWidget.prototype.$onInit=inject.mark(function(state){return function(){this.loading=!0,this.vm={},this.isSVM=state.is_vmx_manager,this.hasSystemWritePermission=state.adminHasWritePermission(state.ACCESS_GROUP.SYSTEM),this._run()}}),VmInformationWidget.prototype._run=inject.mark(function($scope,notificationRequests){return function(){notificationRequests.watch($scope,"license",function(licenses){this.license=licenses.vm,this.license&&this.processLicense(this.license),this.loading=!1}.bind(this),!0)}}),VmInformationWidget.prototype.processLicense=inject.mark(function(license,state,lang){return function(vm){var KEY_WITH_USAGE=["cpu","mem","vmx_instance"],fortiGateTimeZoneString=state.getFortiGateTimeZoneOffsetString();["evaluation_mode","license_platform_name","closed_network"].forEach(function(key){this.vm[key]=vm[key]}.bind(this)),KEY_WITH_USAGE.forEach(function(key){var max=vm[key+"_max"],used=vm[key+"_used"],subTitles=["mem"===key?fweb.util.formatters.binary_bytes(used,0,!0):used];max>0&&subTitles.push("mem"===key?fweb.util.formatters.binary_bytes(max,0,!0):max),this.vm[key]={max:max,percentage:max>0?used/max*100:0,subTitle:subTitles.join(" / ")}}.bind(this)),this.vm.status={status:vm.status,timeZoneString:fortiGateTimeZoneString},vm.expires&&(this.vm.status.expires=vm.expires,this.vm.license_expiry_date={subTitle:license.formatExpiryDate(vm.expires,fortiGateTimeZoneString)},this.vm.license_expiry_label=license.getExpiresLangKeyForStatus(vm.status),this.vm.extraTooltips=[{key:lang("timezone"),value:state.time_zone_text}])}}),VmInformationWidget.prototype.toggleMenu=function(menu,event){menu.toggle({top:event.clientY,left:event.clientX})},VmInformationWidget.prototype.redirectTo=inject.mark(function($location,structure,state){return function(destination,vdom){var uri=structure.ngURI(PAGE_URLS[destination].href);PAGE_URLS[destination].vdom&&state.vdom_mode?$location.path(uri).search("vdom",vdom||state.management_vdom):$location.path(uri)}}),function(providers,loader){return providers.$compile.component("fVmInformationWidget",{templateUrl:function(loader){return loader.base_path("f-vm-information-widget.html",module)},controller:VmInformationWidget,bindings:{widgetModel:"<"}}),loader.initModules(["f-license-license-item","f-license-service-item"],module)}}),define("ng/system/dashboard/f-widget-selection",["module","angular","ng/services/injector"],function(module,angular,inject){"use strict";function WidgetSelection($scope,injector,slide,lang){injector.injectMarked(this,{$scope:$scope});var activeSlide=slide.get("dashboardAddWidget");if(this.data=activeSlide.data,this.slide=activeSlide.slide,this._collect(),this.data.prefilledWidget){var type=this.data.prefilledWidget.type,configuration=this.data.WIDGET_CONFIGURATION[type],prefilledEntry=Object.assign({type:type,label:lang("dashboard_widget_type::"+type).toString(),values:this.data.prefilledWidget.values},configuration);this.selectWidget(prefilledEntry)}}return WidgetSelection.prototype.addWidget=function(type,widget){widget=widget||{},Object.assign(widget,{type:type}),this.selectedType=null,this.typeCounts[widget.type]++,this.data.addCallback(widget)},WidgetSelection.prototype.addCustomizedWidget=inject.mark(function($scope){return function(){return this.form.$valid?("function"==typeof this.beforeSubmitFn&&(this.widget=this.beforeSubmitFn(angular.copy(this.widget))),void this.addWidget(this.selectedType,this.widget)):void $scope.$broadcast("validation-msg_show")}}),WidgetSelection.prototype.selectWidget=inject.mark(function(lang){return function(entry){var configuration=this.data.WIDGET_CONFIGURATION[entry.type],custom=configuration.customizeComponent;this.beforeSubmitFn=null,custom?(this.selectedType=entry.type,this.widget=entry.values||{},this.customizeComponent="<"+custom+' widget="$ctrl.widget"></'+custom+">",this.slide.update({title:lang("Add Dashboard Widget - {0}",[entry.label]).toString()})):this.addWidget(entry.type)}}),WidgetSelection.prototype.close=inject.mark(function(lang){return function(){this.selectedType&&!this.data.prefilledWidget?(this.selectedType=null,this.slide.update({title:lang("Add Dashboard Widget").toString()})):this.slide.close()}}),WidgetSelection.prototype._collect=inject.mark(function(lang){return function(){var byCategory={},categorizedWidgets={},typeCounts={};Object.keys(this.data.WIDGET_TYPES).forEach(function(key){var type=this.data.WIDGET_TYPES[key],configuration=this.data.WIDGET_CONFIGURATION[type],category=configuration.category,entry=Object.assign({type:type,label:lang("dashboard_widget_type::"+type).toString()},configuration);byCategory[category]||(byCategory[category]=[]),byCategory[category].push(entry),typeCounts[type]=0}.bind(this)),Object.keys(this.data.WIDGET_CATEGORIES).forEach(function(key){var category=this.data.WIDGET_CATEGORIES[key],entries=byCategory[category];entries&&(entries.sort(function(a,b){return a.label.localeCompare(b.label)}),categorizedWidgets[category]=entries)}.bind(this)),this.data.currentWidgets.forEach(function(widget){typeCounts[widget.type]++}),this.categorizedWidgets=categorizedWidgets,this.typeCounts=typeCounts}}),WidgetSelection.prototype.beforeSubmit=function(beforeSubmitFn){
this.beforeSubmitFn=beforeSubmitFn},function(providers){providers.$compile.component("fWidgetSelection",{templateUrl:function(loader){return loader.base_path("f-widget-selection.html",module)},controller:WidgetSelection})}}),define("ng/system/dashboard/f-dashboard-edit",["module","angular","ng/services/injector","fweb"],function(module,angular,inject,fweb){"use strict";function DashboardEdit($http,$q,$scope,injector,state,slide){injector.injectMarked(this,{$scope:$scope});var promises=[this._getAllDashboards(),this._getSchema()];this.mkey||promises.push(this._getDefaults()),this.loading=!0,$q.all(promises).then(function(){var i;if(this.mkey){for(i=0;i<this.dashboards.length;i++)if(this.dashboards[i].id===this.mkey){this.dashboard=this.dashboards[i];break}this.currentName=this.dashboard.name}else this.dashboard=this.defaults,this.dashboard.scope=state.getCurrentVDOMScope();this.original=Object.assign({},this.dashboard),this.loading=!1}.bind(this)),this.slide=slide.get("dashboardEdit")}DashboardEdit.prototype._getAllDashboards=inject.mark(function($http,state){return function(){return $http.get(this.DASHBOARD_URI).then(function(response){this.dashboards=response.data.results.filter(function(dashboard){return dashboard.scope===state.getCurrentVDOMScope()})}.bind(this))}}),DashboardEdit.prototype._getSchema=inject.mark(function($http){return function(){return $http.get(this.DASHBOARD_URI,{params:{action:"schema"}}).then(function(response){this.schema=response.data.results}.bind(this))}}),DashboardEdit.prototype._getDefaults=inject.mark(function($http){return function(){return $http.get(this.DASHBOARD_URI,{params:{action:"default"}}).then(function(response){this.defaults=response.data.results}.bind(this))}}),DashboardEdit.prototype.XSS_PATTERN=fweb.util.patterns.commonRegExp.XSS,DashboardEdit.prototype.DASHBOARD_URI=inject.mark(function(state){return"/api/v2/cmdb/system/admin/"+encodeURIComponent(state.admin.name)+"/gui-dashboard/"}),DashboardEdit.prototype.submit=inject.mark(function($scope,$http){return function(){var promise;return this.form.$valid?(this.mkey?(this.dashboard["layout-type"]!==this.original["layout-type"]&&(this.dashboard.widget=[]),promise=$http.put(this.DASHBOARD_URI+this.mkey,this.dashboard)):promise=$http.post(this.DASHBOARD_URI,this.dashboard),promise.then(function(response){var dashboardCopy=angular.extend({id:response.data.mkey},this.dashboard);delete dashboardCopy.widgets,this.slide.data.updatedDashboard=dashboardCopy,this.slide.slide.done()}.bind(this))):void $scope.$broadcast("validation-msg_show")}});var fUniqueDashboardName=function(){return{restrict:"A",require:"ngModel",link:function(scope,elem,attrs,ngModel){var current,dashboards=[];scope.$watch(function(){return scope.$eval(attrs.dashboards)},function(value){value&&Array.isArray(value)&&(dashboards=value)}),scope.$watch(function(){return scope.$eval(attrs.current)},function(value){current=value}),ngModel.$validators.fUniqueDashboardName=function(value){return!!ngModel.$isEmpty(value)||(value===current||dashboards.every(function(dashboard){return dashboard.name!==value}))}}}};return function(providers){providers.$compile.component("fDashboardEdit",{templateUrl:function(loader){return loader.base_path("f-dashboard-edit.html",module)},controller:DashboardEdit,bindings:{mkey:"<?"}}),providers.$compile.directive("fUniqueDashboardName",fUniqueDashboardName)}}),define("ng/system/dashboard/services/system-resource-usage",["ng/services/injector"],function(inject){"use strict";function SystemResourceUsage(injector){injector.injectMarked(this,{that:this}),this._watchingWidgets={},this.resources={},this._timeoutPromise=null,this._running=!1}var RESOURCE_USAGE_URL="/api/v2/monitor/system/resource/usage",TIME_OPTION_STORAGE_PREFIX="dashboard_time_option_",getTimeOptionStorageKey=function(dashboardId,widgetKey){return TIME_OPTION_STORAGE_PREFIX+"dashboard-"+dashboardId+"_"+widgetKey};return SystemResourceUsage.prototype={HOUR_IN_MS:1e3*Math.pow(60,2),TIME_PERIOD_IN_SEC:{"1-min":60,"10-min":600,"30-min":1800,"1-hour":6e3,"12-hour":72e3,"24-hour":144e3},TIME_OPTIONS:[{option:"1-min",name:"minute"},{option:"10-min",name:"10 minutes"},{option:"30-min",name:"30 minutes"},{option:"1-hour",name:"hour"},{option:"12-hour",name:"12 hours"},{option:"24-hour",name:"day"}],_poll:inject.mark(function($http,$timeout,state,widgetShared){return function(){var params={};return state.vdom_mode&&""!==state.current_vdom||(params.scope="global"),this._running=!0,$timeout.cancel(this._timeoutPromise),$http.get(RESOURCE_USAGE_URL,{params:params}).then(function(response){this.resources=response.data.results}.bind(this)).finally(function(){this._running&&(this._timeoutPromise=$timeout(this._poll.bind(this),widgetShared.REFRESH_INTERVAL.SHORT))}.bind(this))}}),registerWatch:function(id){this._watchingWidgets[id]=!0,this._running||this._poll()},unRegisterWatch:inject.mark(function($timeout){return function(id){delete this._watchingWidgets[id],Object.keys(this._watchingWidgets).length||(this._running=!1,$timeout.cancel(this._timeoutPromise))}}),getTimeOptions:inject.mark(function(that){return function(){return that.TIME_OPTIONS}}),getTimeOptionForWidget:inject.mark(function(that,persistentStorage,$routeParams){return function(widgetKey){return persistentStorage.get(getTimeOptionStorageKey($routeParams.id,widgetKey))||that.TIME_OPTIONS[0]}}),saveTimeOptionForWidget:inject.mark(function(persistentStorage,$routeParams){return function(widgetKey,timeOption){persistentStorage.put(getTimeOptionStorageKey($routeParams.id,widgetKey),timeOption)}}),plotFormatters:{xAxisConfig:function(widgetModel,dataStart,dataEnd,defaultSettings){var config={mode:"time",timezone:"browser",min:dataStart-100,max:dataEnd+100};return widgetModel.getWidth()<2&&!defaultSettings&&(config.ticks=2),config}}},function(providers){providers.$provide.service("systemResourceUsage",SystemResourceUsage)}}),define("ng/system/dashboard/services/vulnerability-summary-data",["module","ng/services/injector","select_setup"],function(module,inject,select_setup){"use strict";function VulnerabilitySummaryData(injector){injector.injectMarked(this,{that:this})}var VULNERABILITY_LEVELS=["critical","high","medium","low","info"];return VulnerabilitySummaryData.prototype={getHostScanSummary:inject.mark(function($q,csfTopology){return function(){var result={deviceSources:{},severity:{},vulncat:{}};return VULNERABILITY_LEVELS.forEach(function(level){result.severity[level]=0}),result.vulnerable=result.secured=result.unscanned=0,csfTopology.build().then(function(){var detectedDevicesPromises=csfTopology.fortigates.map(function(fortigate){var fortigateDeviceSource=select_setup.getCSFProxySourceID("detectedDevices",fortigate.path);return Omniselect.getSourceData(fortigateDeviceSource).then(function(devices){return result.deviceSources[fortigate.serial]=devices,devices.forEach(function(device){if(device.is_online){var endpoint=device.endpoint_record;endpoint&&0===endpoint.vulnerabilities.vuln_count?result.secured++:endpoint&&endpoint.vulnerabilities.vuln_count&&(result.vulnerable++,VULNERABILITY_LEVELS.forEach(function(level){result.severity[level]+=endpoint.vulnerabilities["vuln_count_"+level]}))}}),devices})});return $q.all(detectedDevicesPromises).then(function(detectedDevices){var totalDevices=detectedDevices.reduce(function(sum,current){return sum+current.filter(function(device){return device.is_online}).length},0);return result.unscanned=totalDevices-result.secured-result.vulnerable,result})})}})},function(providers){providers.$provide.service("vulnerabilitySummaryData",VulnerabilitySummaryData)}}),define("ng/system/dashboard/services/widget_shared",["ng/services/injector"],function(inject){"use strict";function WidgetShared(injector){injector.injectMarked(this)}var ONE_SECOND=1e3;return WidgetShared.prototype.REFRESH_INTERVAL={SHORT:3*ONE_SECOND,NORMAL:15*ONE_SECOND,LONG:30*ONE_SECOND},WidgetShared.prototype.getIPLocation=inject.mark(function($http){function extractName(object){var name;return object&&object.names&&object.names.en&&(name=object.names.en),name}return function(queryIP){return $http.get("/api/v2/monitor/geoip/geoip-query",{params:{ip_addresses:[queryIP]}}).then(function(response){var items=[],results=response.data.results,entry=results[queryIP];return entry&&entry.location&&(items.push(entry.location.city),entry.location.subdivisions&&(items=items.concat(entry.location.subdivisions)),items.push(entry.location.country)),{countryISOCode:entry&&entry.location.country&&entry.location.country.iso_code,location:items.map(extractName).filter(function(value){return value}).join(", ")}}.bind(this))}}),function(providers){providers.$provide.service("widgetShared",WidgetShared)}}),define("ng/system/dashboard/templates",function(){"use strict";return function(providers){if(providers.$injector){var $templateCache=providers.$injector.get("$templateCache");$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-atp-stats-widget.html",'<f-dashboard-widget widget-model="::$ctrl.widgetModel" loading="$ctrl.loading"><widget-title>{{::\'dashboard_widget_type::analytics\' | lang}}</widget-title><widget-content><div class="atp-stats-container" ng-class="{\'full-dimension-widget\': $ctrl.fullDimension}"><div class="atp-stats-category"><div f-chart="$ctrl.avChartConfig" resizing="$ctrl.chartResizing" class="atp-stats-chart" ng-if="$ctrl.showGraphs"></div><div><table class="table key-value"><tbody><tr><td>{{::\'FortiGate Scanned Files\' | lang}}</td><td>{{$ctrl.avStats.scanned | number}}</td></tr><tr ng-class="{child: !$ctrl.showGraphs}"><td><div class="chart-legend-item-container"><div class="chart-legend-item" ng-show="$ctrl.showGraphs"><div class="chart-legend-color" ng-style="::{\'background-color\': $ctrl.AV_COLORS.infected}"></div></div>{{::$ctrl.AV_LABELS.infected}}</div></td><td>{{$ctrl.avStats.infected | number}}</td></tr><tr ng-class="{child: !$ctrl.showGraphs}"><td><div class="chart-legend-item-container"><div class="chart-legend-item" ng-show="$ctrl.showGraphs"><div class="chart-legend-color" ng-style="::{\'background-color\': $ctrl.AV_COLORS.behavior}"></div></div>{{::$ctrl.AV_LABELS.behavior}}</div></td><td>{{$ctrl.avStats.behavior | number}}</td></tr><tr ng-class="{child: !$ctrl.showGraphs}"><td><div class="chart-legend-item-container"><div class="chart-legend-item" ng-show="$ctrl.showGraphs"><div class="chart-legend-color" ng-style="::{\'background-color\': $ctrl.AV_COLORS.suspicious}"></div></div>{{::$ctrl.AV_LABELS.suspicious}}</div></td><td>{{$ctrl.avStats.suspicious | number}}</td></tr><tr ng-class="{child: !$ctrl.showGraphs}"><td><div class="chart-legend-item-container"><div class="chart-legend-item" ng-show="$ctrl.showGraphs"><div class="chart-legend-color" ng-style="::{\'background-color\': $ctrl.AV_COLORS.clean}"></div></div>{{::$ctrl.AV_LABELS.clean}}</div></td><td>{{$ctrl.avStats.clean | number}}</td></tr></tbody></table></div></div><div class="atp-stats-category menu-toggle-area" ng-if="$ctrl.sandboxStatus.connected" ng-click="$ctrl.toggleMenu($ctrl.fabricPopUpMenu, $event)"><div f-chart="$ctrl.sandboxChartConfig" resizing="$ctrl.chartResizing" class="atp-stats-chart" ng-if="$ctrl.showGraphs"></div><div><table class="table key-value"><tbody><tr><td ng-if="$ctrl.sandboxStatus.type === \'appliance\'">{{::\'FortiSandbox Scanned Files\' | lang}}</td><td ng-if="$ctrl.sandboxStatus.type === \'cloud\'">{{::\'FortiSandbox Cloud Scanned Files\' | lang}}</td><td>{{$ctrl.sandboxStats.submitted | number}}</td></tr><tr ng-class="{child: !$ctrl.showGraphs}"><td><div class="chart-legend-item-container"><div class="chart-legend-item" ng-show="$ctrl.showGraphs"><div class="chart-legend-color" ng-style="::{\'background-color\': $ctrl.SANDBOX_COLORS.detected}"></div></div>{{::$ctrl.SANDBOX_LABELS.detected}}</div></td><td>{{$ctrl.sandboxStats.detected | number}}</td></tr><tr ng-class="{child: !$ctrl.showGraphs}"><td><div class="chart-legend-item-container"><div class="chart-legend-item" ng-show="$ctrl.showGraphs"><div class="chart-legend-color" ng-style="::{\'background-color\': $ctrl.SANDBOX_COLORS.risk_high}"></div></div>{{::$ctrl.SANDBOX_LABELS.risk_high}}</div></td><td>{{$ctrl.sandboxStats.risk_high | number}}</td></tr><tr ng-class="{child: !$ctrl.showGraphs}"><td><div class="chart-legend-item-container"><div class="chart-legend-item" ng-show="$ctrl.showGraphs"><div class="chart-legend-color" ng-style="::{\'background-color\': $ctrl.SANDBOX_COLORS.risk_med_low}"></div></div>{{::$ctrl.SANDBOX_LABELS.risk_med_low}}</div></td><td>{{$ctrl.sandboxStats.risk_med_low | number}}</td></tr><tr ng-class="{child: !$ctrl.showGraphs}"><td><div class="chart-legend-item-container"><div class="chart-legend-item" ng-show="$ctrl.showGraphs"><div class="chart-legend-color" ng-style="::{\'background-color\': $ctrl.SANDBOX_COLORS.clean}"></div></div>{{::$ctrl.SANDBOX_LABELS.clean}}</div></td><td>{{$ctrl.sandboxStats.clean | number}}</td></tr></tbody></table></div></div></div></widget-content></f-dashboard-widget><div f-pop-up-menu="$ctrl.fabricPopUpMenu"><div f-menu-item-button click="$ctrl.showSystemFabric()"><f-icon class="fa-external-link"></f-icon><span>{{::\'Configure settings in Security Fabric > Settings\' | lang}}</span></div></div>'),$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-audit-history-widget.html",'<f-dashboard-widget widget-model="::$ctrl.widgetModel" max-column-span="::2" loading="$ctrl.loading"><widget-title>{{::\'dashboard_widget_type::security-audit\' | lang}}</widget-title><widget-content><div ng-click="$ctrl.toggleMenu($ctrl.popUpMenu, $event)" ng-class="{\'menu-toggle-area\': $ctrl.hasMenu}"><table class="table full-width key-value"><tbody><tr><td></td><td class="h-align-center"><div ng-if="$ctrl.current.timestamp" f-tip-target><span class="light-text">{{::$ctrl.currentUpdate}}</span><div f-tip><table class="table key-value"><tbody><tr><td>{{:: \'Audit Time\' | lang }}</td><td>{{::$ctrl.timeFormatted($ctrl.current.timestamp)}}</td></tr></tbody></table></div></div><div ng-if="!$ctrl.current.timestamp">{{:: $ctrl.currentUpdate }}</div></td></tr><tr><td>{{::\'Score\' | lang }}</td><td class="h-align-center"><div class="larger-font" ng-if="$ctrl.current.timestamp"><span class="security-index-value">{{::$ctrl.current.score | numberWithSign:1}}</span></div><div class="larger-font light-text" ng-if="!$ctrl.current.timestamp">{{:: \'n/a\' | lang }}</div></td></tr></tbody><tbody class="detailed-stats"><tr ng-repeat="sevLevel in ::[\'critical\', \'high\', \'medium\', \'low\']"><td>{{::\'sev_\' + sevLevel | lang}}</td><td class="h-align-center"><div ng-if="$ctrl.current.timestamp"><span class="number-bubble severity-{{::sevLevel}}">{{:: $ctrl.current[sevLevel] }}</span></div><div class="light-text" ng-if="!$ctrl.current.timestamp">{{:: \'n/a\' | lang }}</div></td></tr></tbody></table></div></widget-content></f-dashboard-widget><div f-pop-up-menu="$ctrl.popUpMenu"><div f-menu-item-button click="$ctrl.redirectToSecurityAudit()"><f-icon class="fa-external-link"></f-icon><span>{{::\'View/apply recommendations in Security Fabric Audit\' | lang}}</span></div></div>'),$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-cpu-per-core-usage.html",'<div class="menu"><button type="button" f-pop-up-menu-toggle="$ctrl.timeOptionsMenu">{{ \'time_period::\' + $ctrl.currentTimeOption.name | lang }}</button><div f-pop-up-menu="$ctrl.timeOptionsMenu"><div f-menu-item-button ng-repeat="timeOption in $ctrl.timeOptions" selected="$ctrl.currentTimeOption === timeOption" ng-click="$ctrl.setTimeOption(timeOption)"><span>{{ \'time_period::\' + timeOption.name | lang }}</span></div></div></div><div class="per-core-line-charts"><div class="per-core-line-chart" ng-repeat="lineChartConfig in $ctrl.lineChartConfigs track by $index"><span class="light-text title">{{:: \'Core {0}\' | lang:[$index + 1] }}</span><div f-chart="lineChartConfig" class="with-current-stat"></div><div class="current-stat"><div class="current-stat-item"><span class="light-text">{{:: \'Current usage\' | lang }}</span> <span class="current-stat-value">{{ lineChartConfig.data[0].currentUsage + \' %\' }}</span></div></div></div></div>'),$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-cpu-usage-widget.html",'<f-dashboard-widget widget-model="::$ctrl.widgetModel" supports-zoom="::true"><widget-title>{{:: \'cpu\' | lang }}</widget-title><extra-controls><button class="bare" f-pop-up-menu-toggle="$ctrl.timeOptionsMenu">{{ \'time_period::\' + $ctrl.currentTimeOption.name | lang }}</button><div f-pop-up-menu="$ctrl.timeOptionsMenu"><div f-menu-item-button ng-repeat="timeOption in $ctrl.timeOptions" selected="$ctrl.currentTimeOption === timeOption" ng-click="$ctrl.setTimeOption(timeOption)"><span>{{ \'time_period::\' + timeOption.name | lang }}</span></div></div></extra-controls><widget-content><div ng-class="{\'menu-toggle-area\': $ctrl.isGlobal && !$ctrl.singleCoreUnit}" ng-click="$ctrl.isGlobal && !$ctrl.singleCoreUnit && $ctrl.toggleMenu($ctrl.popUpMenu, $event)"><div f-chart="$ctrl.lineChartConfig" class="full-graph with-current-stat"></div><div class="current-stat"><div class="current-stat-item"><span class="light-text">{{:: \'Current usage\' | lang }}</span> <span class="current-stat-value">{{ $ctrl.currentUsage + \'%\' }}</span></div></div></div></widget-content><widget-absolute><span ng-if="$ctrl.currentUsage >= 90" class="severity-message severity-high large pinned-message"><f-icon class="fa-severity-high"></f-icon><span>{{:: \'High CPU usage\' | lang }}</span></span></widget-absolute></f-dashboard-widget><div f-pop-up-menu="$ctrl.popUpMenu"><div f-menu-item-button click="$ctrl.showPerCoreUsage()"><f-icon class="fa-line-chart"></f-icon><span>{{:: \'Show per core CPU usage\' | lang }}</span></div></div>'),$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-current-admins-menu.html",'<div class="left-menu-items"><div f-menu-item-button click="$ctrl.getCurrentAdmins()"><f-icon class="fa-refresh"></f-icon><span>{{ ::\'refresh\' | lang }}</span></div><div f-menu-item-button click="$ctrl.disconnectSelectedAdmins()" enabled="$ctrl.canDisconnect(menu.entries)"><f-icon class="fa-sign-out"></f-icon><span>{{ ::\'Disconnect\' | lang }}</span></div></div>'),$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-current-admins.html",'<div class="qlist-view-container"><div class="qlist-menu-bar"><div f-menu-bar qlist-element="$ctrl.qlistElement"><div ng-include="::\'/ng/system/dashboard/f-current-admins-menu.html\' | cache_path"></div></div><div f-pop-up-menu qlist-element="$ctrl.qlistElement"><div ng-include="::\'/ng/system/dashboard/f-current-admins-menu.html\' | cache_path"></div></div></div><f-qlist qlist-element="$ctrl.qlistElement" source="$ctrl.qlistSource" options="$ctrl.qlistOptions"></f-qlist></div>'),$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-dashboard-edit.html",'<f-dialog loading="$ctrl.loading" hide-title="::true" read-only="::false" form="::$ctrl.form" submit="$ctrl.submit()"><section ng-if="!$ctrl.loading"><div class="field"><label for="name">{{::\'Name\' | lang}}</label><div><input type="text" id="name" ng-model="$ctrl.dashboard.name" ng-pattern="$ctrl.XSS_PATTERN" required f-unique-dashboard-name dashboards="$ctrl.dashboards" current="$ctrl.currentName" f-validation-message="{pattern: \'err_xss\', fUniqueDashboardName: \'err_unique_dashboard\'}" f-max-length="$ctrl.schema.children.name.size"></div></div><div class="field"><label><span>{{::\'Layout Type\' | lang}}</span><f-icon class="fa-help-info" f-tip-target><div f-tip><table class="table key-value"><tbody><tr><td><f-icon class="ftnt-responsive"></f-icon><span>{{::\'Responsive\' | lang}}</span></td><td>{{::\'dashboard_type_desc::responsive\' | lang}}</td></tr><tr><td><f-icon class="fa-television"></f-icon><span>{{::\'NOC\' | lang}}</span></td><td ng-bind-html="\'dashboard_type_desc::fixed\' | lang"></td></tr></tbody></table></div></f-icon></label><div class="with-message"><f-radio-group><input type="radio" value="responsive" radio-label="{{::\'Responsive\' | lang}}" radio-icon="ftnt-responsive" ng-model="$ctrl.dashboard[\'layout-type\']"> <input type="radio" value="fixed" radio-label="{{::\'NOC\' | lang}}" radio-icon="fa-television" ng-model="$ctrl.dashboard[\'layout-type\']"></f-radio-group><div class="warning-message" ng-show="$ctrl.mkey &&\n                        $ctrl.dashboard[\'layout-type\'] !== $ctrl.original[\'layout-type\']"><f-icon class="fa-warning"></f-icon><div class="message-content">{{::\'switch_dashboard_layout_type_warning\' | lang}}</div></div></div></div><div class="field" ng-if="$ctrl.dashboard[\'layout-type\'] === \'fixed\'"><label for="columns">{{::\'Grid size\' | lang}}</label><div><input type="number" id="columns" ng-model="$ctrl.dashboard.columns" required f-validation-message min="{{::$ctrl.schema.children.columns[\'min-value\']}}" max="{{::$ctrl.schema.children.columns[\'max-value\']}}"></div></div></section></f-dialog>'),$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-disabled-dashboard-widget.html",'<f-dashboard-widget widget-model="::$ctrl.widgetModel" disabled-widget="::true"><widget-title>{{::\'dashboard_widget_type::\' + $ctrl.type | lang}}</widget-title><widget-content><div class="full-dimension-widget flex-centered"><div class="disabled-label" ng-if="::!$ctrl.data.disabledPlaceholder">{{::\'disabled\' | lang}}</div><div class="disabled-label" ng-if="::$ctrl.data.disabledPlaceholder" ng-bind-html="::$ctrl.data.disabledPlaceholder | toTrustedHtml"></div></div></widget-content></f-dashboard-widget>'),$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-disk-usage-widget.html",'<f-dashboard-widget widget-model="::$ctrl.widgetModel" supports-zoom="::true"><widget-title>{{::\'disk\' | lang}}</widget-title><extra-controls><button class="bare" f-pop-up-menu-toggle="$ctrl.timeOptionsMenu">{{ \'time_period::\' + $ctrl.currentTimeOption.name | lang }}</button><div f-pop-up-menu="$ctrl.timeOptionsMenu"><div f-menu-item-button ng-repeat="timeOption in $ctrl.timeOptions" selected="$ctrl.currentTimeOption === timeOption" ng-click="$ctrl.setTimeOption(timeOption)"><span>{{ \'time_period::\' + timeOption.name | lang }}</span></div></div></extra-controls><widget-content><div f-chart="$ctrl.lineChartConfig" class="full-graph with-current-stat"></div><div class="current-stat"><div class="current-stat-item"><span class="light-text">{{:: \'Current usage\' | lang }}</span> <span class="current-stat-value">{{ $ctrl.currentDiskUsage + \'%\' }}</span></div></div></widget-content></f-dashboard-widget>'),$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-edit-dashboard-widget.html",'<f-dialog hide-title="::true" form="$ctrl.form" submit="$ctrl.submit()"><div f-compile="::$ctrl.template"></div></f-dialog>'),$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-edit-fortiview-widget.html",'<section><f-field><field-label f-lang="fortiview"></field-label><field-value><select ng-model="$ctrl.widget[\'report-by\']" ng-options="option.value as option.lang | lang for option in $ctrl.reportByOptions | orderBy:\'lang | lang\'"></select></field-value></f-field><f-field><field-label f-lang="sort-by"></field-label><field-value><select ng-model="$ctrl.widget[\'sort-by\']" ng-options="option.key as option.lang | lang for option in $ctrl.sortOptions | orderBy:\'lang | lang\'"></select></field-value></f-field><f-field><field-label f-lang="Visualization Type"></field-label><field-value><f-radio-group><div ng-repeat="option in $ctrl.visualizationOptions"><input type="radio" ng-value="option" radio-icon="{{:: $ctrl.visualizationIconMap[option] }}" radio-label="{{::\'fv_visualization_\' + option | lang}}" ng-model="$ctrl.widget.visualization"></div></f-radio-group></field-value></f-field><f-field ng-show="!$ctrl.latestTimeframe"><field-label f-lang="time_period"></field-label><field-value><select ng-model="$ctrl.widget.timeframe" ng-options=":: \'fv_\' + option | lang for option in $ctrl.timeframeOptions"></select></field-value></f-field></section><label class="section-title"><input type="checkbox" class="toggle-switch" ng-model="$ctrl.filterEnabled" id="filter-enabled"><label for="filter-enabled"></label><h2 f-lang="filters"></h2></label><section ng-if="$ctrl.filterEnabled" f-list-edit-container><div class="info-message"><f-icon class="fa-info-circle"></f-icon><div class="message-content">{{:: \'Filters can be set from FortiView pages and saved to a FortiView widget\' | lang }}</div></div><div ng-repeat="filter in $ctrl.widget.filters" f-list-edit="{min: 1}" f-list-edit-item><f-field><field-label f-lang="filter"></field-label><field-value class="wrappable"><select ng-model="filter.key" ng-options="filterConfig.key as filterConfig.lang && (filterConfig.lang | lang) || filterConfig.key for filterConfig in $ctrl.filterConfigs" required></select><input f-list-edit-button="remove" no-text></field-value></f-field><f-field><field-label f-lang="value"></field-label><field-value><input ng-if="!$ctrl.omniselectConfigs[filter.key] && !$ctrl.filterConfigMapping[filter.key].options" ng-model="filter.value" required><div f-omniselect="$ctrl.omniselectConfigs[filter.key]" ng-if="$ctrl.omniselectConfigs[filter.key]" ng-model="filter.value" required></div><select ng-if="$ctrl.filterConfigMapping[filter.key].options" ng-options="(option.value || option) as (option.lang || option) | lang for option in $ctrl.filterConfigMapping[filter.key].options" ng-model="filter.value" required></select></field-value></f-field><hr ng-if="!$last"></div><f-field><field-value><input f-list-edit-button="add" no-text></field-value></f-field></section>'),$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-edit-traffic-history-widget.html",'<section><div class="field"><label>{{::\'Interface\' | lang}}</label><div f-omniselect="$ctrl.INTERFACE_SETTINGS" ng-model="$ctrl.interfaceObject" required f-validation-message></div></div></section>'),$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-forticloud-widget.html",'<f-dashboard-widget widget-model="::$ctrl.widgetModel" loading="$ctrl.loading"><widget-title>{{:: \'dashboard_widget_type::forticloud\' | lang }}</widget-title><widget-content><div class="menu-toggle-area" ng-click="$ctrl.toggleMenu($ctrl.popUpMenu, $event)"><table class="table key-value"><tbody><tr><td>{{::\'Status\' | lang}}</td><td><div ng-class="$ctrl.getSeverityClass()"><f-icon ng-class="$ctrl.getStatusIcon()"></f-icon><span>{{$ctrl.STATUS_BASE_LANG_KEY + $ctrl.data.status | lang}}</span></div></td></tr><tr ng-if="$ctrl.isLoggedIn"><td>{{::\'Account\' | lang}}</td><td>{{$ctrl.data.account}}</td></tr><tr ng-if="$ctrl.isLoggedIn"><td>{{::\'Type\' | lang}}</td><td><div ng-class="$ctrl.getLicenseSeverityClass()" f-tip-target><f-icon ng-class="$ctrl.getLicenseStatusIcon()"></f-icon><span>{{$ctrl.isPaidAccount ? \'Paid\' : \'Free\' | lang}}</span><div f-tip><table class="table key-value"><tbody><tr><td>{{::\'Status\' | lang}}</td><td><f-icon ng-class="$ctrl.getLicenseStatusIcon()"></f-icon><span>{{$ctrl.STATUS_BASE_LANG_KEY + $ctrl.data.license_status | lang}}</span></td></tr><tr ng-if="$ctrl.isPaidAccount"><td>{{::\'expires_on\' | lang}}</td><td>{{$ctrl.expiryDateString($ctrl.data.expires)}}</td></tr></tbody></table></div></div></td></tr><tr ng-if="$ctrl.isLoggedIn"><td>{{::\'Storage Used\' | lang}}</td><td f-tip-target><span class="tooltip-hint">{{$ctrl.data.used_bytes | binaryBytes}}</span><div f-tip><table class="table key-value"><tbody><tr><td>{{::\'Log Storage Duration\' | lang}}</td><td><span ng-show="$ctrl.isPaidAccount">{{::\'Logs will be kept for 1 year.\' | lang}} </span><span ng-hide="$ctrl.isPaidAccount">{{::\'Logs will be kept for 7 days...\' | lang}}</span></td></tr></tbody></table></div></td></tr><tr ng-if="$ctrl.isLoggedIn"><td colspan="2"><div class="separator-line"></div></td></tr><tr ng-if="$ctrl.isLoggedIn"><td>{{::\'sandbox_type::cloud\' | lang}}</td><td><div ng-class="$ctrl.getSandboxSeverityClass()" f-tip-target><f-icon ng-class="$ctrl.getSandboxStatusIcon()"></f-icon><span>{{$ctrl.getSandboxStatusString() | lang}}</span><div f-tip><table class="table key-value"><tbody><tr><td>{{::\'Status\' | lang}}</td><td><f-icon ng-class="$ctrl.getSandboxStatusIcon(true)"></f-icon><span>{{$ctrl.STATUS_BASE_LANG_KEY + $ctrl.data.sandbox.status | lang}}</span></td></tr><tr ng-if="$ctrl.isPaidSandboxAccount"><td>{{::\'expires_on\' | lang}}</td><td>{{$ctrl.expiryDateString($ctrl.data.sandbox.expires)}}</td></tr></tbody></table></div></div></td></tr><tr ng-if="$ctrl.isLoggedIn && $ctrl.usingFortiSandboxCloud()"><td>{{::\'Files Uploaded Today\' | lang}}</td><td><div f-tip-target><div f-resource-bar="($ctrl.data.sandbox.files_uploaded_daily / $ctrl.data.sandbox.max_files_daily) * 100" show-percentage="::true"></div><div f-tip>{{\'{0} files\' | lang: [ $ctrl.numberFilter($ctrl.data.sandbox.files_uploaded_daily) + \' / \' + $ctrl.numberFilter($ctrl.data.sandbox.max_files_daily)]}}</div></div></td></tr></tbody></table></div></widget-content></f-dashboard-widget><div f-pop-up-menu="$ctrl.popUpMenu"><div f-menu-item-button click="$ctrl.registrationAction(\'forticloud\')" ng-if="!$ctrl.isLoggedIn" enabled="$ctrl.hasSystemWritePermission"><f-icon class="fa-sign-in"></f-icon><span>{{::\'Activate FortiCloud\' | lang}}</span></div><div f-menu-item-button click="$ctrl.launchFDSPortal()" ng-if="$ctrl.isLoggedIn" enabled="$ctrl.hasSystemWritePermission"><f-icon class="fa-external-link"></f-icon><span>{{:: \'Launch Portal\' | lang }}</span></div><div f-menu-item-button click="$ctrl.configureLogSettings()" ng-if="$ctrl.showLogSettings()"><f-icon class="fa-external-link"></f-icon><span>{{::\'Configure settings in Log & Report > Log Settings\' | lang}}</span></div><div f-menu-item-button click="$ctrl.watchVideo()" ng-if="$ctrl.isLoggedIn"><f-icon class="fa-video-camera"></f-icon><span ng-if="!$ctrl.isPaidAccount">{{::\'How to Upgrade\' | lang}} </span><span ng-if="$ctrl.isPaidAccount">{{::\'How to Renew\' | lang}}</span></div><div f-menu-item-button click="$ctrl.registrationAction(\'forticloud_extend\')" ng-if="$ctrl.isLoggedIn" enabled="$ctrl.hasSystemWritePermission"><f-icon class="fa-plus"></f-icon><span ng-if="$ctrl.isPaidAccount">{{:: \'Extend Service\' | lang }}</span> <span ng-if="!$ctrl.isPaidAccount">{{:: \'Upgrade Service\' | lang }}</span></div><div f-menu-item-button click="$ctrl.registrationAction(\'forticloud_logout\')" ng-if="$ctrl.isLoggedIn" enabled="$ctrl.hasSystemWritePermission"><f-icon class="fa-sign-out"></f-icon><span>{{:: \'Logout\' | lang }}</span></div></div>'),$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-fortiview-widget.html",'<f-dashboard-widget widget-model="::$ctrl.widgetModel" supports-zoom="::true" has-settings="::true" on-settings="$ctrl.dashboard.editWidget($ctrl.widgetModel)" dashboard-widget="$ctrl.dashboardWidget"><widget-title><span ng-bind="$ctrl.title"></span> <span f-tip-target><f-icon ng-show="$ctrl.modelData.filters.length" class="fa-filter tooltip-hint"></f-icon><div f-tip><div>{{::\'filters\' | lang}}</div><table class="table key-value"><tbody><tr ng-repeat="filter in $ctrl.modelData.filters"><td>{{ filter.lang && (filter.lang | lang) || filter.key }}</td><td>{{ filter.value }}</td></tr></tbody></table></div></span></widget-title><widget-content><div ng-if="$ctrl.visualizationType === $ctrl.visualization.TYPES.TABLE"><table class="table full-width rows-bordered selectable"><thead><tr><th ng-repeat="column in $ctrl.data.columns" ng-if="column.visible" ng-class="{\'can-sort\': $ctrl.sortByOptions[column.key]}" ng-click="$ctrl.sortByOptions[column.key] && ($ctrl.sortBy = column.key)"><div>{{ column.lang | lang }}<f-icon ng-class="{\'fa-sort-desc\': true, \'current-sort\': $ctrl.sortBy == column.key}" ng-show="$ctrl.sortByOptions[column.key]"></f-icon></div></th></tr></thead><tr f-add-tooltips ng-repeat="row in $ctrl.data.rows" ng-mouseup="$ctrl.clickedRow = row; $ctrl.toggleMenu($ctrl.popUpMenu, $event)" ng-class="{\'selected\': $ctrl.clickedRow == row}" oncontextmenu="return false"><td ng-repeat="column in $ctrl.data.columns" ng-bind-html="row.formatted[column.key]" ng-if="column.visible"></td></tr><tr ng-if="!$ctrl.data.rows.length"><td ng-attr-colspan="{{$ctrl.data.columns.length}}"><span ng-hide="$ctrl.loading">{{::\'no_entries\' | lang}}</span><f-icon class="fa-loading icon-xxxl" ng-show="$ctrl.loading" style="position: relative; left: 50%; top: 50%"></f-icon></td></tr></table></div><div ng-if="$ctrl.visualizationType === $ctrl.visualization.TYPES.BUBBLE" class="full-graph d3-chart"><div f-d3-basic-bubble-chart data="$ctrl.dataForVisualization[$ctrl.visualization.TYPES.BUBBLE]" click="$ctrl.setRowClickFn" ng-mouseup="$ctrl.clickedRow = null; $ctrl.toggleMenu($ctrl.popUpMenu, $event)" tooltip-formatter="$ctrl.d3TooltipFormatter" tooltip-create-bind-fn="$ctrl.d3TooltipCreateBindFn" color-fn="$ctrl.visualization.colorFn" stroke-fn="$ctrl.visualization.strokeFn" shown-key-formatter="shownKeyFormatter"></div></div><div ng-if="$ctrl.visualizationType === $ctrl.visualization.TYPES.COUNTRY" class="full-graph d3-chart"><div f-d3-country-chart data="$ctrl.dataForVisualization[$ctrl.visualization.TYPES.COUNTRY]" click="$ctrl.setRowClickFn" ng-mouseup="$ctrl.clickedRow = null; $ctrl.toggleMenu($ctrl.popUpMenu, $event)" tooltip-formatter="$ctrl.d3TooltipFormatter" legend-value-formatter="$ctrl.d3LegendValueFormatter"></div></div><div ng-if="$ctrl.visualizationType === $ctrl.visualization.TYPES.CHORD" class="full-graph d3-chart"><div f-d3-chord-chart data="$ctrl.dataForVisualization[$ctrl.visualization.TYPES.CHORD]" click="$ctrl.drilldownTo" drill-down-menu="menu.drillDownMenu" tooltip-formatter="$ctrl.d3TooltipFormatter"><div f-pop-up-menu="menu.drillDownMenu"><div f-menu-item-button click="$ctrl.drilldownTo(menu.entry, false)">{{ menu.entry.srcintf }}<f-icon class="fa-long-arrow-right"></f-icon>{{ menu.entry.dstintf }} ({{ menu.formatters[$ctrl.sortBy](menu.entry.realValue) }})</div><div f-menu-item-button click="$ctrl.drilldownTo(menu.entry, true)">{{ menu.entry.srcintf }}<f-icon class="fa-long-arrow-left"></f-icon>{{ menu.entry.dstintf }} ({{ menu.formatters[$ctrl.sortBy](menu.entry.reversed.realValue) }})</div></div></div></div></widget-content><extra-controls><f-icon class="fa-loading" ng-show="$ctrl.loading"></f-icon><span class="light-text">{{:: \'fv_\' + $ctrl.timeframe | lang}} </span><button type="button" class="bare" ng-click="$ctrl.refresh()"><div><f-icon class="fa-refresh"></f-icon></div></button></extra-controls></f-dashboard-widget><div f-pop-up-menu="$ctrl.popUpMenu"><div class="menu-item"><a class="button-style" ng-click="$ctrl.drilldownTo($ctrl.clickedRow)" ng-class="{ disabled: !$ctrl.fortiviewConfig.drilldownToFn}"><f-icon class="fa-external-link"></f-icon><span>{{ $ctrl.clickedRow ? \'Drill Down to Details\' : \'Open FortiView\' | lang}}</span></a></div></div>'),
$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-ha-history.html","<table class=\"table full-width bordered striped\"><thead><th>#</th><th>{{:: 'datetime' | lang }}</th><th>{{:: 'Log::column.event' | lang }}</th></thead><tbody><tr ng-repeat=\"log in ::$ctrl.history\"><td>{{:: $index + 1 }}</td><td>{{:: log.time|relativeDate }}</td><td>{{:: log.event }}</td></tr></tbody></table>"),$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-host-scan-summary-widget.html",'<f-dashboard-widget widget-model="::$ctrl.widgetModel" loading="$ctrl.loading"><widget-title>{{:: \'dashboard_widget_type::host-scan-summary\' | lang }}</widget-title><widget-content><fortiview-host-scan-summary-visualization class="full-graph d3-chart menu-toggle-area" ng-click="$ctrl.toggleMenu($ctrl.popUpMenu, $event)" data="$ctrl.hostScanSummaryData"></fortiview-host-scan-summary-visualization></widget-content></f-dashboard-widget><div f-pop-up-menu="$ctrl.popUpMenu"><div class="menu-item"><a class="button-style" href="/ng/fortiview/endpoint/all/device"><f-icon class="fa-external-link"></f-icon><span>{{::\'View vulnerable devices in FortiView\' | lang}}</span></a></div><div class="menu-item"><a class="button-style" href="/ng/user/forticlient_device"><f-icon class="fa-external-link"></f-icon><span>{{::\'View FortiClient Monitor\' | lang}}</span></a></div><div class="menu-item"><a class="button-style" href="/ng/user/device"><f-icon class="fa-external-link"></f-icon><span>{{::\'View Device Inventory\' | lang}}</span></a></div></div>'),$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-license-information-widget.html",'<f-dashboard-widget widget-model="::$ctrl.widgetModel" loading="$ctrl.loading" ng-class="{\'critical\': $ctrl.isCriticalStatus()}"><widget-title>{{::\'Licenses\' | lang}}<f-license-update-server widget-model="::$ctrl.widgetModel"></f-license-update-server></widget-title><widget-content><div class="license-container" f-equal-width><f-license-license-item license="$ctrl.licenses.forticare" item-title="::\'FortiCare Support\'" is-forticare="::true"></f-license-license-item><f-license-license-item license="$ctrl.licenses.ips" item-title="::\'ips\'" show-version="::true" show-expiry="::true" ng-if=":: $ctrl.state.featureEnabledInAnyVDOM(\'gui-ips\')"></f-license-license-item><f-license-license-item license="$ctrl.licenses.antivirus" item-title="::\'antivirus\'" show-version="::true" show-expiry="::true" ng-if="::$ctrl.state.featureEnabledInAnyVDOM(\'gui-antivirus\')"></f-license-license-item><f-license-license-item license="$ctrl.licenses.web_filtering" item-title="::\'web_filtering\'" show-expiry="::true" ng-if="::$ctrl.state.featureEnabledInAnyVDOM(\'gui-webfilter\')"></f-license-license-item><f-license-license-item license="$ctrl.licenses.antispam" item-title="::\'email_filtering\'" show-expiry="::true" ng-if="::$ctrl.state.featureEnabledInAnyVDOM(\'gui-spamfilter\')"></f-license-license-item><f-license-license-item license="$ctrl.licenses.mobile_malware" item-title="::\'mobile_malware\'" show-version="::true" show-expiry="::true"></f-license-license-item></div><div class="service-container"><f-license-service-item license="$ctrl.licenses.forticlient" item-title="::\'FortiClient\'" ng-click="$ctrl.toggleMenu($event, \'forticlient\')" class="menu-toggle-area" has-tooltip="::true" ng-if="::$ctrl.state.featureEnabledInAnyVDOM(\'gui-endpoint-control\')"></f-license-service-item><f-license-service-item license="$ctrl.licenses.vdom" item-title="::\'VDOM\'" ng-click="$ctrl.toggleMenu($event, \'vdom\')" class="menu-toggle-area" ng-if="::$ctrl.state.vdom_mode"></f-license-service-item><f-license-service-item license="$ctrl.licenses.fortitoken" item-title="::\'fortitoken\'" ng-click="$ctrl.toggleMenu($event, \'fortitoken\')" class="menu-toggle-area"></f-license-service-item></div></widget-content></f-dashboard-widget><div f-pop-up-menu="$ctrl.popUpMenu.forticlient"><div f-menu-item-button click="$ctrl.watchVideo(\'forticlient\')" ng-show="$ctrl.langKeys.forticlient"><f-icon class="fa-video-camera"></f-icon><span>{{ $ctrl.langKeys.forticlient.video | lang }}</span></div><div f-menu-item-button click="$ctrl.redirectTo(\'forticlient\')" ng-if="!$ctrl.state.vdom_mode"><f-icon class="fa-external-link"></f-icon><span>{{:: \'View in FortiClient Monitor\' | lang }}</span></div><div f-menu-item-submenu="$ctrl.popUpMenu.forticlientMonitor" ng-if="$ctrl.state.vdom_mode"><f-icon class="fa-external-link"></f-icon><span>{{:: \'View in FortiClient Monitor\' | lang }}</span></div><div f-pop-up-menu="$ctrl.popUpMenu.forticlientMonitor"><div f-menu-item-button ng-repeat="vdom in $ctrl.state.admin.vdoms" ng-if="vdom !== \'\'" click="$ctrl.redirectTo(\'forticlient\', vdom)"><f-object-formatted mkey="{{::vdom}}" datasource="availableVdoms"></f-object-formatted></div></div><div f-menu-item-button click="$ctrl.showSystemFortiGuard()"><f-icon class="fa-external-link"></f-icon><span>{{::\'View details in System > FortiGuard\' | lang}}</span></div><div f-menu-item-submenu="$ctrl.popUpMenu.forticlientDownload" ng-if="$ctrl.fortiClientInstallers.length"><f-icon class="fa-download"></f-icon><span>{{::\'Download FortiClient\' | lang}}</span></div><div f-pop-up-menu="$ctrl.popUpMenu.forticlientDownload" ng-if="$ctrl.fortiClientInstallers.length"><div f-menu-item-button ng-repeat="entry in ::$ctrl.fortiClientInstallers" click="$ctrl.downloadFortiClient(entry)"><f-icon ng-class="::entry.icon"></f-icon><span>{{::entry.langKey | lang}}</span></div></div></div><div f-pop-up-menu="$ctrl.popUpMenu.vdom"><div f-menu-item-button click="$ctrl.watchVideo(\'vdom\')" ng-show="$ctrl.langKeys.vdom"><f-icon class="fa-video-camera"></f-icon><span>{{ $ctrl.langKeys.vdom.video | lang }}</span></div><div f-menu-item-button click="$ctrl.registrationSlide(\'vdom_license\')" ng-show="$ctrl.langKeys.vdom" enabled="$ctrl.hasSystemWritePermission"><f-icon class="fa-pencil"></f-icon><span>{{ $ctrl.langKeys.vdom.text | lang }}</span></div><div f-menu-item-button click="$ctrl.redirectTo(\'vdom\')"><f-icon class="fa-external-link"></f-icon><span>{{:: \'View in System > VDOM\' | lang }}</span></div></div><div f-pop-up-menu="$ctrl.popUpMenu.fortitoken"><div f-menu-item-submenu="fortitokenPopUpMenu" ng-if="$ctrl.state.vdom_mode"><f-icon class="fa-external-link"></f-icon><span>{{:: \'View in FortiTokens\' | lang }}</span></div><div f-menu-item-button click="$ctrl.redirectTo(\'fortitoken\')" ng-if="!$ctrl.state.vdom_mode"><f-icon class="fa-external-link"></f-icon><span>{{:: \'View in FortiTokens\' | lang }}</span></div></div><div f-pop-up-menu="fortitokenPopUpMenu"><div f-menu-item-button ng-repeat="vdom in $ctrl.licenses.fortitoken.vdoms" click="$ctrl.redirectTo(\'fortitoken\', vdom.name)"><f-object-formatted mkey="{{::vdom.name}}" datasource="availableVdoms"></f-object-formatted></div></div>'),$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-license-license-item.html",'<div f-tip-target f-equal-width-item ng-click="$ctrl.showMenu($event)"><div class="severity-message clickable" ng-class="$ctrl.getSeverityLevel()"><f-icon class="{{ $ctrl.getStatusIcon() }}"></f-icon><span class="tooltip-hint">{{:: $ctrl.title | lang:$ctrl.titleParams || []}}</span></div><div f-tip><table class="table key-value"><tbody><tr><td>{{:: \'Status\' | lang }}</td><td><f-icon class="{{$ctrl.getStatusIcon($ctrl.license.status)}}"></f-icon><span>{{$ctrl.STATUS_BASE_LANG_KEY + $ctrl.license.status | lang}}</span></td></tr><tr ng-if="$ctrl.showExpiry && $ctrl.license.expires"><td>{{$ctrl.getExpiresLabel()}}</td><td>{{$ctrl.formatExpiryDate($ctrl.license.expires, $ctrl.license.timeZoneString)}}</td></tr><tr ng-if="$ctrl.isForticare && $ctrl.license.account != null"><td>{{:: \'Account\' | lang }}</td><td>{{ $ctrl.license.account }}</td></tr><tr ng-if="$ctrl.isForticare && $ctrl.license.account != null && $ctrl.license.company"><td>{{:: \'company\' | lang }}</td><td>{{ $ctrl.license.company }}</td></tr><tr ng-if="$ctrl.isForticare && $ctrl.license.account != null && $ctrl.license.industry"><td>{{:: \'Industry\' | lang }}</td><td>{{ $ctrl.translatedFortiCareIndustry() }}</td></tr><tr ng-if="$ctrl.isForticare" ng-repeat="(key, support) in $ctrl.license.support"><td>{{::$ctrl.getSupportLangKey(key) | lang}}</td><td><f-icon class="{{$ctrl.getStatusIcon(support.status)}}"></f-icon><span>{{:: support.support_level | langPrefixed:\'forticare_support_level::\' }}</span> <span>- {{$ctrl.formatExpiresLabel(support.status, support.expires)}}</span></td></tr><tr ng-if="$ctrl.showVersion && $ctrl.license.version != null"><td>{{:: \'version\' | lang }}</td><td>{{ $ctrl.license.version }}</td></tr></tbody></table></div></div><div f-pop-up-menu="$ctrl.menu"><div f-menu-item-button ng-if="$ctrl.isForticare &&\n        $ctrl.license.status === $ctrl.SYMBOLS.LICENSE_STATUS_REGISTERED" click="$ctrl.launchFortiCarePortal()"><f-icon class="fa-external-link"></f-icon><span>{{::\'Launch Portal\' | lang}}</span></div><div f-menu-item-button ng-if="$ctrl.isForticare &&\n        $ctrl.license.status === $ctrl.SYMBOLS.LICENSE_STATUS_NOT_REGISTERED" click="$ctrl.registerFortiCare()" enabled="$ctrl.hasSystemWritePermission"><f-icon class="fa-sign-in"></f-icon><span>{{::\'Register\' | lang}}</span></div><div f-menu-item-button ng-if="$ctrl.license.status === $ctrl.SYMBOLS.LICENSE_STATUS_NO_LICENSE" click="$ctrl.subscribeRenewVideo()"><f-icon class="fa-video-camera"></f-icon><span>{{::\'How to Subscribe\' | lang}}</span></div><div f-menu-item-button ng-if="$ctrl.license.status === $ctrl.SYMBOLS.LICENSE_STATUS_EXPIRED ||\n        $ctrl.license.status === $ctrl.SYMBOLS.LICENSE_STATUS_EXPIRES_SOON" click="$ctrl.subscribeRenewVideo()"><f-icon class="fa-video-camera"></f-icon><span>{{::\'How to Renew\' | lang}}</span></div><div f-menu-item-button ng-if="$ctrl.license.status === $ctrl.SYMBOLS.LICENSE_STATUS_EXPIRED ||\n        $ctrl.license.status === $ctrl.SYMBOLS.LICENSE_STATUS_EXPIRES_SOON ||\n        $ctrl.license.status === $ctrl.SYMBOLS.LICENSE_STATUS_NO_LICENSE" click="$ctrl.addFortiCareContract()" enabled="$ctrl.hasSystemWritePermission"><f-icon class="fa-plus-circle"></f-icon><span>{{::\'add_contract\' | lang}}</span></div><div f-menu-item-button ng-if="!$ctrl.license.status.includes(\'vm\')" click="$ctrl.showSystemFortiGuard()"><f-icon class="fa-external-link"></f-icon><span>{{::\'View details in System > FortiGuard\' | lang}}</span></div></div>'),$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-license-service-item.html",'<div class="service-item severity-message clickable" ng-class="$ctrl.getSeverityLevel()" f-tip-target><div class="service-title"><span ng-class="{\'tooltip-hint\': $ctrl.hasTooltip}">{{:: $ctrl.title | lang }} </span><span ng-if="$ctrl.license.max !== 0">{{ $ctrl.license.subTitle }} </span><span ng-if="$ctrl.license.max === 0">0 / 0</span></div><div class="service-detail"><div ng-if="!$ctrl.useProgressBar"><div ng-if="$ctrl.license.max > 0"><div f-resource-bar="$ctrl.license.percentage" show-percentage="::true"></div></div><div ng-if="$ctrl.license.max === 0"><div f-resource-bar="::0" show-percentage="::true"></div></div></div><div ng-if="$ctrl.useProgressBar"><div ng-if="$ctrl.license.max > 0"><div f-progress-bar="$ctrl.license.percentage" show-percentage="::true"></div></div><div ng-if="$ctrl.license.max === 0"><div f-progress-bar="::0" show-percentage="::true"></div></div></div></div><div f-tip ng-if="$ctrl.hasTooltip"><table class="table key-value"><tbody><tr ng-show="$ctrl.license.status"><td>{{:: \'Status\' | lang }}</td><td><f-icon class="{{$ctrl.getLicenseStatusIcon()}}"></f-icon><span>{{ $ctrl.STATUS_BASE_LANG_KEY + $ctrl.license.status | lang }}</span></td></tr><tr ng-show="$ctrl.license.expires"><td>{{$ctrl.getExpiresLabel()}}</td><td>{{$ctrl.formatExpiryDate($ctrl.license.expires, $ctrl.license.timeZoneString)}}</td></tr><tr ng-repeat="tooltip in $ctrl.extraTooltips"><td>{{ tooltip.key }}</td><td>{{ tooltip.value }}</td></tr></tbody></table></div></div>'),$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-license-update-server.html",'<span ng-if="$ctrl.fortiguard.server_address"><span ng-if="$ctrl.fgdIPLoading"><f-icon class="fa-loading"></f-icon></span><span f-tip-target ng-if="!$ctrl.fgdIPLoading">&nbsp; <span>(</span> <span ng-if="$ctrl.widgetModel.getWidth() >= 2">{{:: \'Update Server\' | lang }} :&nbsp; </span><span class="tooltip-hint"><span ng-if="$ctrl.fgdCountryISOCode" class="country_flag country_{{ $ctrl.fgdCountryISOCode }}"></span> <span>{{ $ctrl.fgdIP }}</span> </span><span>)</span><div f-tip><table class="table key-value slightly-condensed"><tbody><tr><td>{{:: \'Update Server\' | lang }}</td><td><span ng-if="$ctrl.fgdCountryISOCode" class="country_flag country_{{ $ctrl.fgdCountryISOCode }}"></span> <span>{{ $ctrl.fgdIP }}</span></td></tr><tr ng-if="$ctrl.fgdLocation"><td>{{:: \'location\' | lang }}</td><td><span>{{ $ctrl.fgdLocation }}</span></td></tr></tbody></table></div></span></span>'),$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-log-rate-widget.html",'<f-dashboard-widget widget-model="::$ctrl.widgetModel" min-column-span="::2" supports-zoom="::true" loading="$ctrl.loading"><widget-title>{{ $ctrl.title | lang }}</widget-title><extra-controls ng-if="!$ctrl.logRateDisabled"><button class="bare" f-pop-up-menu-toggle="$ctrl.timeOptionsMenu">{{ \'time_period::\' + $ctrl.currentTimeOption.name | lang }}</button><div f-pop-up-menu="$ctrl.timeOptionsMenu"><div f-menu-item-button ng-repeat="timeOption in $ctrl.timeOptions" selected="$ctrl.currentTimeOption === timeOption" ng-click="$ctrl.setTimeOption(timeOption)"><span>{{ \'time_period::\' + timeOption.name | lang }}</span></div></div></extra-controls><widget-content><div ng-if="!$ctrl.noLogSource" class="menu-toggle-area" ng-click="!$ctrl.noLogSource && $ctrl.toggleMenu($ctrl.popUpMenu, $event)"><div f-chart="$ctrl.lineChartConfig" ng-if="!$ctrl.noLogSource && $ctrl.lineChartConfig" class="full-graph with-current-stat"></div><div ng-if="!$ctrl.noLogSource" class="current-stat"><div ng-repeat="source in $ctrl.LOG_SOURCES" class="current-stat-item"><div class="chart-legend-item"><div class="chart-legend-color" ng-style="::{\'background-color\': source.color}"></div></div><span class="light-text">{{:: source.label | lang }}</span> <span class="current-stat-value">{{ \'{0}/s\' | lang:[$ctrl.logRates[$index][0].current] }}</span></div></div></div><div ng-if="$ctrl.noLogSource" class="menu-toggle-area full-dimension-widget flex-centered" ng-click="$ctrl.toggleMenu($ctrl.popUpMenu, $event)"><span>{{:: \'No Data\' | lang}}</span><f-icon class="fa-help-info icon-lg" f-tip title="{{:: \'No log data available. Check the log settings.\' | lang}}"></f-icon></div></widget-content></f-dashboard-widget><div f-pop-up-menu="$ctrl.popUpMenu"><div f-menu-item-button click="$ctrl.configureLogSettings()" ng-if="!$ctrl.state.vdom_mode"><f-icon class="fa-external-link"></f-icon><span>{{:: \'Configure settings in Log & Report > Log Settings\' | lang }}</span></div><div f-menu-item-submenu="$ctrl.diskLoggingPopUpMenu" ng-if="$ctrl.state.vdom_mode"><f-icon class="fa-external-link"></f-icon><span>{{:: \'Configure settings in Log & Report > Log Settings\' | lang }}</span></div></div><div f-pop-up-menu="$ctrl.diskLoggingPopUpMenu" ng-if="$ctrl.state.vdom_mode"><div f-menu-item-button ng-repeat="vdom in ::$ctrl.state.admin.vdoms" click="$ctrl.configureLogSettings(vdom)"><span ng-if="::vdom === \'\'"><f-icon class="fa-globe"></f-icon><span>{{ ::\'global\' | lang }}</span> </span><span ng-if="::vdom !== \'\'"><f-object-formatted mkey="{{::vdom}}" datasource="availableVdoms"></f-object-formatted></span></div></div>'),$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-mem-usage-widget.html",'<f-dashboard-widget widget-model="::$ctrl.widgetModel" supports-zoom="::true"><widget-title>{{::\'memory\' | lang}}</widget-title><extra-controls><button class="bare" f-pop-up-menu-toggle="$ctrl.timeOptionsMenu">{{ \'time_period::\' + $ctrl.currentTimeOption.name | lang }}</button><div f-pop-up-menu="$ctrl.timeOptionsMenu"><div f-menu-item-button ng-repeat="timeOption in $ctrl.timeOptions" selected="$ctrl.currentTimeOption === timeOption" ng-click="$ctrl.setTimeOption(timeOption)"><span>{{ \'time_period::\' + timeOption.name | lang }}</span></div></div></extra-controls><widget-content><div f-chart="$ctrl.stackedAreaChartConfig" class="full-graph with-current-stat"></div><div class="current-stat"><div class="current-stat-item"><span class="light-text">{{:: \'Current usage\' | lang }}</span> <span class="current-stat-value">{{ $ctrl.currentUsage + \'%\' }}</span></div></div></widget-content><widget-absolute><span ng-if="$ctrl.currentUsage >= 90" class="severity-message severity-high large pinned-message"><f-icon class="fa-severity-high"></f-icon><span>{{:: \'High memory usage\' | lang }}</span></span></widget-absolute></f-dashboard-widget>'),$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-security-fabric-widget.html",'<f-dashboard-widget widget-model="::$ctrl.widgetModel" loading="$ctrl.loading || $ctrl.extensionsLoading"><widget-title>{{$ctrl.title}}</widget-title><widget-content><f-csf-extension-devices-info loading="$ctrl.extensionsLoading"></f-csf-extension-devices-info><div class="separator-line"></div><f-tree-view source="$ctrl.fortigates" key="serial" parent-key="parentSerial" node-click="$ctrl.onNodeClick($event, node, $ctrl.treeNodePopUpMenu)"><list-bullet><f-icon class="{{:: treeNode.source.icon || \'ftnt-security-fabric-fortigate\' }}"></f-icon></list-bullet><list-content class="menu-toggle-area" ng-class="{\'current\': treeNode.source.isCurrent}"><div f-object-tooltip mkey="{{::treeNode.source.serial}}" datasource="csfFortiGates">{{:: treeNode.source.label || treeNode.source.serial }}</div></list-content></f-tree-view></widget-content><widget-absolute><div ng-if="!$ctrl.csfEnabled"><span class="severity-message severity-high large clickable pinned-message" ng-click="$ctrl.openMenu($event, $ctrl.fabricSettingsPopUpMenu)"><f-icon class="fa-severity-high"></f-icon><span f-lang="FortiGate Telemetry is disabled."></span></span></div></widget-absolute></f-dashboard-widget><div f-pop-up-menu="$ctrl.fabricSettingsPopUpMenu"><div f-menu-item-button click="$ctrl.configureFabricSettings()"><f-icon class="fa-external-link"></f-icon><span>{{::\'Configure settings in Security Fabric > Settings\' | lang}}</span></div></div><div f-pop-up-menu="$ctrl.treeNodePopUpMenu"><div f-menu-item-button click="$ctrl.showTopology(\'/fortiview/device/physical/all\')"><f-icon class="fa-external-link"></f-icon><span>{{::\'Show in Security Fabric > Physical Topology\' | lang}}</span></div><div f-menu-item-button click="$ctrl.showTopology(\'/fortiview/device/logical/all\')"><f-icon class="fa-external-link"></f-icon><span>{{::\'Show in Security Fabric > Logical Topology\' | lang}}</span></div></div>'),$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-sensor-information-widget-list-menu.html",'<div f-menu-bar qlist-element="$ctrl.listCtrl.qlistElement"><div class="left-menu-items"></div><div class="center-menu-items"></div><div class="right-menu-items"><f-radio-group><input type="radio" ng-repeat="unit in $ctrl.listCtrl.temperatureUnits" ng-model="$ctrl.listCtrl.temperatureUnit" radio-label="°{{:: unit }}" value="{{ unit }}"></f-radio-group></div></div>'),$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-sensor-information-widget-list.html",'<div class="qlist-view-container"><div class="qlist-menu-bar" ng-if="$ctrl.needMenu"><f-sensor-information-widget-list-menu></f-sensor-information-widget-list-menu></div><f-qlist qlist-element="$ctrl.qlistElement" source="$ctrl.entries" options="$ctrl.options"></f-qlist></div>'),$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-sensor-information-widget-tooltip.html",'<div class="severity-message {{ $ctrl.sensors.severityLevel }}" f-tip-target><f-icon class="{{ $ctrl.sensors.icon }}"></f-icon><span class="tooltip-hint">{{ $ctrl.STATUS_BASE_LANG_KEY + $ctrl.sensors.status | lang }}</span><div f-tip><div ng-show="$ctrl.sensors.count[$ctrl.STATUS.NORMAL] ===\n                      $ctrl.sensors.values.length"><f-icon class="{{ $ctrl.sensors.icon }}"></f-icon><span>{{:: \'all_working_properly\' | lang }}</span></div><table class="table key-value" ng-show="$ctrl.sensors.count[$ctrl.STATUS.NORMAL] !==\n                        $ctrl.sensors.values.length"><tbody><tr ng-show="$ctrl.sensors.count[$ctrl.STATUS.WARNING]"><td><f-icon class="{{:: $ctrl.ICON.WARNING }}"></f-icon><span>{{:: $ctrl.STATUS_BASE_LANG_KEY + \'warning\' | lang }}</span></td><td>{{ $ctrl.sensors.count[$ctrl.STATUS.WARNING] }} / {{ $ctrl.sensors.values.length }}</td></tr><tr ng-show="$ctrl.sensors.count[$ctrl.STATUS.ERROR]"><td><f-icon class="{{:: $ctrl.ICON.ERROR }}"></f-icon><span>{{:: $ctrl.STATUS_BASE_LANG_KEY + \'error\' | lang }}</span></td><td>{{ $ctrl.sensors.count[$ctrl.STATUS.ERROR] }} / {{ $ctrl.sensors.values.length }}</td></tr></tbody></table></div></div>'),$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-sensor-information-widget.html",'<f-dashboard-widget widget-model="::$ctrl.widgetModel" loading="$ctrl.loading"><widget-title>{{:: \'dashboard_widget_type::sensor-info\' | lang }}</widget-title><widget-content><table class="table key-value"><tbody><tr ng-if="$ctrl.temperature.values.length" ng-click="$ctrl.toggleMenu($event, \'temperature\')" class="menu-toggle-area"><td>{{:: \'Sensor::type.temperature\' | lang }}</td><td><f-sensor-information-widget-tooltip sensors="$ctrl.temperature"></f-sensor-information-widget-tooltip></td></tr><tr ng-if="$ctrl.power.values.length" ng-click="$ctrl.toggleMenu($event, \'power\')" class="menu-toggle-area"><td>{{:: \'Sensor::type.power\' | lang }}</td><td><f-sensor-information-widget-tooltip sensors="$ctrl.power"></f-sensor-information-widget-tooltip></td></tr><tr ng-if="$ctrl.fan.values.length" ng-click="$ctrl.toggleMenu($event, \'fan\')" class="menu-toggle-area"><td>{{:: \'Sensor::type.fan\' | lang }}</td><td><f-sensor-information-widget-tooltip sensors="$ctrl.fan"></f-sensor-information-widget-tooltip></td></tr></tbody></table></widget-content></f-dashboard-widget><div f-pop-up-menu="$ctrl.popUpMenu.temperature"><div f-menu-item-button click="$ctrl.showList(\'temperature\')"><f-icon class="fa-external-link"></f-icon><span>{{:: \'Show sensor details\' | lang }}</span></div></div><div f-pop-up-menu="$ctrl.popUpMenu.power"><div f-menu-item-button click="$ctrl.showList(\'power\')"><f-icon class="fa-external-link"></f-icon><span>{{:: \'Show sensor details\' | lang }}</span></div></div><div f-pop-up-menu="$ctrl.popUpMenu.fan"><div f-menu-item-button click="$ctrl.showList(\'fan\')"><f-icon class="fa-external-link"></f-icon><span>{{:: \'Show sensor details\' | lang }}</span></div></div>'),$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-session-rate-widget.html",'<f-dashboard-widget widget-model="::$ctrl.widgetModel" supports-zoom="::true"><widget-title>{{::\'dashboard_widget_type::session-rate\' | lang}}</widget-title><extra-controls><button class="bare" f-pop-up-menu-toggle="$ctrl.timeOptionsMenu">{{ \'time_period::\' + $ctrl.currentTimeOption.name | lang }}</button><div f-pop-up-menu="$ctrl.timeOptionsMenu"><div f-menu-item-button ng-repeat="timeOption in $ctrl.timeOptions" selected="$ctrl.currentTimeOption === timeOption" ng-click="$ctrl.setTimeOption(timeOption)"><span>{{ \'time_period::\' + timeOption.name | lang }}</span></div></div></extra-controls><widget-content><div f-chart="$ctrl.lineChartConfig" class="full-graph with-current-stat"></div><div class="current-stat"><div class="current-stat-item"><span class="light-text">{{:: \'Current session rate\' | lang }}</span> <span class="current-stat-value">{{ \'{0}/s\' | lang:[$ctrl.currentSessionRate] }}</span></div></div></widget-content></f-dashboard-widget>'),$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-sessions-widget.html",'<f-dashboard-widget widget-model="::$ctrl.widgetModel" supports-zoom="::true"><widget-title>{{:: \'sessions\' | lang }}</widget-title><extra-controls><button class="bare" f-pop-up-menu-toggle="$ctrl.timeOptionsMenu">{{ \'time_period::\' + $ctrl.currentTimeOption.name | lang }}</button><div f-pop-up-menu="$ctrl.timeOptionsMenu"><div f-menu-item-button ng-repeat="timeOption in $ctrl.timeOptions" selected="$ctrl.currentTimeOption === timeOption" ng-click="$ctrl.setTimeOption(timeOption)"><span>{{ \'time_period::\' + timeOption.name | lang }}</span></div></div></extra-controls><widget-content><div f-chart="$ctrl.lineChartConfig" class="full-graph with-current-stat"></div><div class="current-stat"><div class="current-stat-item"><span class="light-text">{{:: \'Current sessions\' | lang }}</span> <span class="current-stat-value">{{ $ctrl.currentSessions }}</span></div><div class="current-stat-item" ng-if="$ctrl.npuSessions"><div class="chart-legend-item"><div class="chart-legend-color" ng-style="::{\'background-color\': $ctrl.NPU_COLOR}"></div></div><span class="light-text">{{:: \'SPU\' | lang }}</span> <span class="current-stat-value">{{ $ctrl.currentNpuUsage }}</span></div><div class="current-stat-item" ng-if="$ctrl.nturboSessions"><div class="chart-legend-item"><div class="chart-legend-color" ng-style="::{\'background-color\': $ctrl.NTURBO_COLOR}"></div></div><span class="light-text">{{:: \'nTurbo\' | lang }}</span> <span class="current-stat-value">{{ $ctrl.currentNturboUsage }}</span></div></div></widget-content></f-dashboard-widget>'),$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-system-admins-widget.html",'<f-dashboard-widget widget-model="::$ctrl.widgetModel" loading="$ctrl.loading"><widget-title>{{::\'dashboard_widget_type::admins\' | lang}}</widget-title><widget-content><div class="flex-row-align-start menu-toggle-area" ng-class="{\'full-dimension-widget\': $ctrl.fullDimension}" ng-click="$ctrl.toggleMenu($ctrl.popUpMenu, $event)"><div class="admin-circles-count-container"><div><div class="flex-centered text-with-circle">{{:: $ctrl.adminCount }}</div><div class="flex-column-centered">{{:: \'Logged in\' | lang }}</div></div><div><div class="flex-centered text-with-circle"><span f-tip-target><span class="tooltip-hint">{{:: $ctrl.sessionCount }}</span><div f-tip><table class="table key-value"><tbody><tr ng-repeat="admin in $ctrl.admins"><td>{{:: admin.name }}</td><td><div ng-repeat="(method, count) in admin.methods">{{:: \'AdminConnection::metnod.\' + method | lang }}<span ng-if="count > 1"> &times; {{:: count }}</span></div></td></tr></tbody></table></div></span></div><div class="flex-column-centered">{{:: \'Sessions\' | lang }}</div></div></div><div><table class="table"><tbody><tr ng-repeat="key in $ctrl.displayKeys"><td>{{:: $ctrl.admins[key].name }}</td><td class="light-text">{{:: $ctrl.admins[key].profile }}</td></tr><tr ng-if="$ctrl.remainingKeys.length > 0"><td colspan="2"><span f-tip-target><span class="tooltip-hint">{{:: $ctrl.remainingKeys.length }} {{:: \'more\' | lang }}</span><div f-tip><table class="table"><tbody><tr ng-repeat="key in $ctrl.remainingKeys"><td>{{:: $ctrl.admins[key].name }}</td><td class="light-text">{{:: $ctrl.admins[key].profile }}</td></tr></tbody></table></div></span></td></tr></tbody></table></div></div></widget-content></f-dashboard-widget><div f-pop-up-menu="$ctrl.popUpMenu"><div f-menu-item-button click="$ctrl.showAdminsList()"><f-icon class="fa-external-link"></f-icon><span>{{::\'Show active administrator sessions\' | lang}}</span></div></div>'),$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-system-dashboard.html",'<f-dashboard widget-size="::$ctrl.WIDGET_SIZE" fixed="$ctrl.dashboard[\'layout-type\'] === \'fixed\'" fixed-columns="$ctrl.dashboard.columns" dashboard="$ctrl.dashboardController" on-widgets-updated="$ctrl.onWidgetsUpdated(widgets)" on-widget-removed="$ctrl.onWidgetRemoved(widget)" initial-widgets="$ctrl.initialWidgets" show-controls="$ctrl.showHiddenControls" loading="$ctrl._loading"><dashboard-controls><div class="hidden-controls" f-vertical-collapse ng-show="$ctrl.showHiddenControls"><button type="button" ng-click="$ctrl.editDashboard()"><div class="flex-button-content"><f-icon class="fa-plus icon-lg"></f-icon><div class="button-label">{{::\'Add Dashboard\' | lang}}</div></div></button> <button type="button" ng-click="$ctrl.editDashboard($ctrl.dashboard.id, $ctrl.dashboard.name)"><div class="flex-button-content"><f-icon class="fa-pencil icon-lg"></f-icon><div class="button-label">{{::\'Edit Dashboard\' | lang}}</div></div></button> <button type="button" ng-click="$ctrl.deleteDashboard()"><div class="flex-button-content"><f-icon class="fa-trash-o icon-lg"></f-icon><div class="button-label">{{::\'Delete Dashboard\' | lang}}</div></div></button> <button type="button" ng-click="$ctrl.resetDashboards()"><div class="flex-button-content"><f-icon class="fa-rotate-left icon-lg"></f-icon><div class="button-label">{{::\'Reset Dashboards\' | lang}}</div></div></button><div class="separator-line"></div><button type="button" ng-click="$ctrl.addWidget()"><div class="flex-button-content"><f-icon class="fa-plus icon-lg"></f-icon><div class="button-label">{{::\'Add Widget\' | lang}}</div></div></button></div><div class="visible-controls"><button type="button" ng-click="$ctrl.showHiddenControls = !$ctrl.showHiddenControls" ng-class="{primary: $ctrl.showHiddenControls}"><div><f-icon class="fa-cog icon-lg"></f-icon></div></button></div></dashboard-controls></f-dashboard>'),$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-system-ha-widget-tooltip.html","<div class=\"tooltip-hint\" f-tip-target ng-class=\"$ctrl.node.severityLevel && ['severity-message', $ctrl.node.severityLevel, 'flush-left']\"><f-icon class=\"{{ $ctrl.node.icon }}\"></f-icon><span>{{ $ctrl.node.hostname }}</span><div f-tip><table class=\"table key-value\"><tbody><tr><td>{{:: 'Status' | lang }}</td><td><f-icon class=\"{{ $ctrl.node.icon }}\"></f-icon><span ng-show=\"$ctrl.node.checksumUnsynced\">{{:: 'Not Synchronized' | lang }} </span><span ng-show=\"!$ctrl.node.checksumUnsynced\">{{:: 'Synchronized' | lang }}</span></td></tr><tr><td>{{:: 'serial' | lang }}</td><td>{{ $ctrl.node.serial }}</td></tr><tr><td>{{:: 'checksum' | lang }}</td><td>{{ $ctrl.node.checksum }}</td></tr></tbody></table></div></div>"),$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-system-ha-widget.html",'<f-dashboard-widget widget-model="::$ctrl.widgetModel" loading="$ctrl.loading"><widget-title>{{:: \'dashboard_widget_type::ha-status\' | lang }}</widget-title><widget-content><div class="menu-toggle-area" ng-click="$ctrl.toggleMenu($ctrl.popUpMenu, $event)"><table class="table key-value"><tbody ng-if="$ctrl.haEnabled"><tr><td>{{:: \'mode\' | lang }}</td><td>{{ $ctrl.ha.mode | lang }}</td></tr><tr><td>{{:: \'group\' | lang }}</td><td>{{ $ctrl.ha.group }}</td></tr><tr ng-repeat="vc in $ctrl.ha.cluster.master.vclusters" ng-if="$ctrl.ha.cluster.master.secondaryVCluster"><td>{{:: \'Virtual cluster {ID}\' | lang:[$index + 1] }}</td><td><div ng-repeat="vd in vc.vdoms"><f-object-formatted mkey="{{::vd.name}}" datasource="availableVdoms"></f-object-formatted></div></td></tr><tr><td>{{:: \'ha_master\' | lang }}</td><td><f-system-ha-widget-tooltip cluster-node="$ctrl.ha.cluster.master"></f-system-ha-widget-tooltip></td></tr><tr ng-if="$ctrl.ha.cluster.slaves.length" ng-repeat="node in $ctrl.ha.cluster.slaves"><td>{{:: \'ha_slave\' | lang }}</td><td><f-system-ha-widget-tooltip cluster-node="node"></f-system-ha-widget-tooltip></td></tr><tr><td>{{:: \'field_uptime\' | lang }}</td><td>{{ $ctrl.ha.uptime * 1000 | elapsedTime: \'short\' }}</td></tr><tr><td>{{:: \'State Changed\' | lang }}</td><td f-tip-target><span>{{ $ctrl.ha.lastChange * 1000 | elapsedTime: \'short\' }}</span><div f-tip ng-if="$ctrl.ha.history.history[0]">{{ $ctrl.ha.history.history[0].time|relativeDate }} {{ $ctrl.ha.history.history[0].event }}</div></td></tr></tbody><tbody ng-if="!$ctrl.haEnabled"><tr><td>{{:: \'ha_mode\' | lang }}</td><td>{{:: \'ha_standalone\' | lang }}</td></tr></tbody></table></div></widget-content></f-dashboard-widget><div f-pop-up-menu="$ctrl.popUpMenu"><div f-menu-item-button click="$ctrl.toHaSetting()"><f-icon class="fa-external-link"></f-icon><span>{{:: \'Configure settings in System > HA\' | lang }}</span></div><div f-menu-item-button click="$ctrl.showHaHistory()" ng-if="$ctrl.ha.history.history[0]"><f-icon class="fa-external-link"></f-icon><span>{{:: \'Show HA historical events\' | lang }}</span></div></div>'),
$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-system-information-widget.html",'<f-dashboard-widget widget-model="::$ctrl.widgetModel" loading="$ctrl.loading"><widget-title>{{::\'dashboard_widget_type::sysinfo\' | lang}}</widget-title><widget-content><div class="menu-toggle-area" ng-click="$ctrl.toggleMenu($ctrl.popUpMenu, $event)"><table class="table key-value"><tbody><tr ng-if="$ctrl.state.region_code"><td>{{::\'hardware\' | lang}}</td><td>{{::$ctrl.getHardwareVersion()}}</td></tr><tr><td>{{::\'hostname\' | lang}}</td><td>{{::$ctrl.state.hostname}}</td></tr><tr><td>{{::\'sn\' | lang}}</td><td>{{::$ctrl.state.serial}}</td></tr><tr><td>{{::\'firmware\' | lang}}</td><td>{{::$ctrl.state.version + \' build\'}}{{::$ctrl.state.build | buildNumber}} ({{::$ctrl.BUILD.PLATFORM.CONFIG_BUILD_LABEL}})</td></tr><tr ng-if="::$ctrl.state.vdom_mode"><td>{{::\'vdoms\' | lang}}</td><td><f-icon class="fa-enabled"></f-icon></td></tr><tr ng-if="::!$ctrl.state.vdom_mode"><td>{{::\'mode\' | lang}}</td><td>{{::$ctrl.state.getOperationMode() | lang}} ({{::\'inspection_mode::\' + $ctrl.state.getInspectionMode() | lang}})</td></tr><tr><td>{{::\'sys_time\' | lang}}</td><td f-tip-target><span ng-class="{\'tooltip-hint\': $ctrl.timeSettingsSupport}">{{$ctrl.currentTime | date: \'yyyy/MM/dd HH:mm:ss\' : $ctrl.timeZoneString}}</span><div f-tip ng-if="$ctrl.timeSettingsSupport"><table class="table key-value slightly-condensed"><tbody><tr><td>{{::\'timezone\' | lang}}</td><td>{{::$ctrl.timeZoneSetting}}</td></tr><tr><td>{{::\'Time Source\' | lang}}</td><td>{{::$ctrl.getTimeSourceString() | lang}}</td></tr></tbody></table></div></td></tr><tr><td>{{::\'field_uptime\' | lang}}</td><td f-tip-target><span class="tooltip-hint">{{$ctrl.uptime | elapsedTime: \'short\'}}</span><div f-tip><div>{{::"Up since {0}" | lang: [$ctrl.getLastRebootTimeString()]}}</div></div></td></tr><tr><td>{{::\'WAN IP\' | lang}}</td><td f-tip-target><f-icon class="fa-loading" ng-if="$ctrl.wanIPLoading"></f-icon><div ng-if="!$ctrl.wanIPLoading" ng-class="{\'severity-message severity-critical\' : $ctrl.isWanIPBlackListed}" ng-click="$ctrl.wanIPClick($event)"><span ng-if="::$ctrl.wanCountryISOCode && !$ctrl.isWanIPBlackListed" class="country_flag country_{{::$ctrl.wanCountryISOCode}}"></span><f-icon ng-if="$ctrl.isWanIPBlackListed" class="fa-severity-critical"></f-icon><span>{{$ctrl.wanIP}}</span><div f-tip ng-if="($ctrl.wanLocation || $ctrl.isWanIPBlackListed) && !$ctrl.wanIPSlideout"><div><table class="table key-value slightly-condensed"><tbody><tr ng-if="$ctrl.isWanIPBlackListed"><td>{{:: \'Status\' | lang }}</td><td><f-icon class="fa-severity-critical"></f-icon><span>{{:: \'Blacklisted\' | lang }}</span></td></tr><tr ng-if="$ctrl.wanLocation"><td>{{::\'location\' | lang}}</td><td><span ng-if="$ctrl.isWanIPBlackListed" class="country_flag country_{{::$ctrl.wanCountryISOCode}}"></span> <span>{{$ctrl.wanLocation}}</span></td></tr></tbody></table></div></div></div></td></tr></tbody></table></div></widget-content><widget-absolute><span class="severity-message severity-low large clickable pinned-message" ng-if="$ctrl.newerFirmware" ng-click="$ctrl.toggleMenu($ctrl.firmwareMenu, $event)"><f-icon class="fa-severity-low"></f-icon><span>{{:: \'{0} available\' | lang: [$ctrl.newerFirmware]}}</span></span></widget-absolute></f-dashboard-widget><div f-pop-up-menu="$ctrl.popUpMenu"><div f-menu-item-button click="$ctrl.showSystemSettings()"><f-icon class="fa-external-link"></f-icon><span>{{::\'Configure settings in System > Settings\' | lang}}</span></div><div f-menu-item-button click="$ctrl.showSystemFirmware()"><f-icon class="fa-external-link"></f-icon><span>{{::\'Update firmware in System > Firmware\' | lang}}</span></div></div><div f-pop-up-menu="$ctrl.firmwareMenu"><div f-menu-item-button click="$ctrl.showSystemFirmware()"><f-icon class="fa-external-link"></f-icon><span>{{::\'View in System > Firmware\' | lang}}</span></div><div f-menu-item-button click="$ctrl.newerFirmware = null"><f-icon class="fa-times"></f-icon><span>{{::\'Dismiss\' | lang}}</span></div></div>'),$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-traffic-history-widget.html",'<f-dashboard-widget widget-model="::$ctrl.widgetModel" supports-zoom="::true" has-settings="::true" on-settings="$ctrl.dashboard.editWidget($ctrl.widgetModel)"><widget-title>{{::\'Bandwidth\' | lang}} -&nbsp;<f-object-formatted mkey="{{::$ctrl.interface}}" datasource="global::firewallInterfaces"></f-object-formatted></widget-title><widget-content><div f-chart="$ctrl.combinedChartConfig" resizing="$ctrl.chartResizing" class="full-graph" ng-class="{\'selection-disabled\': $ctrl.isSelectionDisabled}" ng-if="$ctrl.relativeWidth < 3"></div><div f-chart="$ctrl.inboundChartConfig" resizing="$ctrl.chartResizing" class="left-graph" ng-class="{\'selection-disabled\': $ctrl.isSelectionDisabled}" ng-if="$ctrl.relativeWidth >= 3"></div><div f-chart="$ctrl.outboundChartConfig" resizing="$ctrl.chartResizing" class="right-graph" ng-class="{\'selection-disabled\': $ctrl.isSelectionDisabled}" ng-if="$ctrl.relativeWidth >= 3"></div><div class="current-bandwidth"><div class="chart-legend-item-container"><div class="chart-legend-item"><div class="chart-legend-color" ng-style="::{\'background-color\': $ctrl.INBOUND_COLOR}"></div></div><span class="light-text">{{::\'Inbound\' | lang}}</span> <span class="bandwidth-item-value">{{$ctrl.lastRx | bitsPerSecond}}</span></div><div class="chart-legend-item-container"><div class="chart-legend-item"><div class="chart-legend-color" ng-style="::{\'background-color\': $ctrl.OUTBOUND_COLOR}"></div></div><span class="light-text">{{::\'Outbound\' | lang}}</span> <span class="bandwidth-item-value">{{$ctrl.lastTx | bitsPerSecond}}</span></div></div></widget-content><extra-controls><button type="button" class="bare" f-pop-up-menu-toggle="$ctrl.periodMenu">{{\'time_period::\' + $ctrl.timePeriod | lang}}</button></extra-controls></f-dashboard-widget><div f-pop-up-menu="$ctrl.periodMenu"><div f-menu-item-button ng-repeat="period in ::$ctrl.TIME_PERIODS" click="$ctrl.timePeriod = period" selected="$ctrl.timePeriod === period">{{::\'time_period::\' + period | lang}}</div></div><div f-pop-up-menu="$ctrl.timeSelectionMenu"><div class="heading">{{$ctrl.selectedTimePeriodStart | date: \'yyyy/MM/dd HH:mm:ss\'}} - {{$ctrl.selectedTimePeriodEnd | date: \'yyyy/MM/dd HH:mm:ss\'}}</div><div f-menu-item-submenu="$ctrl.timeSelectionSubMenu"><f-icon class="fa-external-link"></f-icon><span>{{::\'View in FortiView\' | lang}}</span></div><div f-pop-up-menu="$ctrl.timeSelectionSubMenu"><div f-menu-item-button click="$ctrl.fortiViewDrilldown(\'srcintf\')"><f-icon class="fa-long-arrow-right"></f-icon><span>{{::\'Source interface {0}\' | lang: [$ctrl.interface]}}</span></div><div f-menu-item-button click="$ctrl.fortiViewDrilldown(\'dstintf\')"><f-icon class="fa-long-arrow-left"></f-icon><span>{{::\'Destination interface {0}\' | lang: [$ctrl.interface]}}</span></div></div></div>'),$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-vm-information-widget.html",'<f-dashboard-widget widget-model="::$ctrl.widgetModel" loading="$ctrl.loading" ng-class="$ctrl.getSeverityStatusClass()"><widget-title>{{::\'Virtual Machine\' | lang}}</widget-title><widget-content><div class="menu-toggle-area" ng-click="$ctrl.toggleMenu($ctrl.popUpMenu, $event)"><div class="license-container" f-equal-width><f-license-license-item license="$ctrl.vm.status" item-title="::($ctrl.vm.closed_network ? \'{MODEL} License for Closed Network\' : \'{MODEL} License\')" item-title-params="[$ctrl.vm.license_platform_name]" show-expiry="::true"></f-license-license-item></div><div class="service-container"><f-license-service-item license="$ctrl.vm.license_expiry_date" item-title="::$ctrl.vm.license_expiry_label" has-tooltip="true" extra-tooltips="$ctrl.vm.extraTooltips" ng-if="$ctrl.vm.evaluation_mode || $ctrl.vm.closed_network"></f-license-service-item><f-license-service-item license="$ctrl.vm.cpu" item-title="::\'License::vm_usage.cpu\'" use-progress-bar="::true"></f-license-service-item><f-license-service-item license="$ctrl.vm.mem" item-title="::\'License::vm_usage.mem\'" use-progress-bar="::true"></f-license-service-item><f-license-service-item license="$ctrl.vm.vmx_instance" item-title="::\'License::vm_usage.vmx_instance\'" ng-if="::$ctrl.isSVM" use-progress-bar="::true"></f-license-service-item></div></div></widget-content></f-dashboard-widget><div f-pop-up-menu="$ctrl.popUpMenu"><div f-menu-item-button click="$ctrl.redirectTo(\'vmlicense\')" enabled="$ctrl.hasSystemWritePermission"><f-icon class="fa-external-link"></f-icon><span>{{:: \'FortiGate VM License\' | lang }}</span></div><div f-menu-item-button click="$ctrl.redirectTo(\'systemFortiGuard\')"><f-icon class="fa-external-link"></f-icon><span>{{::\'View details in System > FortiGuard\' | lang}}</span></div></div>'),$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-vulnerability-summary-widget.html",'<f-dashboard-widget widget-model="::$ctrl.widgetModel" loading="$ctrl.loading"><widget-title>{{:: \'dashboard_widget_type::vulnerability-summary\' | lang }}</widget-title><widget-content><fortiview-vulnerability-summary-visualization data="$ctrl.vulnerabilitySummaryData" class="flex-column-centered menu-toggle-area" ng-click="$ctrl.toggleMenu($ctrl.popUpMenu, $event)"><div style="order: 2" class="flex-row flex-wrap"><div class="categoryItem" ng-repeat="category in $ctrl.vulnerabilitySummaryData.vulnerabilityCategories"><h2>{{ $ctrl.vulnerabilitySummaryData.vulncat[category] || 0 }}</h2>{{ category | lang }}</div></div></fortiview-vulnerability-summary-visualization></widget-content></f-dashboard-widget><div f-pop-up-menu="$ctrl.popUpMenu"><div class="menu-item"><a class="button-style" href="/ng/fortiview/endpoint/all/vulnerability"><f-icon class="fa-external-link"></f-icon><span>{{::\'View in FortiView\' | lang}}</span></a></div></div>'),$templateCache.put("/30cf633bfb2210af603f817d96aeaf32/ng/system/dashboard/f-widget-selection.html",'<f-dialog hide-title="::true" form="$ctrl.form"><dialog-content><div ng-if="!$ctrl.selectedType"><div class="section-title" ng-repeat-start="(category, widgets) in ::$ctrl.categorizedWidgets" ng-class="{\'first-section\': $first}"><h2><f-icon ng-class="::$ctrl.data.WIDGET_CATEGORY_ICONS[category]"></f-icon><span>{{::\'dashboard_widget_category::\' + category | lang}}</span></h2></div><section ng-repeat-end><button type="button" class="button-lg" ng-repeat="entry in ::widgets" ng-disabled="$ctrl.typeCounts[entry.type] >= entry.limit" ng-click="$ctrl.selectWidget(entry)">{{::entry.label}}</button></section></div><div ng-if="$ctrl.selectedType"><div f-compile="::$ctrl.customizeComponent"></div></div></dialog-content><dialog-footer><button type="button" class="primary" ng-click="$ctrl.addCustomizedWidget()" ng-if="$ctrl.selectedType">{{::\'Add Widget\' | lang}}</button> <button type="button" ng-click="$ctrl.close()"><span ng-if="$ctrl.selectedType && !$ctrl.data.prefilledWidget">{{::\'back\' | lang}} </span><span ng-if="!$ctrl.selectedType || $ctrl.data.prefilledWidget">{{::\'close\' | lang}}</span></button></dialog-footer></f-dialog>')}}});